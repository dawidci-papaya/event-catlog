const Ul=new Map,En=[],zb=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=Ul.get(e);if(s===void 0)Ul.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const n=En.indexOf(e);n!==-1&&En.splice(n,1);for(let o=0;o<En.length;o++)if(Ul.get(En[o]).priority<=t){En.splice(o,0,e);return}En.push(e)}return}throw new TypeError("not a valid backend")},Bb=async e=>{const r=Ul.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},ew=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?En:t;let n;const o=[],i=new Set;for(const l of s){const c=await Bb(l);typeof c=="string"?o.push({name:l,err:c}):(n||(n=c),n===c&&i.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${o.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of o)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},Rb="1.20.1";let ym="warning";const as={wasm:{},webgl:{},webgpu:{},versions:{common:Rb},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);ym=e}},get logLevel(){return ym}};Object.defineProperty(as,"logLevel",{enumerable:!0});const Nb=as,jb=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let n,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[3]):(n=e.dims[3],o=e.dims[2]);const i=r?.format!==void 0?r.format:"RGB",a=r?.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=o*n;let u=0,h=p,w=p*2,_=-1;i==="RGBA"?(u=0,h=p,w=p*2,_=p*3):i==="RGB"?(u=0,h=p,w=p*2):i==="RBG"&&(u=0,w=p,h=p*2);for(let C=0;C<o;C++)for(let F=0;F<n;F++){const T=(e.data[u++]-c[0])*l[0],g=(e.data[h++]-c[1])*l[1],$=(e.data[w++]-c[2])*l[2],P=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+T+","+g+","+$+","+P+")",s.fillRect(F,C,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Vb=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let n,o,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[1],i=e.dims[3]):(n=e.dims[3],o=e.dims[2],i=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const u=o*n;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const h=4;let w=0,_=1,C=2,F=3,T=0,g=u,$=u*2,P=-1;a==="RGBA"?(T=0,g=u,$=u*2,P=u*3):a==="RGB"?(T=0,g=u,$=u*2):a==="RBG"&&(T=0,$=u,g=u*2),s=t.createImageData(n,o);for(let y=0;y<o*n;w+=h,_+=h,C+=h,F+=h,y++)s.data[w]=(e.data[T++]-p[0])*c[0],s.data[_]=(e.data[g++]-p[1])*c[1],s.data[C]=(e.data[$++]-p[2])*c[2],s.data[F]=P===-1?255:(e.data[P++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Od=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,n=r.norm??{mean:255,bias:0};let o,i;typeof n.mean=="number"?o=[n.mean,n.mean,n.mean,n.mean]:o=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?i=[n.bias,n.bias,n.bias,n.bias]:i=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let u=4,h=0,w=1,_=2,C=3,F=0,T=c,g=c*2,$=-1;a==="RGB"&&(u=3,h=0,w=1,_=2,C=-1),l==="RGBA"?$=c*3:l==="RBG"?(F=0,g=c,T=c*2):l==="BGR"&&(g=0,T=c,F=c*2);for(let y=0;y<c;y++,h+=u,_+=u,w+=u,C+=u)p[F++]=(e[h]+i[0])/o[0],p[T++]=(e[w]+i[1])/o[1],p[g++]=(e[_]+i[2])/o[2],$!==-1&&C!==-1&&(p[$++]=(e[C]+i[3])/o[3]);return l==="RGBA"?new Xr("float32",p,[1,4,t,s]):new Xr("float32",p,[1,3,t,s])},Ub=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o=typeof e=="string";let i,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){let h=e.height,w=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,w=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=w}else a.tensorFormat="RGBA",a.height=h,a.width=w;u.drawImage(e,0,0),i=u.getImageData(0,0,w,h).data}else throw new Error("Can not access image data")}else if(s){let p,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,u=r.resizedWidth):(p=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=u,r!==void 0){const h=l();h.width=u,h.height=p;const w=c(h);if(w!=null)w.putImageData(e,0,0),i=w.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const u=c(p);if(u!=null){const h=e.height,w=e.width;return u.drawImage(e,0,0,w,h),i=u.getImageData(0,0,w,h).data,a.height=h,a.width=w,Od(i,a)}else throw new Error("Can not access image data")}else{if(o)return new Promise((p,u)=>{const h=l(),w=c(h);if(!e||!w)return u();const _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{h.width=_.width,h.height=_.height,w.drawImage(_,0,0,h.width,h.height);const C=w.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,p(Od(C.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Od(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Wb=(e,r)=>{const{width:t,height:s,download:n,dispose:o}=r,i=[1,s,t,4];return new Xr({location:"texture",type:"float32",texture:e,dims:i,download:n,dispose:o})},Gb=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:o}=r;return new Xr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:o})},Kb=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:o}=r;return new Xr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:o})},Hb=(e,r,t)=>new Xr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),wo=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Wl=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Mm=!1;const qb=()=>{if(!Mm){Mm=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=typeof Float16Array<"u"&&Float16Array.from;e&&(wo.set("int64",BigInt64Array),Wl.set(BigInt64Array,"int64")),r&&(wo.set("uint64",BigUint64Array),Wl.set(BigUint64Array,"uint64")),t?(wo.set("float16",Float16Array),Wl.set(Float16Array,"float16")):wo.set("float16",Uint16Array)}},Qb=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Xb=(e,r)=>{switch(e.location){case"cpu":return new Xr(e.type,e.data,r);case"cpu-pinned":return new Xr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Xr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Xr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Xr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let Xr=class{constructor(r,t,s){qb();let n,o;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,n=r.type,o=r.dims,r.location){case"cpu-pinned":{const a=wo.get(n);if(!a)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(n=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=wo.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${n} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")n="string",a=r;else if(c==="boolean")n="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)n="uint8",a=Uint8Array.from(r);else{const c=Wl.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);n=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");o=l,this.cpuData=a,this.dataLocation="cpu"}const i=Qb(o);if(this.cpuData&&i!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=o,this.size=i}static async fromImage(r,t){return Ub(r,t)}static fromTexture(r,t){return Wb(r,t)}static fromGpuBuffer(r,t){return Gb(r,t)}static fromMLTensor(r,t){return Kb(r,t)}static fromPinnedBuffer(r,t,s){return Hb(r,t,s)}toDataURL(r){return jb(this,r)}toImageData(r){return Vb(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Xb(this,r)}};const os=Xr,tw=(e,r)=>{(typeof as.trace>"u"?!as.wasm.trace:!as.trace)||console.timeStamp(`${e}::ORT::${r}`)},rw=(e,r)=>{const t=new Error().stack?.split(/\r\n|\r|\n/g)||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),tw("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Ac=e=>{(typeof as.trace>"u"?!as.wasm.trace:!as.trace)||rw("BEGIN",e)},Ic=e=>{(typeof as.trace>"u"?!as.wasm.trace:!as.trace)||rw("END",e)};let Jb=class sw{constructor(r){this.handler=r}async run(r,t,s){Ac();const n={};let o={};if(typeof r!="object"||r===null||r instanceof os||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof os)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);n[c]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const u of this.outputNames)if(p.indexOf(u)!==-1){const h=t[u];(h===null||h instanceof os)&&(c=!0,i=!1,n[u]=h)}if(c){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(const c of this.outputNames)n[c]=null;const a=await this.handler.run(r,n,o),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof os?l[c]=p:l[c]=new os(p.type,p.data,p.dims)}return Ic(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){Ac();let o,i={};if(typeof r=="string"){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let u=0,h=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-u,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||u+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(p,u,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await ew(i),c=await a.createInferenceSessionHandler(o,l);return Ic(),new sw(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Yb=Jb,Zb="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";let ev=class nw{constructor(r,t,s){this.handler=r,this.hasOptimizerModel=t,this.hasEvalModel=s}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(r,t){const s=r.evalModel||"",n=r.optimizerModel||"",o=t||{},[i,a]=await ew(o);if(i.createTrainingSessionHandler){const l=await i.createTrainingSessionHandler(r.checkpointState,r.trainModel,s,n,a);return new nw(l,!!r.optimizerModel,!!r.evalModel)}else throw new Error(Zb)}typeNarrowingForRunStep(r,t,s,n,o){const i={};let a={};if(typeof s!="object"||s===null||s instanceof os||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof os)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(const c of n){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(t.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof o=="object"&&o!==null)a=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(n);for(const u of t)if(p.indexOf(u)!==-1){const h=n[u];(h===null||h instanceof os)&&(c=!0,l=!1,i[u]=h)}if(c){if(typeof o=="object"&&o!==null)a=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else a=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of r)if(typeof s[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(l)for(const c of t)i[c]=null;return[i,a]}convertHandlerReturnTypeToMapOfTensors(r){const t={};for(const s in r)if(Object.hasOwnProperty.call(r,s)){const n=r[s];n instanceof os?t[s]=n:t[s]=new os(n.type,n.data,n.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(r,t,s){const[n,o]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,r,t,s),i=await this.handler.runTrainStep(r,n,o);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(r){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(r||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(r,t,s){if(this.hasEvalModel){const[n,o]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,r,t,s),i=await this.handler.runEvalStep(r,n,o);return this.convertHandlerReturnTypeToMapOfTensors(i)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(r=!0){return this.handler.getParametersSize(r)}async loadParametersBuffer(r,t=!0){const s=await this.getParametersSize(t);if(r.length!==4*s)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(r,t)}async getContiguousParameters(r=!0){return this.handler.getContiguousParameters(r)}async release(){return this.handler.dispose()}};const tv=ev;var rv=Object.freeze({__proto__:null,InferenceSession:Yb,TRACE:tw,TRACE_FUNC_BEGIN:Ac,TRACE_FUNC_END:Ic,Tensor:os,TrainingSession:tv,env:Nb,registerBackend:zb});/*!
 * ONNX Runtime Web v1.22.0-dev.20250306-ccf8fdd9ea
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var qc=Object.defineProperty,sv=Object.getOwnPropertyDescriptor,nv=Object.getOwnPropertyNames,ov=Object.prototype.hasOwnProperty,iv=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),je=(e,r)=>()=>(e&&(r=e(e=0)),r),na=(e,r)=>{for(var t in r)qc(e,t,{get:r[t],enumerable:!0})},av=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of nv(r))!ov.call(e,n)&&n!==t&&qc(e,n,{get:()=>r[n],enumerable:!(s=sv(r,n))||s.enumerable});return e},Hl=e=>av(qc({},"__esModule",{value:!0}),e),Vi,Xs,$n,bm,ow,iw=je(()=>{Vi=new Map,Xs=[],$n=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Vi.get(e);if(s===void 0)Vi.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let n=Xs.indexOf(e);n!==-1&&Xs.splice(n,1);for(let o=0;o<Xs.length;o++)if(Vi.get(Xs[o]).priority<=t){Xs.splice(o,0,e);return}Xs.push(e)}return}throw new TypeError("not a valid backend")},bm=async e=>{let r=Vi.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},ow=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Xs:t,n,o=[],i=new Set;for(let l of s){let c=await bm(l);typeof c=="string"?o.push({name:l,err:c}):(n||(n=c),n===c&&i.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${o.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of o)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),lv=je(()=>{iw()}),aw,dv=je(()=>{aw="1.22.0-dev.20250306-aafa8d170a"}),Dd,Qr,lw=je(()=>{dv(),Dd="warning",Qr={wasm:{},webgl:{},webgpu:{},versions:{common:aw},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Dd=e}},get logLevel(){return Dd}},Object.defineProperty(Qr,"logLevel",{enumerable:!0})}),jt,cv=je(()=>{lw(),jt=Qr}),dw,cw,uv=je(()=>{dw=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let n,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[3]):(n=e.dims[3],o=e.dims[2]);let i=r?.format!==void 0?r.format:"RGB",a=r?.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=o*n,u=0,h=p,w=p*2,_=-1;i==="RGBA"?(u=0,h=p,w=p*2,_=p*3):i==="RGB"?(u=0,h=p,w=p*2):i==="RBG"&&(u=0,w=p,h=p*2);for(let C=0;C<o;C++)for(let F=0;F<n;F++){let T=(e.data[u++]-c[0])*l[0],g=(e.data[h++]-c[1])*l[1],$=(e.data[w++]-c[2])*l[2],P=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+T+","+g+","+$+","+P+")",s.fillRect(F,C,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},cw=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let n,o,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],o=e.dims[1],i=e.dims[3]):(n=e.dims[3],o=e.dims[2],i=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let u=o*n;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,w=0,_=1,C=2,F=3,T=0,g=u,$=u*2,P=-1;a==="RGBA"?(T=0,g=u,$=u*2,P=u*3):a==="RGB"?(T=0,g=u,$=u*2):a==="RBG"&&(T=0,$=u,g=u*2),s=t.createImageData(n,o);for(let y=0;y<o*n;w+=h,_+=h,C+=h,F+=h,y++)s.data[w]=(e.data[T++]-p[0])*c[0],s.data[_]=(e.data[g++]-p[1])*c[1],s.data[C]=(e.data[$++]-p[2])*c[2],s.data[F]=P===-1?255:(e.data[P++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),$l,uw,pw,hw,mw,fw,pv=je(()=>{Qc(),$l=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,n=r.norm??{mean:255,bias:0},o,i;typeof n.mean=="number"?o=[n.mean,n.mean,n.mean,n.mean]:o=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?i=[n.bias,n.bias,n.bias,n.bias]:i=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),u=4,h=0,w=1,_=2,C=3,F=0,T=c,g=c*2,$=-1;a==="RGB"&&(u=3,h=0,w=1,_=2,C=-1),l==="RGBA"?$=c*3:l==="RBG"?(F=0,g=c,T=c*2):l==="BGR"&&(g=0,T=c,F=c*2);for(let P=0;P<c;P++,h+=u,_+=u,w+=u,C+=u)p[F++]=(e[h]+i[0])/o[0],p[T++]=(e[w]+i[1])/o[1],p[g++]=(e[_]+i[2])/o[2],$!==-1&&C!==-1&&(p[$++]=(e[C]+i[3])/o[3]);return l==="RGBA"?new Nr("float32",p,[1,4,t,s]):new Nr("float32",p,[1,3,t,s])},uw=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o=typeof e=="string",i,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let h=e.height,w=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(h=r.resizedHeight,w=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=w}else a.tensorFormat="RGBA",a.height=h,a.width=w;u.drawImage(e,0,0),i=u.getImageData(0,0,w,h).data}else throw new Error("Can not access image data")}else if(s){let p,u;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,u=r.resizedWidth):(p=e.height,u=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=u,r!==void 0){let h=l();h.width=u,h.height=p;let w=c(h);if(w!=null)w.putImageData(e,0,0),i=w.getImageData(0,0,u,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let u=c(p);if(u!=null){let h=e.height,w=e.width;return u.drawImage(e,0,0,w,h),i=u.getImageData(0,0,w,h).data,a.height=h,a.width=w,$l(i,a)}else throw new Error("Can not access image data")}else{if(o)return new Promise((p,u)=>{let h=l(),w=c(h);if(!e||!w)return u();let _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{h.width=_.width,h.height=_.height,w.drawImage(_,0,0,h.width,h.height);let C=w.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,p($l(C.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return $l(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},pw=(e,r)=>{let{width:t,height:s,download:n,dispose:o}=r,i=[1,s,t,4];return new Nr({location:"texture",type:"float32",texture:e,dims:i,download:n,dispose:o})},hw=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:o}=r;return new Nr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:o})},mw=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:o}=r;return new Nr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:o})},fw=(e,r,t)=>new Nr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),Pn,Ji,Ld,_w,hv=je(()=>{Pn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Ji=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Ld=!1,_w=()=>{if(!Ld){Ld=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(Pn.set("int64",BigInt64Array),Ji.set(BigInt64Array,"int64")),r&&(Pn.set("uint64",BigUint64Array),Ji.set(BigUint64Array,"uint64")),s?(Pn.set("float16",t),Ji.set(t,"float16")):Pn.set("float16",Uint16Array)}}}),gw,ww,mv=je(()=>{Qc(),gw=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},ww=(e,r)=>{switch(e.location){case"cpu":return new Nr(e.type,e.data,r);case"cpu-pinned":return new Nr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Nr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Nr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Nr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Nr,Qc=je(()=>{uv(),pv(),hv(),mv(),Nr=class{constructor(e,r,t){_w();let s,n;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,n=e.dims,e.location){case"cpu-pinned":{let i=Pn.get(s);if(!i)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");i=r}else{let l=Pn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(r,BigInt):i=l.from(r)}else if(r instanceof l)i=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",i=e;else if(l==="boolean")s="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",i=Uint8Array.from(e);else{let l=Ji.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,i=e}if(a===void 0)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");n=a,this.cpuData=i,this.dataLocation="cpu"}let o=gw(n);if(this.cpuData&&o!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=n,this.size=o}static async fromImage(e,r){return uw(e,r)}static fromTexture(e,r){return pw(e,r)}static fromGpuBuffer(e,r){return hw(e,r)}static fromMLTensor(e,r){return mw(e,r)}static fromPinnedBuffer(e,r,t){return fw(e,r,t)}toDataURL(e){return dw(this,e)}toImageData(e){return cw(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ww(this,e)}}}),is,yw=je(()=>{Qc(),is=Nr}),ra,zd,ls,Jr,Mw=je(()=>{lw(),ra=(e,r)=>{(typeof Qr.trace>"u"?!Qr.wasm.trace:!Qr.trace)||console.timeStamp(`${e}::ORT::${r}`)},zd=(e,r)=>{let t=new Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),ra("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},ls=e=>{(typeof Qr.trace>"u"?!Qr.wasm.trace:!Qr.trace)||zd("BEGIN",e)},Jr=e=>{(typeof Qr.trace>"u"?!Qr.wasm.trace:!Qr.trace)||zd("END",e)}}),bw,fv=je(()=>{iw(),yw(),Mw(),bw=class vw{constructor(r){this.handler=r}async run(r,t,s){ls();let n={},o={};if(typeof r!="object"||r===null||r instanceof is||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof is)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);n[c]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let u of this.outputNames)if(p.indexOf(u)!==-1){let h=t[u];(h===null||h instanceof is)&&(c=!0,i=!1,n[u]=h)}if(c){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(let c of this.outputNames)n[c]=null;let a=await this.handler.run(r,n,o),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof is?l[c]=p:l[c]=new is(p.type,p.data,p.dims)}return Jr(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){ls();let o,i={};if(typeof r=="string"){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,u=0,h=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(u=t,!Number.isSafeInteger(u))throw new RangeError("'byteOffset' must be an integer.");if(u<0||u>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(h=r.byteLength-u,typeof s=="number"){if(h=s,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||u+h>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-u}].`);if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(p,u,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await ow(i),c=await a.createInferenceSessionHandler(o,l);return Jr(),new vw(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Xc,_v=je(()=>{fv(),Xc=bw}),gv=je(()=>{}),wv=je(()=>{}),yv=je(()=>{}),Mv=je(()=>{}),Tw={};na(Tw,{InferenceSession:()=>Xc,TRACE:()=>ra,TRACE_FUNC_BEGIN:()=>ls,TRACE_FUNC_END:()=>Jr,Tensor:()=>is,env:()=>jt,registerBackend:()=>$n});var ds=je(()=>{lv(),cv(),_v(),yw(),gv(),wv(),Mw(),yv(),Mv()}),Jc=je(()=>{}),xw={};na(xw,{default:()=>Ew});var Bd,Rd,Ew,bv=je(()=>{S0(),Fn(),Yc(),Bd="ort-wasm-proxy-worker",Rd=globalThis.self?.name===Bd,Rd&&(self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":Zc(t.wasm).then(()=>{gu(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:n}=t;wu(n,s).then(()=>{postMessage({type:r})},o=>{postMessage({type:r,err:o})});break}case"copy-from":{let{buffer:s}=t,n=Zl(s);postMessage({type:r,out:n});break}case"create":{let{model:s,options:n}=t;yu(s,n).then(o=>{postMessage({type:r,out:o})},o=>{postMessage({type:r,err:o})});break}case"release":Mu(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:n,inputs:o,outputIndices:i,options:a}=t;bu(s,n,o,i,new Array(i.length).fill(null),a).then(l=>{l.some(c=>c[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:l},Tu([...o,...l]))},l=>{postMessage({type:r,err:l})});break}case"end-profiling":vu(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}}),Ew=Rd?null:e=>new Worker(e??Rr,{type:"module",name:Bd})}),Pw={};na(Pw,{default:()=>Cw});var Nd,jd,Cw,vm,vv=je(()=>{jd=(Nd=import.meta.url,async function(e={}){var r,t,s=e,n=new Promise((d,m)=>{r=d,t=m}),o=typeof window=="object",i=typeof WorkerGlobalScope<"u",a=i&&self.name?.startsWith("em-pthread");s.mountExternalData=(d,m)=>{d.startsWith("./")&&(d=d.substring(2)),(s.Bd||(s.Bd=new Map)).set(d,m)},s.unmountExternalData=()=>{delete s.Bd};var l=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let c=()=>{let d=(b,S,I)=>(...U)=>{let re=It,fe=S?.();U=b(...U);let xe=S?.();return fe!==xe&&(b=xe,I(fe),S=I=null),It!=re?new Promise((Be,Xe)=>{tr={resolve:Be,reject:Xe}}):U},m=b=>async(...S)=>{try{if(s.Cd)throw Error("Session already started");let I=s.Cd={be:S[0],errors:[]},U=await b(...S);if(s.Cd!==I)throw Error("Session mismatch");s.Dd?.flush();let re=I.errors;if(0<re.length){let fe=await Promise.all(re);if(fe=fe.filter(xe=>xe),0<fe.length)throw Error(fe.join(`
`))}return U}finally{s.Cd=null}};s._OrtCreateSession=d(s._OrtCreateSession,()=>s._OrtCreateSession,b=>s._OrtCreateSession=b),s._OrtRun=m(d(s._OrtRun,()=>s._OrtRun,b=>s._OrtRun=b)),s._OrtRunWithBinding=m(d(s._OrtRunWithBinding,()=>s._OrtRunWithBinding,b=>s._OrtRunWithBinding=b)),s._OrtBindInput=d(s._OrtBindInput,()=>s._OrtBindInput,b=>s._OrtBindInput=b),c=void 0};s.jsepInit=(d,m)=>{if(c?.(),d==="webgpu"){[s.Dd,s.Rd,s.Vd,s.Hd,s.Ud,s.hc,s.Wd,s.Zd,s.Sd,s.Td,s.Xd]=m;let b=s.Dd;s.jsepRegisterBuffer=(S,I,U,re)=>b.registerBuffer(S,I,U,re),s.jsepGetBuffer=S=>b.getBuffer(S),s.jsepCreateDownloader=(S,I,U)=>b.createDownloader(S,I,U),s.jsepOnCreateSession=S=>{b.onCreateSession(S)},s.jsepOnReleaseSession=S=>{b.onReleaseSession(S)},s.jsepOnRunStart=S=>b.onRunStart(S),s.$d=(S,I)=>{b.upload(S,I)}}else if(d==="webnn"){[s.Dd,s.Yd,s.Id,s.jsepEnsureTensor,s.Jd,s.jsepDownloadTensor]=m,s.jsepReleaseTensorId=s.Id,s.jsepUploadTensor=s.Jd;let b=s.Dd;s.jsepOnRunStart=S=>b.onRunStart(S),s.jsepOnRunEnd=b.onRunEnd.bind(b),s.jsepRegisterMLContext=(S,I)=>{b.registerMLContext(S,I)},s.jsepOnReleaseSession=S=>{b.onReleaseSession(S)},s.jsepCreateMLTensorDownloader=(S,I)=>b.createMLTensorDownloader(S,I),s.jsepRegisterMLTensor=(S,I,U,re)=>b.registerMLTensor(S,I,U,re),s.jsepCreateMLContext=S=>b.createMLContext(S),s.jsepRegisterMLConstant=(S,I,U,re,fe)=>b.registerMLConstant(S,I,U,re,fe,s.Bd),s.jsepRegisterGraphInput=b.registerGraphInput.bind(b),s.jsepIsGraphInput=b.isGraphInput.bind(b),s.jsepCreateTemporaryTensor=b.createTemporaryTensor.bind(b)}};var p,u,h=Object.assign({},s),w=(d,m)=>{throw m},_="";(o||i)&&(i?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),Nd&&(_=Nd),_=_.startsWith("blob:")?"":_.slice(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),i&&(u=d=>{var m=new XMLHttpRequest;return m.open("GET",d,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),p=async d=>{if(ne(d))return new Promise((b,S)=>{var I=new XMLHttpRequest;I.open("GET",d,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?b(I.response):S(I.status)},I.onerror=S,I.send(null)});var m=await fetch(d,{credentials:"same-origin"});if(m.ok)return m.arrayBuffer();throw Error(m.status+" : "+m.url)});var C=console.log.bind(console),F=console.error.bind(console),T=C,g=F;Object.assign(s,h),h=null;var $,P,y,M,E,A,B,N,Q,H,z,Z,q,X=s.wasmBinary,se=!1,ne=d=>d.startsWith("file://");function ae(){return $.buffer!=M.buffer&&Ne(),M}function pe(){return $.buffer!=M.buffer&&Ne(),E}function V(){return $.buffer!=M.buffer&&Ne(),A}function L(){return $.buffer!=M.buffer&&Ne(),B}function O(){return $.buffer!=M.buffer&&Ne(),N}function J(){return $.buffer!=M.buffer&&Ne(),Q}function ce(){return $.buffer!=M.buffer&&Ne(),H}function be(){return $.buffer!=M.buffer&&Ne(),q}if(a){let d=function(m){try{var b=m.data,S=b.yd;if(S==="load"){let I=[];self.onmessage=U=>I.push(U),self.startWorker=()=>{postMessage({yd:"loaded"});for(let U of I)d(U);self.onmessage=d};for(let U of b.Od)s[U]&&!s[U].proxy||(s[U]=(...re)=>{postMessage({yd:"callHandler",Nd:U,args:re})},U=="print"&&(T=s[U]),U=="printErr"&&(g=s[U]));$=b.he,Ne(),ue(b.ie)}else if(S==="run"){pr(b.xd),Kn(b.xd,0,0,1,0,0),Mt(),Bt(b.xd),Ee||(Ro(),Ee=!0);try{cs(b.de,b.Fd)}catch(I){if(I!="unwind")throw I}}else b.target!=="setimmediate"&&(S==="checkMailbox"?Ee&&Kt():S&&(g(`worker: received unknown command ${S}`),g(b)))}catch(I){throw Hn(),I}};var ue,Ee=!1;g=function(...m){m=m.join(" "),console.error(m)},self.alert=function(...m){postMessage({yd:"alert",text:m.join(" "),fe:mn()})},self.onunhandledrejection=m=>{throw m.reason||m},self.onmessage=d}function Ne(){var d=$.buffer;s.HEAP8=M=new Int8Array(d),s.HEAP16=A=new Int16Array(d),s.HEAPU8=E=new Uint8Array(d),s.HEAPU16=B=new Uint16Array(d),s.HEAP32=N=new Int32Array(d),s.HEAPU32=Q=new Uint32Array(d),s.HEAPF32=H=new Float32Array(d),s.HEAPF64=q=new Float64Array(d),s.HEAP64=z=new BigInt64Array(d),s.HEAPU64=Z=new BigUint64Array(d)}function ye(){a?startWorker(s):Fe.Bb()}a||($=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),Ne());var K,W=0,he=null;function Pe(){if(--W==0&&he){var d=he;he=null,d()}}function ve(d){throw g(d="Aborted("+d+")"),se=!0,d=new WebAssembly.RuntimeError(d+". Build with -sASSERTIONS for more info."),t(d),d}function ke(){return{a:{Ta:Ue,Va:Oe,W:kr,la:Ms,b:Lr,u:bs,R:ps,Za:hs,d:ms,pb:ir,g:it,T:ar,Ga:Is,lb:Fs,nb:vs,Ha:Os,Ea:Ds,wb:Kr,Da:_s,pa:Ls,mb:zs,jb:Bs,Fa:Rs,kb:Yr,Ma:tn,za:rn,eb:sn,cb:on,ya:ws,V:Dn,N:de,db:k,ma:qe,fb:We,zb:vt,hb:Ut,qb:sr,ab:zr,Aa:Ps,yb:Bt,Ja:gr,S:nr,Wa:wr,$:oa,H:ia,E:aa,l:xs,F:la,B:ca,X:Eo,J:ua,v:Po,O:pa,D:Co,t:ed,A:ha,z:So,w:ma,r:Ln,tb:fa,ub:_a,vb:ga,rb:Io,sb:un,bb:zn,Oa:Ss,La:td,y:ba,ja:Fo,Ba:va,Ka:ya,qa:Ta,Ia:xa,ib:Ea,U:wa,fa:Pa,Sa:Rn,gb:Ca,Qa:Sa,Pa:$a,Ab:Vn,Ca:Do,ob:De,aa:Lo,oa:Un,xb:zo,na:Wn,$a:Ii,ia:Li,sa:ll,ga:Qa,da:Oi,ua:il,p:qa,e:Da,c:Oa,ea:Za,f:La,n:Ba,k:Ga,Y:Ra,ka:Ka,j:Ai,wa:Fi,Ra:cl,ca:nl,Ua:dl,P:el,K:ja,_:sl,Q:Xa,Z:ol,x:Na,m:Ci,va:po,i:Fa,h:Si,ra:Bi,ta:al,o:za,q:Va,s:Ua,I:Wa,C:Ha,L:ki,xa:Ya,_a:Ja,G:Di,Ya:tl,ba:zi,M:$i,Xa:rl,ha:Aa,a:$,Na:Te}}}var Ae={1320978:()=>typeof wasmOffsetConverter<"u",1321035:(d,m,b,S,I)=>{if(s===void 0||!s.Bd)return 1;if((d=Qe(Number(d>>>0))).startsWith("./")&&(d=d.substring(2)),!(d=s.Bd.get(d)))return 2;if(m=Number(m>>>0),b=Number(b>>>0),S=Number(S>>>0),m+b>d.byteLength)return 3;try{let U=d.subarray(m,m+b);switch(I){case 0:pe().set(U,S>>>0);break;case 1:s.$d(S,U);break;default:return 4}return 0}catch{return 4}},1321750:(d,m,b)=>{s.Jd(d,pe().subarray(m>>>0,m+b>>>0))},1321813:()=>s.Yd(),1321854:d=>{s.Id(d)},1321890:()=>{s.Sd()},1321921:()=>{s.Td()},1321950:()=>{s.Xd()},1321975:d=>s.Rd(d),1322008:d=>s.Vd(d),1322040:(d,m,b)=>{s.Hd(Number(d),Number(m),Number(b),!0)},1322103:(d,m,b)=>{s.Hd(Number(d),Number(m),Number(b))},1322160:d=>{s.hc("Abs",d,void 0)},1322211:d=>{s.hc("Neg",d,void 0)},1322262:d=>{s.hc("Floor",d,void 0)},1322315:d=>{s.hc("Ceil",d,void 0)},1322367:d=>{s.hc("Reciprocal",d,void 0)},1322425:d=>{s.hc("Sqrt",d,void 0)},1322477:d=>{s.hc("Exp",d,void 0)},1322528:d=>{s.hc("Erf",d,void 0)},1322579:d=>{s.hc("Sigmoid",d,void 0)},1322634:(d,m,b)=>{s.hc("HardSigmoid",d,{alpha:m,beta:b})},1322713:d=>{s.hc("Log",d,void 0)},1322764:d=>{s.hc("Sin",d,void 0)},1322815:d=>{s.hc("Cos",d,void 0)},1322866:d=>{s.hc("Tan",d,void 0)},1322917:d=>{s.hc("Asin",d,void 0)},1322969:d=>{s.hc("Acos",d,void 0)},1323021:d=>{s.hc("Atan",d,void 0)},1323073:d=>{s.hc("Sinh",d,void 0)},1323125:d=>{s.hc("Cosh",d,void 0)},1323177:d=>{s.hc("Asinh",d,void 0)},1323230:d=>{s.hc("Acosh",d,void 0)},1323283:d=>{s.hc("Atanh",d,void 0)},1323336:d=>{s.hc("Tanh",d,void 0)},1323388:d=>{s.hc("Not",d,void 0)},1323439:(d,m,b)=>{s.hc("Clip",d,{min:m,max:b})},1323508:d=>{s.hc("Clip",d,void 0)},1323560:(d,m)=>{s.hc("Elu",d,{alpha:m})},1323618:d=>{s.hc("Gelu",d,void 0)},1323670:d=>{s.hc("Relu",d,void 0)},1323722:(d,m)=>{s.hc("LeakyRelu",d,{alpha:m})},1323786:(d,m)=>{s.hc("ThresholdedRelu",d,{alpha:m})},1323856:(d,m)=>{s.hc("Cast",d,{to:m})},1323914:d=>{s.hc("Add",d,void 0)},1323965:d=>{s.hc("Sub",d,void 0)},1324016:d=>{s.hc("Mul",d,void 0)},1324067:d=>{s.hc("Div",d,void 0)},1324118:d=>{s.hc("Pow",d,void 0)},1324169:d=>{s.hc("Equal",d,void 0)},1324222:d=>{s.hc("Greater",d,void 0)},1324277:d=>{s.hc("GreaterOrEqual",d,void 0)},1324339:d=>{s.hc("Less",d,void 0)},1324391:d=>{s.hc("LessOrEqual",d,void 0)},1324450:(d,m,b,S,I)=>{s.hc("ReduceMean",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1324625:(d,m,b,S,I)=>{s.hc("ReduceMax",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1324799:(d,m,b,S,I)=>{s.hc("ReduceMin",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1324973:(d,m,b,S,I)=>{s.hc("ReduceProd",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1325148:(d,m,b,S,I)=>{s.hc("ReduceSum",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1325322:(d,m,b,S,I)=>{s.hc("ReduceL1",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1325495:(d,m,b,S,I)=>{s.hc("ReduceL2",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1325668:(d,m,b,S,I)=>{s.hc("ReduceLogSum",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1325845:(d,m,b,S,I)=>{s.hc("ReduceSumSquare",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1326025:(d,m,b,S,I)=>{s.hc("ReduceLogSumExp",d,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1326205:d=>{s.hc("Where",d,void 0)},1326258:(d,m,b)=>{s.hc("Transpose",d,{perm:m?Array.from(O().subarray(Number(m)>>>0,Number(b)>>>0)):[]})},1326382:(d,m,b,S)=>{s.hc("DepthToSpace",d,{blocksize:m,mode:Qe(b),format:S?"NHWC":"NCHW"})},1326515:(d,m,b,S)=>{s.hc("DepthToSpace",d,{blocksize:m,mode:Qe(b),format:S?"NHWC":"NCHW"})},1326648:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot,vr)=>{s.hc("ConvTranspose",d,{format:xe?"NHWC":"NCHW",autoPad:m,dilations:[b],group:S,kernelShape:[I],pads:[U,re],strides:[fe],wIsConst:()=>!!ae()[Be>>>0],outputPadding:Xe?Array.from(O().subarray(Number(Xe)>>>0,Number(rt)>>>0)):[],outputShape:ft?Array.from(O().subarray(Number(ft)>>>0,Number(Ot)>>>0)):[],activation:Qe(vr)})},1327081:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("ConvTranspose",d,{format:fe?"NHWC":"NCHW",autoPad:m,dilations:Array.from(O().subarray(Number(b)>>>0,2+(Number(b)>>>0)>>>0)),group:S,kernelShape:Array.from(O().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(O().subarray(Number(U)>>>0,4+(Number(U)>>>0)>>>0)),strides:Array.from(O().subarray(Number(re)>>>0,2+(Number(re)>>>0)>>>0)),wIsConst:()=>!!ae()[xe>>>0],outputPadding:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],outputShape:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[],activation:Qe(Ot)})},1327742:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot,vr)=>{s.hc("ConvTranspose",d,{format:xe?"NHWC":"NCHW",autoPad:m,dilations:[b],group:S,kernelShape:[I],pads:[U,re],strides:[fe],wIsConst:()=>!!ae()[Be>>>0],outputPadding:Xe?Array.from(O().subarray(Number(Xe)>>>0,Number(rt)>>>0)):[],outputShape:ft?Array.from(O().subarray(Number(ft)>>>0,Number(Ot)>>>0)):[],activation:Qe(vr)})},1328175:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("ConvTranspose",d,{format:fe?"NHWC":"NCHW",autoPad:m,dilations:Array.from(O().subarray(Number(b)>>>0,2+(Number(b)>>>0)>>>0)),group:S,kernelShape:Array.from(O().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),pads:Array.from(O().subarray(Number(U)>>>0,4+(Number(U)>>>0)>>>0)),strides:Array.from(O().subarray(Number(re)>>>0,2+(Number(re)>>>0)>>>0)),wIsConst:()=>!!ae()[xe>>>0],outputPadding:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],outputShape:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[],activation:Qe(Ot)})},1328836:(d,m)=>{s.hc("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1328927:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("AveragePool",d,{format:Ot?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:I,dilations:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[],kernel_shape:fe?Array.from(O().subarray(Number(fe)>>>0,Number(xe)>>>0)):[],pads:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],strides:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[]})},1329406:(d,m)=>{s.hc("GlobalAveragePool",d,{format:m?"NHWC":"NCHW"})},1329497:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("AveragePool",d,{format:Ot?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:I,dilations:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[],kernel_shape:fe?Array.from(O().subarray(Number(fe)>>>0,Number(xe)>>>0)):[],pads:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],strides:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[]})},1329976:(d,m)=>{s.hc("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1330063:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("MaxPool",d,{format:Ot?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:I,dilations:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[],kernel_shape:fe?Array.from(O().subarray(Number(fe)>>>0,Number(xe)>>>0)):[],pads:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],strides:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[]})},1330538:(d,m)=>{s.hc("GlobalMaxPool",d,{format:m?"NHWC":"NCHW"})},1330625:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>{s.hc("MaxPool",d,{format:Ot?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:S,storage_order:I,dilations:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[],kernel_shape:fe?Array.from(O().subarray(Number(fe)>>>0,Number(xe)>>>0)):[],pads:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],strides:rt?Array.from(O().subarray(Number(rt)>>>0,Number(ft)>>>0)):[]})},1331100:(d,m,b,S,I)=>{s.hc("Gemm",d,{alpha:m,beta:b,transA:S,transB:I})},1331204:d=>{s.hc("MatMul",d,void 0)},1331258:(d,m,b,S)=>{s.hc("ArgMax",d,{keepDims:!!m,selectLastIndex:!!b,axis:S})},1331366:(d,m,b,S)=>{s.hc("ArgMin",d,{keepDims:!!m,selectLastIndex:!!b,axis:S})},1331474:(d,m)=>{s.hc("Softmax",d,{axis:m})},1331537:(d,m)=>{s.hc("Concat",d,{axis:m})},1331597:(d,m,b,S,I)=>{s.hc("Split",d,{axis:m,numOutputs:b,splitSizes:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1331753:d=>{s.hc("Expand",d,void 0)},1331807:(d,m)=>{s.hc("Gather",d,{axis:Number(m)})},1331878:(d,m)=>{s.hc("GatherElements",d,{axis:Number(m)})},1331957:(d,m)=>{s.hc("GatherND",d,{batch_dims:Number(m)})},1332036:(d,m,b,S,I,U,re,fe,xe,Be,Xe)=>{s.hc("Resize",d,{antialias:m,axes:b?Array.from(O().subarray(Number(b)>>>0,Number(S)>>>0)):[],coordinateTransformMode:Qe(I),cubicCoeffA:U,excludeOutside:re,extrapolationValue:fe,keepAspectRatioPolicy:Qe(xe),mode:Qe(Be),nearestMode:Qe(Xe)})},1332398:(d,m,b,S,I,U,re)=>{s.hc("Slice",d,{starts:m?Array.from(O().subarray(Number(m)>>>0,Number(b)>>>0)):[],ends:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[],axes:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[]})},1332662:d=>{s.hc("Tile",d,void 0)},1332714:(d,m,b)=>{s.hc("InstanceNormalization",d,{epsilon:m,format:b?"NHWC":"NCHW"})},1332828:(d,m,b)=>{s.hc("InstanceNormalization",d,{epsilon:m,format:b?"NHWC":"NCHW"})},1332942:d=>{s.hc("Range",d,void 0)},1332995:(d,m)=>{s.hc("Einsum",d,{equation:Qe(m)})},1333076:(d,m,b,S,I)=>{s.hc("Pad",d,{mode:m,value:b,pads:S?Array.from(O().subarray(Number(S)>>>0,Number(I)>>>0)):[]})},1333219:(d,m,b,S,I,U)=>{s.hc("BatchNormalization",d,{epsilon:m,momentum:b,spatial:!!I,trainingMode:!!S,format:U?"NHWC":"NCHW"})},1333388:(d,m,b,S,I,U)=>{s.hc("BatchNormalization",d,{epsilon:m,momentum:b,spatial:!!I,trainingMode:!!S,format:U?"NHWC":"NCHW"})},1333557:(d,m,b)=>{s.hc("CumSum",d,{exclusive:Number(m),reverse:Number(b)})},1333654:(d,m,b)=>{s.hc("DequantizeLinear",d,{axis:m,blockSize:b})},1333744:(d,m,b,S,I)=>{s.hc("GridSample",d,{align_corners:m,mode:Qe(b),padding_mode:Qe(S),format:I?"NHWC":"NCHW"})},1333914:(d,m,b,S,I)=>{s.hc("GridSample",d,{align_corners:m,mode:Qe(b),padding_mode:Qe(S),format:I?"NHWC":"NCHW"})},1334084:(d,m)=>{s.hc("ScatterND",d,{reduction:Qe(m)})},1334169:(d,m,b,S,I,U,re,fe,xe)=>{s.hc("Attention",d,{numHeads:m,isUnidirectional:b,maskFilterValue:S,scale:I,doRotary:U,qkvHiddenSizes:re?Array.from(O().subarray(Number(fe)>>>0,Number(fe)+re>>>0)):[],pastPresentShareBuffer:!!xe})},1334441:d=>{s.hc("BiasAdd",d,void 0)},1334496:d=>{s.hc("BiasSplitGelu",d,void 0)},1334557:d=>{s.hc("FastGelu",d,void 0)},1334613:(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot,vr,Hs)=>{s.hc("Conv",d,{format:rt?"NHWC":"NCHW",auto_pad:m,dilations:b?Array.from(O().subarray(Number(b)>>>0,Number(S)>>>0)):[],group:I,kernel_shape:U?Array.from(O().subarray(Number(U)>>>0,Number(re)>>>0)):[],pads:fe?Array.from(O().subarray(Number(fe)>>>0,Number(xe)>>>0)):[],strides:Be?Array.from(O().subarray(Number(Be)>>>0,Number(Xe)>>>0)):[],w_is_const:()=>!!ae()[Number(ft)>>>0],activation:Qe(Ot),activation_params:vr?Array.from(ce().subarray(Number(vr)>>>0,Number(Hs)>>>0)):[]})},1335197:d=>{s.hc("Gelu",d,void 0)},1335249:(d,m,b,S,I,U,re,fe,xe)=>{s.hc("GroupQueryAttention",d,{numHeads:m,kvNumHeads:b,scale:S,softcap:I,doRotary:U,rotaryInterleaved:re,smoothSoftmax:fe,localWindowSize:xe})},1335466:(d,m,b,S)=>{s.hc("LayerNormalization",d,{axis:m,epsilon:b,simplified:!!S})},1335577:(d,m,b,S)=>{s.hc("LayerNormalization",d,{axis:m,epsilon:b,simplified:!!S})},1335688:(d,m,b,S,I,U)=>{s.hc("MatMulNBits",d,{k:m,n:b,accuracyLevel:S,bits:I,blockSize:U})},1335815:(d,m,b,S,I,U)=>{s.hc("MultiHeadAttention",d,{numHeads:m,isUnidirectional:b,maskFilterValue:S,scale:I,doRotary:U})},1335974:(d,m)=>{s.hc("QuickGelu",d,{alpha:m})},1336038:(d,m,b,S,I)=>{s.hc("RotaryEmbedding",d,{interleaved:!!m,numHeads:b,rotaryEmbeddingDim:S,scale:I})},1336177:(d,m,b)=>{s.hc("SkipLayerNormalization",d,{epsilon:m,simplified:!!b})},1336279:(d,m,b)=>{s.hc("SkipLayerNormalization",d,{epsilon:m,simplified:!!b})},1336381:(d,m,b,S)=>{s.hc("GatherBlockQuantized",d,{gatherAxis:m,quantizeAxis:b,blockSize:S})},1336502:d=>{s.Wd(d)},1336536:(d,m)=>s.Zd(Number(d),Number(m),s.Cd.be,s.Cd.errors)};function Oe(d,m,b){return ln(async()=>{await s.Ud(Number(d),Number(m),Number(b))})}function Ue(){return typeof wasmOffsetConverter<"u"}class Ve{name="ExitStatus";constructor(m){this.message=`Program terminated with exit(${m})`,this.status=m}}var D=d=>{d.terminate(),d.onmessage=()=>{}},Y=[],R=d=>{we.length==0&&(Lt(),rr(we[0]));var m=we.pop();if(!m)return 6;Le.push(m),lt[d.xd]=m,m.xd=d.xd;var b={yd:"run",de:d.ce,Fd:d.Fd,xd:d.xd};return m.postMessage(b,d.Ld),0},te=0,oe=(d,m,...b)=>{for(var S=2*b.length,I=ht(),U=qn(8*S),re=U>>>3,fe=0;fe<b.length;fe++){var xe=b[fe];typeof xe=="bigint"?(z[re+2*fe]=1n,z[re+2*fe+1]=xe):(z[re+2*fe]=0n,be()[re+2*fe+1>>>0]=xe)}return d=No(d,0,S,U,m),ct(I),d};function Te(d){if(a)return oe(0,1,d);if(y=d,!(0<te)){for(var m of Le)D(m);for(m of we)D(m);we=[],Le=[],lt={},se=!0}w(0,new Ve(d))}function Ce(d){if(a)return oe(1,0,d);De(d)}var De=d=>{if(y=d,a)throw Ce(d),"unwind";Te(d)},we=[],Le=[],ot=[],lt={},Tt=d=>{var m=d.xd;delete lt[m],we.push(d),Le.splice(Le.indexOf(d),1),d.xd=0,jo(m)};function Mt(){ot.forEach(d=>d())}var rr=d=>new Promise(m=>{d.onmessage=I=>{var U=(I=I.data).yd;if(I.Ed&&I.Ed!=mn()){var re=lt[I.Ed];re?re.postMessage(I,I.Ld):g(`Internal error! Worker sent a message "${U}" to target pthread ${I.Ed}, but that thread no longer exists!`)}else U==="checkMailbox"?Kt():U==="spawnThread"?R(I):U==="cleanupThread"?Tt(lt[I.ee]):U==="loaded"?(d.loaded=!0,m(d)):U==="alert"?alert(`Thread ${I.fe}: ${I.text}`):I.target==="setimmediate"?d.postMessage(I):U==="callHandler"?s[I.Nd](...I.args):U&&g(`worker sent an unknown command ${U}`)},d.onerror=I=>{throw g(`worker sent an error! ${I.filename}:${I.lineno}: ${I.message}`),I};var b,S=[];for(b of[])s.propertyIsEnumerable(b)&&S.push(b);d.postMessage({yd:"load",Od:S,he:$,ie:P})});function Lt(){var d=new Worker((()=>{let m=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new m("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});we.push(d)}var pr=d=>{Ne();var m=J()[d+52>>>2>>>0];d=J()[d+56>>>2>>>0],Wo(m,m-d),ct(m)},cs=(d,m)=>{te=0,d=gn(d,m),0<te?y=d:_n(d)},Vr=[];function kr(d){var m=new us(d>>>=0);if(ae()[m.wd+12>>>0]==0){var b=1;ae()[m.wd+12>>>0]=b}return b=0,ae()[m.wd+13>>>0]=b,Vr.push(m),Go(d),Xn(d)}var Dr=0,Ms=()=>{pt(0,0);var d=Vr.pop();Qn(d.Gd),Dr=0};class us{constructor(m){this.Gd=m,this.wd=m-24}}function it(d){throw Dr||=d>>>0,Dr}var Ur=d=>{var m=Dr;if(!m)return Ks(0),0;var b=new us(m);J()[b.wd+16>>>2>>>0]=m;var S=J()[b.wd+4>>>2>>>0];if(!S)return Ks(0),m;for(var I of d){if(I===0||I===S)break;if(Ko(I,S,b.wd+16))return Ks(I),m}return Ks(S),m};function Lr(){return Ur([])}function bs(d){return Ur([d>>>0])}function ps(d,m){return Ur([d>>>0,m>>>0])}var hs=()=>{var d=Vr.pop();d||ve("no exception to throw");var m=d.Gd;if(ae()[d.wd+13>>>0]==0){Vr.push(d);var b=1;ae()[d.wd+13>>>0]=b,b=0,ae()[d.wd+12>>>0]=b}throw Dr=m};function ms(d,m,b){var S=new us(d>>>=0);throw m>>>=0,b>>>=0,J()[S.wd+16>>>2>>>0]=0,J()[S.wd+4>>>2>>>0]=m,J()[S.wd+8>>>2>>>0]=b,Dr=d}function fs(d,m,b,S){return a?oe(2,1,d,m,b,S):ir(d,m,b,S)}function ir(d,m,b,S){if(d>>>=0,b>>>=0,S>>>=0,l===void 0)return 6;var I=[];return a&&I.length===0?fs(d,m>>>=0,b,S):(d={ce:b,xd:d,Fd:S,Ld:I},a?(d.yd="spawnThread",postMessage(d,I),0):R(d))}var Re=typeof TextDecoder<"u"?new TextDecoder:void 0,Je=(d,m=0,b=NaN)=>{var S=(m>>>=0)+b;for(b=m;d[b]&&!(b>=S);)++b;if(16<b-m&&d.buffer&&Re)return Re.decode(d.buffer instanceof ArrayBuffer?d.subarray(m,b):d.slice(m,b));for(S="";m<b;){var I=d[m++];if(128&I){var U=63&d[m++];if((224&I)==192)S+=String.fromCharCode((31&I)<<6|U);else{var re=63&d[m++];65536>(I=(240&I)==224?(15&I)<<12|U<<6|re:(7&I)<<18|U<<12|re<<6|63&d[m++])?S+=String.fromCharCode(I):(I-=65536,S+=String.fromCharCode(55296|I>>10,56320|1023&I))}}else S+=String.fromCharCode(I)}return S},Qe=(d,m)=>(d>>>=0)?Je(pe(),d,m):"";function ar(d,m,b){return a?oe(3,1,d,m,b):0}function Is(d,m){if(a)return oe(4,1,d,m)}var Wr=d=>{for(var m=0,b=0;b<d.length;++b){var S=d.charCodeAt(b);127>=S?m++:2047>=S?m+=2:55296<=S&&57343>=S?(m+=4,++b):m+=3}return m},Gr=(d,m,b)=>{var S=pe();if(m>>>=0,0<b){var I=m;b=m+b-1;for(var U=0;U<d.length;++U){var re=d.charCodeAt(U);if(55296<=re&&57343>=re&&(re=65536+((1023&re)<<10)|1023&d.charCodeAt(++U)),127>=re){if(m>=b)break;S[m++>>>0]=re}else{if(2047>=re){if(m+1>=b)break;S[m++>>>0]=192|re>>6}else{if(65535>=re){if(m+2>=b)break;S[m++>>>0]=224|re>>12}else{if(m+3>=b)break;S[m++>>>0]=240|re>>18,S[m++>>>0]=128|re>>12&63}S[m++>>>0]=128|re>>6&63}S[m++>>>0]=128|63&re}}S[m>>>0]=0,d=m-I}else d=0;return d};function Fs(d,m){if(a)return oe(5,1,d,m)}function vs(d,m,b){if(a)return oe(6,1,d,m,b)}function Os(d,m,b){return a?oe(7,1,d,m,b):0}function Ds(d,m){if(a)return oe(8,1,d,m)}function Kr(d,m,b){if(a)return oe(9,1,d,m,b)}function _s(d,m,b,S){if(a)return oe(10,1,d,m,b,S)}function Ls(d,m,b,S){if(a)return oe(11,1,d,m,b,S)}function zs(d,m,b,S){if(a)return oe(12,1,d,m,b,S)}function Bs(d){if(a)return oe(13,1,d)}function Rs(d,m){if(a)return oe(14,1,d,m)}function Yr(d,m,b){if(a)return oe(15,1,d,m,b)}var Ns,Ar,tn=()=>ve(""),br=d=>{for(var m="";pe()[d>>>0];)m+=Ns[pe()[d++>>>0]];return m},Hr={},gs={};function Pr(d,m,b={}){return function(S,I,U={}){var re=I.name;if(!S)throw new Ar(`type "${re}" must have a positive integer typeid pointer`);if(gs.hasOwnProperty(S)){if(U.Pd)return;throw new Ar(`Cannot register type '${re}' twice`)}gs[S]=I,Hr.hasOwnProperty(S)&&(I=Hr[S],delete Hr[S],I.forEach(fe=>fe()))}(d,m,b)}var js=(d,m,b)=>{switch(m){case 1:return b?S=>ae()[S>>>0]:S=>pe()[S>>>0];case 2:return b?S=>V()[S>>>1>>>0]:S=>L()[S>>>1>>>0];case 4:return b?S=>O()[S>>>2>>>0]:S=>J()[S>>>2>>>0];case 8:return b?S=>z[S>>>3]:S=>Z[S>>>3];default:throw new TypeError(`invalid integer width (${m}): ${d}`)}};function rn(d,m,b){b>>>=0,Pr(d>>>=0,{name:m=br(m>>>0),fromWireType:S=>S,toWireType:function(S,I){if(typeof I!="bigint"&&typeof I!="number")throw I=I===null?"null":(S=typeof I)=="object"||S==="array"||S==="function"?I.toString():""+I,new TypeError(`Cannot convert "${I}" to ${this.name}`);return typeof I=="number"&&(I=BigInt(I)),I},zd:hr,readValueFromPointer:js(m,b,m.indexOf("u")==-1),Ad:null})}var hr=8;function sn(d,m,b,S){Pr(d>>>=0,{name:m=br(m>>>0),fromWireType:function(I){return!!I},toWireType:function(I,U){return U?b:S},zd:hr,readValueFromPointer:function(I){return this.fromWireType(pe()[I>>>0])},Ad:null})}var Ts=[],Cr=[];function xs(d){9<(d>>>=0)&&--Cr[d+1]==0&&(Cr[d]=void 0,Ts.push(d))}var lr=d=>{if(!d)throw new Ar("Cannot use deleted val. handle = "+d);return Cr[d]},er=d=>{switch(d){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Ts.pop()||Cr.length;return Cr[m]=d,Cr[m+1]=1,m}};function Es(d){return this.fromWireType(J()[d>>>2>>>0])}var nn={name:"emscripten::val",fromWireType:d=>{var m=lr(d);return xs(d),m},toWireType:(d,m)=>er(m),zd:hr,readValueFromPointer:Es,Ad:null};function on(d){return Pr(d>>>0,nn)}var an=(d,m)=>{switch(m){case 4:return function(b){return this.fromWireType(ce()[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(be()[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${d}`)}};function ws(d,m,b){b>>>=0,Pr(d>>>=0,{name:m=br(m>>>0),fromWireType:S=>S,toWireType:(S,I)=>I,zd:hr,readValueFromPointer:an(m,b),Ad:null})}function Dn(d,m,b,S,I){if(d>>>=0,b>>>=0,m=br(m>>>0),I===-1&&(I=4294967295),I=fe=>fe,S===0){var U=32-8*b;I=fe=>fe<<U>>>U}var re=m.includes("unsigned")?function(fe,xe){return xe>>>0}:function(fe,xe){return xe};Pr(d,{name:m,fromWireType:I,toWireType:re,zd:hr,readValueFromPointer:js(m,b,S!==0),Ad:null})}function de(d,m,b){function S(U){var re=J()[U>>>2>>>0];return U=J()[U+4>>>2>>>0],new I(ae().buffer,U,re)}var I=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];Pr(d>>>=0,{name:b=br(b>>>0),fromWireType:S,zd:hr,readValueFromPointer:S},{Pd:!0})}function k(d,m){Pr(d>>>=0,{name:m=br(m>>>0),fromWireType:function(b){for(var S,I=J()[b>>>2>>>0],U=b+4,re=U,fe=0;fe<=I;++fe){var xe=U+fe;fe!=I&&pe()[xe>>>0]!=0||(re=Qe(re,xe-re),S===void 0?S=re:(S+="\0",S+=re),re=xe+1)}return Fr(b),S},toWireType:function(b,S){S instanceof ArrayBuffer&&(S=new Uint8Array(S));var I=typeof S=="string";if(!(I||S instanceof Uint8Array||S instanceof Uint8ClampedArray||S instanceof Int8Array))throw new Ar("Cannot pass non-string to std::string");var U=I?Wr(S):S.length,re=fn(4+U+1),fe=re+4;if(J()[re>>>2>>>0]=U,I)Gr(S,fe,U+1);else if(I)for(I=0;I<U;++I){var xe=S.charCodeAt(I);if(255<xe)throw Fr(re),new Ar("String has UTF-16 code units that do not fit in 8 bits");pe()[fe+I>>>0]=xe}else for(I=0;I<U;++I)pe()[fe+I>>>0]=S[I];return b!==null&&b.push(Fr,re),re},zd:hr,readValueFromPointer:Es,Ad(b){Fr(b)}})}var G=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ee=(d,m)=>{for(var b=d>>1,S=b+m/2;!(b>=S)&&L()[b>>>0];)++b;if(32<(b<<=1)-d&&G)return G.decode(pe().slice(d,b));for(b="",S=0;!(S>=m/2);++S){var I=V()[d+2*S>>>1>>>0];if(I==0)break;b+=String.fromCharCode(I)}return b},ie=(d,m,b)=>{if(b??=2147483647,2>b)return 0;var S=m;b=(b-=2)<2*d.length?b/2:d.length;for(var I=0;I<b;++I){var U=d.charCodeAt(I);V()[m>>>1>>>0]=U,m+=2}return V()[m>>>1>>>0]=0,m-S},_e=d=>2*d.length,$e=(d,m)=>{for(var b=0,S="";!(b>=m/4);){var I=O()[d+4*b>>>2>>>0];if(I==0)break;++b,65536<=I?(I-=65536,S+=String.fromCharCode(55296|I>>10,56320|1023&I)):S+=String.fromCharCode(I)}return S},Ke=(d,m,b)=>{if(m>>>=0,b??=2147483647,4>b)return 0;var S=m;b=S+b-4;for(var I=0;I<d.length;++I){var U=d.charCodeAt(I);if(55296<=U&&57343>=U&&(U=65536+((1023&U)<<10)|1023&d.charCodeAt(++I)),O()[m>>>2>>>0]=U,(m+=4)+4>b)break}return O()[m>>>2>>>0]=0,m-S},He=d=>{for(var m=0,b=0;b<d.length;++b){var S=d.charCodeAt(b);55296<=S&&57343>=S&&++b,m+=4}return m};function qe(d,m,b){if(d>>>=0,m>>>=0,b=br(b>>>=0),m===2)var S=ee,I=ie,U=_e,re=fe=>L()[fe>>>1>>>0];else m===4&&(S=$e,I=Ke,U=He,re=fe=>J()[fe>>>2>>>0]);Pr(d,{name:b,fromWireType:fe=>{for(var xe,Be=J()[fe>>>2>>>0],Xe=fe+4,rt=0;rt<=Be;++rt){var ft=fe+4+rt*m;rt!=Be&&re(ft)!=0||(Xe=S(Xe,ft-Xe),xe===void 0?xe=Xe:(xe+="\0",xe+=Xe),Xe=ft+m)}return Fr(fe),xe},toWireType:(fe,xe)=>{if(typeof xe!="string")throw new Ar(`Cannot pass non-string to C++ string type ${b}`);var Be=U(xe),Xe=fn(4+Be+m);return J()[Xe>>>2>>>0]=Be/m,I(xe,Xe+4,Be+m),fe!==null&&fe.push(Fr,Xe),Xe},zd:hr,readValueFromPointer:Es,Ad(fe){Fr(fe)}})}function We(d,m){Pr(d>>>=0,{Qd:!0,name:m=br(m>>>0),zd:0,fromWireType:()=>{},toWireType:()=>{}})}function vt(d){Kn(d>>>0,!i,1,!o,131072,!1),Mt()}var mt=d=>{if(!se)try{if(d(),!(0<te))try{a?_n(y):De(y)}catch(m){m instanceof Ve||m=="unwind"||w(0,m)}}catch(m){m instanceof Ve||m=="unwind"||w(0,m)}};function Bt(d){d>>>=0,typeof Atomics.ge=="function"&&(Atomics.ge(O(),d>>>2,d).value.then(Kt),d+=128,Atomics.store(O(),d>>>2,1))}var Kt=()=>{var d=mn();d&&(Bt(d),mt(Uo))};function Ut(d,m){(d>>>=0)==m>>>0?setTimeout(Kt):a?postMessage({Ed:d,yd:"checkMailbox"}):(d=lt[d])&&d.postMessage({yd:"checkMailbox"})}var Ht=[];function sr(d,m,b,S,I){for(m>>>=0,S/=2,Ht.length=S,b=I>>>0>>>3,I=0;I<S;I++)Ht[I]=z[b+2*I]?z[b+2*I+1]:be()[b+2*I+1>>>0];return(m?Ae[m]:Ia[d])(...Ht)}var zr=()=>{te=0};function Ps(d){d>>>=0,a?postMessage({yd:"cleanupThread",ee:d}):Tt(lt[d])}function gr(d){}var Ir=(d,m)=>{var b=gs[d];if(b===void 0)throw d=Gn(d),b=br(d),Fr(d),new Ar(`${m} has unknown type ${b}`);return b},Rt=(d,m,b)=>{var S=[];return d=d.toWireType(S,b),S.length&&(J()[m>>>2>>>0]=er(S)),d};function nr(d,m,b){return m>>>=0,b>>>=0,d=lr(d>>>0),m=Ir(m,"emval::as"),Rt(m,b,d)}function wr(d,m){return m>>>=0,d=lr(d>>>0),(m=Ir(m,"emval::as")).toWireType(null,d)}var Sr=d=>{try{d()}catch(m){ve(m)}},mr=0,It=null,Br=0,qt=[],Wt={},Qt={},Yt=0,tr=null,Vs=[];function ln(d){return function(m){if(!se){if(mr===0){var b=!1,S=!1;m((I=0)=>{if(!se&&(Br=I,b=!0,S)){mr=2,Sr(()=>Ei(It)),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.resume(),I=!1;try{var U=function(){var xe=O()[It+8>>>2>>>0];return xe=Fe[Qt[xe]],--te,xe()}()}catch(xe){U=xe,I=!0}var re=!1;if(!It){var fe=tr;fe&&(tr=null,(I?fe.reject:fe.resolve)(U),re=!0)}if(I&&!re)throw U}}),S=!0,b||(mr=1,It=function(){var I=fn(65548),U=I+12;J()[I>>>2>>>0]=U,J()[I+4>>>2>>>0]=U+65536,U=qt[0];var re=Wt[U];return re===void 0&&(re=Yt++,Wt[U]=re,Qt[re]=U),U=re,O()[I+8>>>2>>>0]=U,I}(),typeof MainLoop<"u"&&MainLoop.Md&&MainLoop.pause(),Sr(()=>xi(It)))}else mr===2?(mr=0,Sr(Pi),Fr(It),It=null,Vs.forEach(mt)):ve(`invalid state: ${mr}`);return Br}}(m=>{d().then(m)})}function oa(d){return d>>>=0,ln(async()=>{var m=await lr(d);return er(m)})}var dn=[];function ia(d,m,b,S){return b>>>=0,S>>>=0,(d=dn[d>>>0])(null,m=lr(m>>>0),b,S)}var Us={},cn=d=>{var m=Us[d];return m===void 0?br(d):m};function aa(d,m,b,S,I){return b>>>=0,S>>>=0,I>>>=0,(d=dn[d>>>0])(m=lr(m>>>0),m[b=cn(b)],S,I)}var vo=()=>typeof globalThis=="object"?globalThis:Function("return this")();function la(d){return(d>>>=0)==0?er(vo()):(d=cn(d),er(vo()[d]))}var da=d=>{var m=dn.length;return dn.push(d),m},To=(d,m)=>{for(var b=Array(d),S=0;S<d;++S)b[S]=Ir(J()[m+4*S>>>2>>>0],"parameter "+S);return b},xo=(d,m)=>Object.defineProperty(m,"name",{value:d});function ca(d,m,b){var S=(m=To(d,m>>>0)).shift();d--;var I=`return function (obj, func, destructorsRef, args) {
`,U=0,re=[];b===0&&re.push("obj");for(var fe=["retType"],xe=[S],Be=0;Be<d;++Be)re.push("arg"+Be),fe.push("argType"+Be),xe.push(m[Be]),I+=`  var arg${Be} = argType${Be}.readValueFromPointer(args${U?"+"+U:""});
`,U+=m[Be].zd;return I+=`  var rv = ${b===1?"new func":"func.call"}(${re.join(", ")});
`,S.Qd||(fe.push("emval_returnValue"),xe.push(Rt),I+=`  return emval_returnValue(retType, destructorsRef, rv);
`),fe.push(I+`};
`),d=function(Xe){var rt=Function;if(!(rt instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof rt} which is not a function`);var ft=xo(rt.name||"unknownFunctionName",function(){});return ft.prototype=rt.prototype,ft=new ft,(Xe=rt.apply(ft,Xe))instanceof Object?Xe:ft}(fe)(...xe),b=`methodCaller<(${m.map(Xe=>Xe.name).join(", ")}) => ${S.name}>`,da(xo(b,d))}function Eo(d){return d=cn(d>>>0),er(s[d])}function ua(d,m){return m>>>=0,d=lr(d>>>0),m=lr(m),er(d[m])}function Po(d){9<(d>>>=0)&&(Cr[d+1]+=1)}function pa(){return er([])}function Co(d){d=lr(d>>>0);for(var m=Array(d.length),b=0;b<d.length;b++)m[b]=d[b];return er(m)}function ed(d){return er(cn(d>>>0))}function ha(){return er({})}function So(d){for(var m=lr(d>>>=0);m.length;){var b=m.pop();m.pop()(b)}xs(d)}function ma(d,m,b){m>>>=0,b>>>=0,d=lr(d>>>0),m=lr(m),b=lr(b),d[m]=b}function Ln(d,m){return m>>>=0,d=(d=Ir(d>>>0,"_emval_take_value")).readValueFromPointer(m),er(d)}function fa(d,m){d=-9007199254740992>d||9007199254740992<d?NaN:Number(d),m>>>=0,d=new Date(1e3*d),O()[m>>>2>>>0]=d.getUTCSeconds(),O()[m+4>>>2>>>0]=d.getUTCMinutes(),O()[m+8>>>2>>>0]=d.getUTCHours(),O()[m+12>>>2>>>0]=d.getUTCDate(),O()[m+16>>>2>>>0]=d.getUTCMonth(),O()[m+20>>>2>>>0]=d.getUTCFullYear()-1900,O()[m+24>>>2>>>0]=d.getUTCDay(),d=(d.getTime()-Date.UTC(d.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,O()[m+28>>>2>>>0]=d}var $o=d=>d%4==0&&(d%100!=0||d%400==0),ko=[0,31,60,91,121,152,182,213,244,274,305,335],Ao=[0,31,59,90,120,151,181,212,243,273,304,334];function _a(d,m){d=-9007199254740992>d||9007199254740992<d?NaN:Number(d),m>>>=0,d=new Date(1e3*d),O()[m>>>2>>>0]=d.getSeconds(),O()[m+4>>>2>>>0]=d.getMinutes(),O()[m+8>>>2>>>0]=d.getHours(),O()[m+12>>>2>>>0]=d.getDate(),O()[m+16>>>2>>>0]=d.getMonth(),O()[m+20>>>2>>>0]=d.getFullYear()-1900,O()[m+24>>>2>>>0]=d.getDay();var b=($o(d.getFullYear())?ko:Ao)[d.getMonth()]+d.getDate()-1|0;O()[m+28>>>2>>>0]=b,O()[m+36>>>2>>>0]=-60*d.getTimezoneOffset(),b=new Date(d.getFullYear(),6,1).getTimezoneOffset();var S=new Date(d.getFullYear(),0,1).getTimezoneOffset();d=0|(b!=S&&d.getTimezoneOffset()==Math.min(S,b)),O()[m+32>>>2>>>0]=d}function ga(d){d>>>=0;var m=new Date(O()[d+20>>>2>>>0]+1900,O()[d+16>>>2>>>0],O()[d+12>>>2>>>0],O()[d+8>>>2>>>0],O()[d+4>>>2>>>0],O()[d>>>2>>>0],0),b=O()[d+32>>>2>>>0],S=m.getTimezoneOffset(),I=new Date(m.getFullYear(),6,1).getTimezoneOffset(),U=new Date(m.getFullYear(),0,1).getTimezoneOffset(),re=Math.min(U,I);return 0>b?O()[d+32>>>2>>>0]=+(I!=U&&re==S):0<b!=(re==S)&&(I=Math.max(U,I),m.setTime(m.getTime()+6e4*((0<b?re:I)-S))),O()[d+24>>>2>>>0]=m.getDay(),b=($o(m.getFullYear())?ko:Ao)[m.getMonth()]+m.getDate()-1|0,O()[d+28>>>2>>>0]=b,O()[d>>>2>>>0]=m.getSeconds(),O()[d+4>>>2>>>0]=m.getMinutes(),O()[d+8>>>2>>>0]=m.getHours(),O()[d+12>>>2>>>0]=m.getDate(),O()[d+16>>>2>>>0]=m.getMonth(),O()[d+20>>>2>>>0]=m.getYear(),d=m.getTime(),BigInt(isNaN(d)?-1:d/1e3)}function Io(d,m,b,S,I,U,re){return a?oe(16,1,d,m,b,S,I,U,re):-52}function un(d,m,b,S,I,U){if(a)return oe(17,1,d,m,b,S,I,U)}var Cs={},wa=()=>performance.timeOrigin+performance.now();function zn(d,m){if(a)return oe(18,1,d,m);if(Cs[d]&&(clearTimeout(Cs[d].id),delete Cs[d]),!m)return 0;var b=setTimeout(()=>{delete Cs[d],mt(()=>Vo(d,performance.timeOrigin+performance.now()))},m);return Cs[d]={id:b,ke:m},0}function Ss(d,m,b,S){d>>>=0,m>>>=0,b>>>=0,S>>>=0;var I=new Date().getFullYear(),U=new Date(I,0,1).getTimezoneOffset();I=new Date(I,6,1).getTimezoneOffset();var re=Math.max(U,I);J()[d>>>2>>>0]=60*re,O()[m>>>2>>>0]=+(U!=I),d=(m=fe=>{var xe=Math.abs(fe);return`UTC${0<=fe?"-":"+"}${String(Math.floor(xe/60)).padStart(2,"0")}${String(xe%60).padStart(2,"0")}`})(U),m=m(I),I<U?(Gr(d,b,17),Gr(m,S,17)):(Gr(d,S,17),Gr(m,b,17))}var ya=()=>Date.now();function td(d,m,b){return 0<=d&&3>=d?(d===0?d=Date.now():d=performance.timeOrigin+performance.now(),z[b>>>0>>>3]=BigInt(Math.round(1e6*d)),0):28}var Bn=[],Ma=(d,m)=>{Bn.length=0;for(var b;b=pe()[d++>>>0];){var S=b!=105;m+=(S&=b!=112)&&m%8?4:0,Bn.push(b==112?J()[m>>>2>>>0]:b==106?z[m>>>3]:b==105?O()[m>>>2>>>0]:be()[m>>>3>>>0]),m+=S?8:4}return Bn};function ba(d,m,b){return d>>>=0,m=Ma(m>>>0,b>>>0),Ae[d](...m)}function Fo(d,m,b){return d>>>=0,m=Ma(m>>>0,b>>>0),Ae[d](...m)}var va=()=>{};function Ta(d,m){return g(Qe(d>>>0,m>>>0))}var xa=()=>{throw te+=1,"unwind"};function Ea(){return 4294901760}var Pa=()=>navigator.hardwareConcurrency;function Rn(){return ve("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Ca(d){d>>>=0;var m=pe().length;if(d<=m||4294901760<d)return!1;for(var b=1;4>=b;b*=2){var S=m*(1+.2/b);S=Math.min(S,d+100663296);e:{S=(Math.min(4294901760,65536*Math.ceil(Math.max(d,S)/65536))-$.buffer.byteLength+65535)/65536|0;try{$.grow(S),Ne();var I=1;break e}catch{}I=void 0}if(I)return!0}return!1}var pn=()=>(ve("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Ws={},Nn=d=>{d.forEach(m=>{pn()})};function Sa(){var d=Error().stack.toString().split(`
`);return d[0]=="Error"&&d.shift(),Nn(d),Ws.Kd=pn(),Ws.ae=d,Ws.Kd}function $a(d,m,b){if(d>>>=0,m>>>=0,Ws.Kd==d)var S=Ws.ae;else(S=Error().stack.toString().split(`
`))[0]=="Error"&&S.shift(),Nn(S);for(var I=3;S[I]&&pn()!=d;)++I;for(d=0;d<b&&S[d+I];++d)O()[m+4*d>>>2>>>0]=pn();return d}var hn,jn={},Oo=()=>{if(!hn){var d,m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(d in jn)jn[d]===void 0?delete m[d]:m[d]=jn[d];var b=[];for(d in m)b.push(`${d}=${m[d]}`);hn=b}return hn};function Vn(d,m){if(a)return oe(19,1,d,m);d>>>=0,m>>>=0;var b=0;return Oo().forEach((S,I)=>{var U=m+b;for(I=J()[d+4*I>>>2>>>0]=U,U=0;U<S.length;++U)ae()[I++>>>0]=S.charCodeAt(U);ae()[I>>>0]=0,b+=S.length+1}),0}function Do(d,m){if(a)return oe(20,1,d,m);d>>>=0,m>>>=0;var b=Oo();J()[d>>>2>>>0]=b.length;var S=0;return b.forEach(I=>S+=I.length+1),J()[m>>>2>>>0]=S,0}function Lo(d){return a?oe(21,1,d):52}function Un(d,m,b,S){return a?oe(22,1,d,m,b,S):52}function zo(d,m,b,S){return a?oe(23,1,d,m,b,S):70}var ka=[null,[],[]];function Wn(d,m,b,S){if(a)return oe(24,1,d,m,b,S);m>>>=0,b>>>=0,S>>>=0;for(var I=0,U=0;U<b;U++){var re=J()[m>>>2>>>0],fe=J()[m+4>>>2>>>0];m+=8;for(var xe=0;xe<fe;xe++){var Be=pe()[re+xe>>>0],Xe=ka[d];Be===0||Be===10?((d===1?T:g)(Je(Xe)),Xe.length=0):Xe.push(Be)}I+=fe}return J()[S>>>2>>>0]=I,0}function Aa(d){return d>>>0}a||function(){for(var d=s.numThreads-1;d--;)Lt();Y.unshift(()=>{W++,function(m){a?m():Promise.all(we.map(rr)).then(m)}(()=>Pe())})}();for(var Bo=Array(256),Gs=0;256>Gs;++Gs)Bo[Gs]=String.fromCharCode(Gs);Ns=Bo,Ar=s.BindingError=class extends Error{constructor(d){super(d),this.name="BindingError"}},s.InternalError=class extends Error{constructor(d){super(d),this.name="InternalError"}},Cr.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>Cr.length/2-5-Ts.length;var Fe,Ia=[Te,Ce,fs,ar,Is,Fs,vs,Os,Ds,Kr,_s,Ls,zs,Bs,Rs,Yr,Io,un,zn,Vn,Do,Lo,Un,zo,Wn];(async function(){function d(S,I){return Fe=S.exports,Fe=function(){var U=Fe,re={};for(let[fe,xe]of Object.entries(U))re[fe]=typeof xe=="function"?(...Be)=>{qt.push(fe);try{return xe(...Be)}finally{se||(qt.pop(),It&&mr===1&&qt.length===0&&(mr=0,te+=1,Sr(uo),typeof Fibers<"u"&&Fibers.le()))}}:xe;return re}(),Fe=function(){var U=Fe,re=xe=>Be=>xe(Be)>>>0,fe=xe=>()=>xe()>>>0;return(U=Object.assign({},U)).Cb=re(U.Cb),U.fc=fe(U.fc),U.ic=re(U.ic),U.vc=re(U.vc),U.wc=fe(U.wc),U.Ac=re(U.Ac),U}(),ot.push(Fe.jc),P=I,Pe(),Fe}W++;var m=ke();if(s.instantiateWasm)return new Promise(S=>{s.instantiateWasm(m,(I,U)=>{d(I,U),S(I.exports)})});if(a)return new Promise(S=>{ue=I=>{var U=new WebAssembly.Instance(I,ke());S(d(U,I))}});K??=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",_):_+"ort-wasm-simd-threaded.jsep.wasm":new URL("/_astro/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",import.meta.url).href;try{var b=await async function(S){var I=K;if(!X&&typeof WebAssembly.instantiateStreaming=="function"&&!ne(I))try{var U=fetch(I,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(U,S)}catch(re){g(`wasm streaming compile failed: ${re}`),g("falling back to ArrayBuffer instantiation")}return async function(re,fe){try{var xe=await async function(Be){if(!X)try{var Xe=await p(Be);return new Uint8Array(Xe)}catch{}if(Be==K&&X)Be=new Uint8Array(X);else{if(!u)throw"both async and sync fetching of the wasm failed";Be=u(Be)}return Be}(re);return await WebAssembly.instantiate(xe,fe)}catch(Be){g(`failed to asynchronously prepare wasm: ${Be}`),ve(Be)}}(I,S)}(m);return d(b.instance,b.module)}catch(S){return t(S),Promise.reject(S)}})();var Gn=d=>(Gn=Fe.Cb)(d),Ro=()=>(Ro=Fe.Db)();s._OrtInit=(d,m)=>(s._OrtInit=Fe.Eb)(d,m),s._OrtGetLastError=(d,m)=>(s._OrtGetLastError=Fe.Fb)(d,m),s._OrtCreateSessionOptions=(d,m,b,S,I,U,re,fe,xe,Be)=>(s._OrtCreateSessionOptions=Fe.Gb)(d,m,b,S,I,U,re,fe,xe,Be),s._OrtAppendExecutionProvider=(d,m)=>(s._OrtAppendExecutionProvider=Fe.Hb)(d,m),s._OrtAddFreeDimensionOverride=(d,m,b)=>(s._OrtAddFreeDimensionOverride=Fe.Ib)(d,m,b),s._OrtAddSessionConfigEntry=(d,m,b)=>(s._OrtAddSessionConfigEntry=Fe.Jb)(d,m,b),s._OrtReleaseSessionOptions=d=>(s._OrtReleaseSessionOptions=Fe.Kb)(d),s._OrtCreateSession=(d,m,b)=>(s._OrtCreateSession=Fe.Lb)(d,m,b),s._OrtReleaseSession=d=>(s._OrtReleaseSession=Fe.Mb)(d),s._OrtGetInputOutputCount=(d,m,b)=>(s._OrtGetInputOutputCount=Fe.Nb)(d,m,b),s._OrtGetInputName=(d,m)=>(s._OrtGetInputName=Fe.Ob)(d,m),s._OrtGetOutputName=(d,m)=>(s._OrtGetOutputName=Fe.Pb)(d,m),s._OrtFree=d=>(s._OrtFree=Fe.Qb)(d),s._OrtCreateTensor=(d,m,b,S,I,U)=>(s._OrtCreateTensor=Fe.Rb)(d,m,b,S,I,U),s._OrtGetTensorData=(d,m,b,S,I)=>(s._OrtGetTensorData=Fe.Sb)(d,m,b,S,I),s._OrtReleaseTensor=d=>(s._OrtReleaseTensor=Fe.Tb)(d),s._OrtCreateRunOptions=(d,m,b,S)=>(s._OrtCreateRunOptions=Fe.Ub)(d,m,b,S),s._OrtAddRunConfigEntry=(d,m,b)=>(s._OrtAddRunConfigEntry=Fe.Vb)(d,m,b),s._OrtReleaseRunOptions=d=>(s._OrtReleaseRunOptions=Fe.Wb)(d),s._OrtCreateBinding=d=>(s._OrtCreateBinding=Fe.Xb)(d),s._OrtBindInput=(d,m,b)=>(s._OrtBindInput=Fe.Yb)(d,m,b),s._OrtBindOutput=(d,m,b,S)=>(s._OrtBindOutput=Fe.Zb)(d,m,b,S),s._OrtClearBoundOutputs=d=>(s._OrtClearBoundOutputs=Fe._b)(d),s._OrtReleaseBinding=d=>(s._OrtReleaseBinding=Fe.$b)(d),s._OrtRunWithBinding=(d,m,b,S,I)=>(s._OrtRunWithBinding=Fe.ac)(d,m,b,S,I),s._OrtRun=(d,m,b,S,I,U,re,fe)=>(s._OrtRun=Fe.bc)(d,m,b,S,I,U,re,fe),s._OrtEndProfiling=d=>(s._OrtEndProfiling=Fe.cc)(d),s._JsepOutput=(d,m,b)=>(s._JsepOutput=Fe.dc)(d,m,b),s._JsepGetNodeName=d=>(s._JsepGetNodeName=Fe.ec)(d);var mn=()=>(mn=Fe.fc)(),Fr=s._free=d=>(Fr=s._free=Fe.gc)(d),fn=s._malloc=d=>(fn=s._malloc=Fe.ic)(d),Kn=(d,m,b,S,I,U)=>(Kn=Fe.kc)(d,m,b,S,I,U),Hn=()=>(Hn=Fe.lc)(),No=(d,m,b,S,I)=>(No=Fe.mc)(d,m,b,S,I),jo=d=>(jo=Fe.nc)(d),_n=d=>(_n=Fe.oc)(d),Vo=(d,m)=>(Vo=Fe.pc)(d,m),Uo=()=>(Uo=Fe.qc)(),pt=(d,m)=>(pt=Fe.rc)(d,m),Ks=d=>(Ks=Fe.sc)(d),Wo=(d,m)=>(Wo=Fe.tc)(d,m),ct=d=>(ct=Fe.uc)(d),qn=d=>(qn=Fe.vc)(d),ht=()=>(ht=Fe.wc)(),Qn=d=>(Qn=Fe.xc)(d),Go=d=>(Go=Fe.yc)(d),Ko=(d,m,b)=>(Ko=Fe.zc)(d,m,b),Xn=d=>(Xn=Fe.Ac)(d),Ho=s.dynCall_iii=(d,m,b)=>(Ho=s.dynCall_iii=Fe.Bc)(d,m,b),qo=s.dynCall_vi=(d,m)=>(qo=s.dynCall_vi=Fe.Cc)(d,m),gn=s.dynCall_ii=(d,m)=>(gn=s.dynCall_ii=Fe.Dc)(d,m),Qo=s.dynCall_vii=(d,m,b)=>(Qo=s.dynCall_vii=Fe.Ec)(d,m,b),Xo=s.dynCall_iiii=(d,m,b,S)=>(Xo=s.dynCall_iiii=Fe.Fc)(d,m,b,S),Jn=s.dynCall_viii=(d,m,b,S)=>(Jn=s.dynCall_viii=Fe.Gc)(d,m,b,S),Jo=s.dynCall_iiiii=(d,m,b,S,I)=>(Jo=s.dynCall_iiiii=Fe.Hc)(d,m,b,S,I),Yo=s.dynCall_viiii=(d,m,b,S,I)=>(Yo=s.dynCall_viiii=Fe.Ic)(d,m,b,S,I),Yn=s.dynCall_viiiiii=(d,m,b,S,I,U,re)=>(Yn=s.dynCall_viiiiii=Fe.Jc)(d,m,b,S,I,U,re),Zo=s.dynCall_viiiiiii=(d,m,b,S,I,U,re,fe)=>(Zo=s.dynCall_viiiiiii=Fe.Kc)(d,m,b,S,I,U,re,fe),ei=s.dynCall_ji=(d,m)=>(ei=s.dynCall_ji=Fe.Lc)(d,m),Zn=s.dynCall_v=d=>(Zn=s.dynCall_v=Fe.Mc)(d),ti=s.dynCall_viiiii=(d,m,b,S,I,U)=>(ti=s.dynCall_viiiii=Fe.Nc)(d,m,b,S,I,U),ri=s.dynCall_i=d=>(ri=s.dynCall_i=Fe.Oc)(d),eo=s.dynCall_fii=(d,m,b)=>(eo=s.dynCall_fii=Fe.Pc)(d,m,b),si=s.dynCall_viiiiiiii=(d,m,b,S,I,U,re,fe,xe)=>(si=s.dynCall_viiiiiiii=Fe.Qc)(d,m,b,S,I,U,re,fe,xe),ni=s.dynCall_viiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be,Xe)=>(ni=s.dynCall_viiiiiiiiii=Fe.Rc)(d,m,b,S,I,U,re,fe,xe,Be,Xe),to=s.dynCall_jiii=(d,m,b,S)=>(to=s.dynCall_jiii=Fe.Sc)(d,m,b,S),oi=s.dynCall_dii=(d,m,b)=>(oi=s.dynCall_dii=Fe.Tc)(d,m,b),ii=s.dynCall_viiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be)=>(ii=s.dynCall_viiiiiiiii=Fe.Uc)(d,m,b,S,I,U,re,fe,xe,Be),ro=s.dynCall_viiiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt)=>(ro=s.dynCall_viiiiiiiiiii=Fe.Vc)(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt),ai=s.dynCall_iiiiii=(d,m,b,S,I,U)=>(ai=s.dynCall_iiiiii=Fe.Wc)(d,m,b,S,I,U),li=s.dynCall_iij=(d,m,b)=>(li=s.dynCall_iij=Fe.Xc)(d,m,b),so=s.dynCall_iiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be)=>(so=s.dynCall_iiiiiiiiii=Fe.Yc)(d,m,b,S,I,U,re,fe,xe,Be),di=s.dynCall_iiiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be,Xe)=>(di=s.dynCall_iiiiiiiiiii=Fe.Zc)(d,m,b,S,I,U,re,fe,xe,Be,Xe),ci=s.dynCall_vij=(d,m,b)=>(ci=s.dynCall_vij=Fe._c)(d,m,b),ui=s.dynCall_iiif=(d,m,b,S)=>(ui=s.dynCall_iiif=Fe.$c)(d,m,b,S),pi=s.dynCall_iiij=(d,m,b,S)=>(pi=s.dynCall_iiij=Fe.ad)(d,m,b,S),no=s.dynCall_fiii=(d,m,b,S)=>(no=s.dynCall_fiii=Fe.bd)(d,m,b,S),hi=s.dynCall_viiiiiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)=>(hi=s.dynCall_viiiiiiiiiiiii=Fe.cd)(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot),mi=s.dynCall_vjiii=(d,m,b,S,I)=>(mi=s.dynCall_vjiii=Fe.dd)(d,m,b,S,I),oo=s.dynCall_vif=(d,m,b)=>(oo=s.dynCall_vif=Fe.ed)(d,m,b),fi=s.dynCall_iiiiiii=(d,m,b,S,I,U,re)=>(fi=s.dynCall_iiiiiii=Fe.fd)(d,m,b,S,I,U,re),_i=s.dynCall_iiiij=(d,m,b,S,I)=>(_i=s.dynCall_iiiij=Fe.gd)(d,m,b,S,I),io=s.dynCall_iiiiiiii=(d,m,b,S,I,U,re,fe)=>(io=s.dynCall_iiiiiiii=Fe.hd)(d,m,b,S,I,U,re,fe),gi=s.dynCall_viiiiiiiiiiii=(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft)=>(gi=s.dynCall_viiiiiiiiiiii=Fe.id)(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft),wi=s.dynCall_diii=(d,m,b,S)=>(wi=s.dynCall_diii=Fe.jd)(d,m,b,S),ao=s.dynCall_jiiii=(d,m,b,S,I)=>(ao=s.dynCall_jiiii=Fe.kd)(d,m,b,S,I),yi=s.dynCall_viiij=(d,m,b,S,I)=>(yi=s.dynCall_viiij=Fe.ld)(d,m,b,S,I),Mi=s.dynCall_fiiii=(d,m,b,S,I)=>(Mi=s.dynCall_fiiii=Fe.md)(d,m,b,S,I),lo=s.dynCall_viiif=(d,m,b,S,I)=>(lo=s.dynCall_viiif=Fe.nd)(d,m,b,S,I),bi=s.dynCall_diiii=(d,m,b,S,I)=>(bi=s.dynCall_diiii=Fe.od)(d,m,b,S,I),vi=s.dynCall_viiid=(d,m,b,S,I)=>(vi=s.dynCall_viiid=Fe.pd)(d,m,b,S,I),co=s.dynCall_iiiijii=(d,m,b,S,I,U,re)=>(co=s.dynCall_iiiijii=Fe.qd)(d,m,b,S,I,U,re),Ti=s.dynCall_iiiiiij=(d,m,b,S,I,U,re)=>(Ti=s.dynCall_iiiiiij=Fe.rd)(d,m,b,S,I,U,re),xi=d=>(xi=Fe.sd)(d),uo=()=>(uo=Fe.td)(),Ei=d=>(Ei=Fe.ud)(d),Pi=()=>(Pi=Fe.vd)();function Fa(d,m,b){var S=ht();try{Qo(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Oa(d,m,b){var S=ht();try{return Ho(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Ci(d,m){var b=ht();try{qo(d,m)}catch(S){if(ct(b),S!==S+0)throw S;pt(1,0)}}function Da(d,m){var b=ht();try{return gn(d,m)}catch(S){if(ct(b),S!==S+0)throw S;pt(1,0)}}function La(d,m,b,S){var I=ht();try{return Xo(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function za(d,m,b,S,I){var U=ht();try{Yo(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function Ba(d,m,b,S,I){var U=ht();try{return Jo(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function Si(d,m,b,S){var I=ht();try{Jn(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function Ra(d,m,b,S,I,U,re){var fe=ht();try{return fi(d,m,b,S,I,U,re)}catch(xe){if(ct(fe),xe!==xe+0)throw xe;pt(1,0)}}function Na(d){var m=ht();try{Zn(d)}catch(b){if(ct(m),b!==b+0)throw b;pt(1,0)}}function ja(d,m,b){var S=ht();try{return li(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Va(d,m,b,S,I,U){var re=ht();try{ti(d,m,b,S,I,U)}catch(fe){if(ct(re),fe!==fe+0)throw fe;pt(1,0)}}function $i(d,m,b){var S=ht();try{ci(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Ua(d,m,b,S,I,U,re){var fe=ht();try{Yn(d,m,b,S,I,U,re)}catch(xe){if(ct(fe),xe!==xe+0)throw xe;pt(1,0)}}function Wa(d,m,b,S,I,U,re,fe){var xe=ht();try{Zo(d,m,b,S,I,U,re,fe)}catch(Be){if(ct(xe),Be!==Be+0)throw Be;pt(1,0)}}function Ga(d,m,b,S,I,U){var re=ht();try{return ai(d,m,b,S,I,U)}catch(fe){if(ct(re),fe!==fe+0)throw fe;pt(1,0)}}function Ka(d,m,b,S,I,U,re,fe){var xe=ht();try{return io(d,m,b,S,I,U,re,fe)}catch(Be){if(ct(xe),Be!==Be+0)throw Be;pt(1,0)}}function ki(d,m,b,S,I,U,re,fe,xe,Be){var Xe=ht();try{ii(d,m,b,S,I,U,re,fe,xe,Be)}catch(rt){if(ct(Xe),rt!==rt+0)throw rt;pt(1,0)}}function Ha(d,m,b,S,I,U,re,fe,xe){var Be=ht();try{si(d,m,b,S,I,U,re,fe,xe)}catch(Xe){if(ct(Be),Xe!==Xe+0)throw Xe;pt(1,0)}}function qa(d){var m=ht();try{return ri(d)}catch(b){if(ct(m),b!==b+0)throw b;pt(1,0)}}function Ai(d,m,b,S,I,U,re,fe,xe,Be){var Xe=ht();try{return so(d,m,b,S,I,U,re,fe,xe,Be)}catch(rt){if(ct(Xe),rt!==rt+0)throw rt;pt(1,0)}}function Qa(d,m,b){var S=ht();try{return eo(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Xa(d,m,b,S){var I=ht();try{return to(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;return pt(1,0),0n}}function Ii(d,m,b){var S=ht();try{return oi(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function Ja(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt){var ft=ht();try{ro(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt)}catch(Ot){if(ct(ft),Ot!==Ot+0)throw Ot;pt(1,0)}}function Ya(d,m,b,S,I,U,re,fe,xe,Be,Xe){var rt=ht();try{ni(d,m,b,S,I,U,re,fe,xe,Be,Xe)}catch(ft){if(ct(rt),ft!==ft+0)throw ft;pt(1,0)}}function Fi(d,m,b,S,I,U,re,fe,xe,Be,Xe){var rt=ht();try{return di(d,m,b,S,I,U,re,fe,xe,Be,Xe)}catch(ft){if(ct(rt),ft!==ft+0)throw ft;pt(1,0)}}function Za(d,m,b,S){var I=ht();try{return ui(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function el(d,m,b,S){var I=ht();try{return pi(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function Oi(d,m,b,S){var I=ht();try{return no(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function tl(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot){var vr=ht();try{hi(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft,Ot)}catch(Hs){if(ct(vr),Hs!==Hs+0)throw Hs;pt(1,0)}}function rl(d,m,b,S,I){var U=ht();try{mi(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function po(d,m,b){var S=ht();try{oo(d,m,b)}catch(I){if(ct(S),I!==I+0)throw I;pt(1,0)}}function sl(d,m){var b=ht();try{return ei(d,m)}catch(S){if(ct(b),S!==S+0)throw S;return pt(1,0),0n}}function nl(d,m,b,S,I){var U=ht();try{return _i(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function Di(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft){var Ot=ht();try{gi(d,m,b,S,I,U,re,fe,xe,Be,Xe,rt,ft)}catch(vr){if(ct(Ot),vr!==vr+0)throw vr;pt(1,0)}}function Li(d,m,b,S){var I=ht();try{return wi(d,m,b,S)}catch(U){if(ct(I),U!==U+0)throw U;pt(1,0)}}function ol(d,m,b,S,I){var U=ht();try{return ao(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;return pt(1,0),0n}}function zi(d,m,b,S,I){var U=ht();try{yi(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function il(d,m,b,S,I){var U=ht();try{return Mi(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function al(d,m,b,S,I){var U=ht();try{lo(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function ll(d,m,b,S,I){var U=ht();try{return bi(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function Bi(d,m,b,S,I){var U=ht();try{vi(d,m,b,S,I)}catch(re){if(ct(U),re!==re+0)throw re;pt(1,0)}}function dl(d,m,b,S,I,U,re){var fe=ht();try{return co(d,m,b,S,I,U,re)}catch(xe){if(ct(fe),xe!==xe+0)throw xe;pt(1,0)}}function cl(d,m,b,S,I,U,re){var fe=ht();try{return Ti(d,m,b,S,I,U,re)}catch(xe){if(ct(fe),xe!==xe+0)throw xe;pt(1,0)}}return s.stackSave=()=>ht(),s.stackRestore=d=>ct(d),s.stackAlloc=d=>qn(d),s.setValue=function(d,m,b="i8"){switch(b.endsWith("*")&&(b="*"),b){case"i1":case"i8":ae()[d>>>0]=m;break;case"i16":V()[d>>>1>>>0]=m;break;case"i32":O()[d>>>2>>>0]=m;break;case"i64":z[d>>>3]=BigInt(m);break;case"float":ce()[d>>>2>>>0]=m;break;case"double":be()[d>>>3>>>0]=m;break;case"*":J()[d>>>2>>>0]=m;break;default:ve(`invalid type for setValue: ${b}`)}},s.getValue=function(d,m="i8"){switch(m.endsWith("*")&&(m="*"),m){case"i1":case"i8":return ae()[d>>>0];case"i16":return V()[d>>>1>>>0];case"i32":return O()[d>>>2>>>0];case"i64":return z[d>>>3];case"float":return ce()[d>>>2>>>0];case"double":return be()[d>>>3>>>0];case"*":return J()[d>>>2>>>0];default:ve(`invalid type for getValue: ${m}`)}},s.UTF8ToString=Qe,s.stringToUTF8=Gr,s.lengthBytesUTF8=Wr,function d(){if(0<W)he=d;else if(a)r(s),ye();else{for(;0<Y.length;)Y.shift()(s);0<W?he=d:(s.calledRun=!0,se||(ye(),r(s)))}}(),s.PTR_SIZE=4,n}),Cw=jd,vm=globalThis.self?.name?.startsWith("em-pthread"),vm&&jd()}),Vd,Fc,Tm,Rr,Sw,kl,xm,Em,Ud,Pm,Wd,$w,Gd,kw,Yc=je(()=>{Jc(),Vd=typeof location>"u"?void 0:location.origin,Fc=import.meta.url>"file:"&&import.meta.url<"file;",Tm=()=>{{if(Fc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Vd).href}return import.meta.url}},Rr=Tm(),Sw=()=>{if(Rr&&!Rr.startsWith("blob:"))return Rr.substring(0,Rr.lastIndexOf("/")+1)},kl=(e,r)=>{try{let t=r??Rr;return(t?new URL(e,t):new URL(e)).origin===Vd}catch{return!1}},xm=(e,r)=>{let t=r??Rr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Em=(e,r)=>`${r??"./"}${e}`,Ud=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},Pm=async e=>(await import(e)).default,Wd=(bv(),Hl(xw)).default,$w=async()=>{if(!Rr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(kl(Rr))return[void 0,Wd()];let e=await Ud(Rr);return[e,Wd(e)]},Gd=(vv(),Hl(Pw)).default,kw=async(e,r,t)=>{if(!e&&!r&&Gd&&Rr&&kl(Rr))return[void 0,Gd];{let s="ort-wasm-simd-threaded.jsep.mjs",n=e??xm(s,r),o=t&&n&&!kl(n,r),i=o?await Ud(n):n??Em(s,r);return[o?i:void 0,await Pm(i)]}}}),Kd,Al,Ui,Hd,Cm,Sm,Zc,cr,Fn=je(()=>{Yc(),Al=!1,Ui=!1,Hd=!1,Cm=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Sm=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Zc=async e=>{if(Al)return Promise.resolve();if(Ui)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Hd)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ui=!0;let r=e.initTimeout,t=e.numThreads;if(!Sm())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=Cm();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let n=e.wasmPaths,o=typeof n=="string"?n:void 0,i=n?.mjs,a=i?.href??i,l=n?.wasm,c=l?.href??l,p=e.wasmBinary,[u,h]=await kw(a,o,t>1),w=!1,_=[];if(r>0&&_.push(new Promise(C=>{setTimeout(()=>{w=!0,C()},r)})),_.push(new Promise((C,F)=>{let T={numThreads:t};if(p)T.wasmBinary=p;else if(c||o)T.locateFile=g=>c??o+g;else if(a&&a.indexOf("blob:")!==0)T.locateFile=g=>new URL(g,a).href;else if(u){let g=Sw();g&&(T.locateFile=$=>g+$)}h(T).then(g=>{Ui=!1,Al=!0,Kd=g,C(),u&&URL.revokeObjectURL(u)},g=>{Ui=!1,Hd=!0,F(g)})})),await Promise.race(_),w)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},cr=()=>{if(Al&&Kd)return Kd;throw new Error("WebAssembly is not initialized yet.")}}),Mr,ql,kt,eu=je(()=>{Fn(),Mr=(e,r)=>{let t=cr(),s=t.lengthBytesUTF8(e)+1,n=t._malloc(s);return t.stringToUTF8(e,n,s),r.push(n),n},ql=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([n,o])=>{let i=r?r+n:n;if(typeof o=="object")ql(o,i+".",t,s);else if(typeof o=="string"||typeof o=="number")s(i,o.toString());else if(typeof o=="boolean")s(i,o?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof o}`)})},kt=e=>{let r=cr(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetLastError(n,n+s);let o=Number(r.getValue(n,s===4?"i32":"i64")),i=r.getValue(n+s,"*"),a=i?r.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${o}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),Aw,Tv=je(()=>{Fn(),eu(),Aw=e=>{let r=cr(),t=0,s=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let o=0;return e?.tag!==void 0&&(o=Mr(e.tag,s)),t=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,o),t===0&&kt("Can't create run options."),e?.extra!==void 0&&ql(e.extra,"",new WeakSet,(i,a)=>{let l=Mr(i,s),c=Mr(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&kt(`Can't set a run config entry: ${i} - ${a}.`)}),[t,s]}catch(o){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(i=>r._free(i)),o}}}),$m,km,Am,Im,Iw,xv=je(()=>{Fn(),eu(),$m=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},km=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Am=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Im=(e,r,t)=>{for(let s of r){let n=typeof s=="string"?s:s.name;switch(n){case"webnn":if(n="WEBNN",typeof s!="string"){let i=s?.deviceType;if(i){let a=Mr("deviceType",t),l=Mr(i,t);cr()._OrtAddSessionConfigEntry(e,a,l)!==0&&kt(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(n="JS",typeof s!="string"){let i=s;if(i?.preferredLayout){if(i.preferredLayout!=="NCHW"&&i.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);let a=Mr("preferredLayout",t),l=Mr(i.preferredLayout,t);cr()._OrtAddSessionConfigEntry(e,a,l)!==0&&kt(`Can't set a session config entry: 'preferredLayout' - ${i.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let o=Mr(n,t);cr()._OrtAppendExecutionProvider(e,o)!==0&&kt(`Can't append execution provider: ${n}.`)}},Iw=e=>{let r=cr(),t=0,s=[],n=e||{};Am(n);try{let o=$m(n.graphOptimizationLevel??"all"),i=km(n.executionMode??"sequential"),a=typeof n.logId=="string"?Mr(n.logId,s):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=n.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof n.optimizedModelFilePath=="string"?Mr(n.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(o,!!n.enableCpuMemArena,!!n.enableMemPattern,i,!!n.enableProfiling,0,a,l,c,p),t===0&&kt("Can't create session options."),n.executionProviders&&Im(t,n.executionProviders,s),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);let u=Mr("enableGraphCapture",s),h=Mr(n.enableGraphCapture.toString(),s);r._OrtAddSessionConfigEntry(t,u,h)!==0&&kt(`Can't set a session config entry: 'enableGraphCapture' - ${n.enableGraphCapture}.`)}if(n.freeDimensionOverrides)for(let[u,h]of Object.entries(n.freeDimensionOverrides)){if(typeof u!="string")throw new Error(`free dimension override name must be a string: ${u}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let w=Mr(u,s);r._OrtAddFreeDimensionOverride(t,w,h)!==0&&kt(`Can't set a free dimension override: ${u} - ${h}.`)}return n.extra!==void 0&&ql(n.extra,"",new WeakSet,(u,h)=>{let w=Mr(u,s),_=Mr(h,s);r._OrtAddSessionConfigEntry(t,w,_)!==0&&kt(`Can't set a session config entry: ${u} - ${h}.`)}),[t,s]}catch(o){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&kt("Can't release session options."),s.forEach(i=>r._free(i)),o}}}),go,Cn,Sn,tu,Ql,ru,su,Oc,ut=je(()=>{go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Cn=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Sn=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((n,o)=>n*o,1);return t>0?Math.ceil(s*t):void 0},tu=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ql=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ru=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",su=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Oc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),nu,Fw=je(()=>{Jc(),nu=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=r.body.getReader(),o;try{o=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);o=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let i=0;for(;;){let{done:a,value:l}=await n.read();if(a)break;let c=l.byteLength;new Uint8Array(o,i,c).set(l),i+=c}return new Uint8Array(o,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Fm,Om,Dm,Lm,ou,zm,Ct,As=je(()=>{ut(),Fm=["V","I","W","E","F"],Om=(e,r)=>{console.log(`[${Fm[e]},${new Date().toISOString()}]${r}`)},ou=(e,r)=>{Dm=e,Lm=r},zm=(e,r)=>{let t=Ql(e),s=Ql(Dm);t>=s&&Om(t,typeof r=="function"?r():r)},Ct=(...e)=>{Lm&&zm(...e)}}),iu,Ow=je(()=>{ut(),iu=(e,r)=>new(tu(r))(e)}),au=je(()=>{}),qd,Il,Fl,Bm,Rm,Qd,Dc,Nm,Dw,Ev=je(()=>{As(),au(),qd=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Il=[],Fl=e=>Math.ceil(Number(e)/16)*16,Bm=e=>{for(let r=0;r<Il.length;r++){let t=Il[r];if(e<=t)return t}return Math.ceil(e/16)*16},Rm=1,Qd=()=>Rm++,Dc=async(e,r,t,s)=>{let n=Fl(t),o=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(r,0,o,0,n),e.flush(),await o.mapAsync(GPUMapMode.READ);let a=o.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{o.destroy()}},Nm=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of qd)Il.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,n=r.byteLength,o=Fl(n),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==n)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${n}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,n)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,i.gpuData.buffer,0,o),this.backend.device.queue.submit([c.finish()]),a.destroy(),Ct("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=Fl(t.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,n)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return Ct("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=Qd();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),Ct("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Ct("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Bm(e),s,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||o){let a=(n?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let i={id:Qd(),type:0,buffer:s};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),Ct("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){return this.storageCache.get(e)?.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Ct("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Dc(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=qd.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(Ct("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Dw=(...e)=>new Nm(...e)}),jm,Ft,Jt=je(()=>{jm=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ft=e=>new jm(e)}),Vm,Mo,Me,Xl,Lw,zw,Bw,gt=je(()=>{Vm=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},Mo=class{static calcShape(e,r,t=!1){let s=e.length,n=r.length;if(s===0)return r;if(n===0)return e;let o=Math.max(e.length,r.length),i=new Array(o);if(t){if(s<2||n<2)return;let a=Vm.calcMatMulShape([e[s-2],e[s-1]],[r[n-2],r[n-1]]);if(a===void 0)return;[i[o-2],i[o-1]]=a}for(let a=t?3:1;a<=o;a++){let l=s-a<0?1:e[s-a],c=n-a<0?1:r[n-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)i[o-a]=Math.max(l,c);else{if(p>1)return;i[o-a]=0}}return i}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let n=1;n<=t;n++)if(e[t-n]!==1&&e[t-n]!==r[s-n])return!1;return!0}},Me=class Gl{static size(r){return Gl.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let n=new Array(s),o=s-1;for(;o>=0;){if(r[o]%t===0){n[o]=r[o]/t;break}if(t%r[o]!==0)throw new Error("cannot convert shape");n[o]=1,t/=r[o],o--}for(o--;o>=0;o--)n[o]=r[o];return n}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return Gl.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return Gl.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let n=1;for(let o=t;o<s;o++){if(r[o]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=Number(r[o])}return n}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let n=t-3;n>=0;--n)s[n]=s[n+1]*r[n+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((n,o)=>n+t[o]+t[o+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,n)=>s===t[n])}},Xl=class Yi{static adjustPoolAttributes(r,t,s,n,o,i){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length;a++)if(a<o.length){if(o[a]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let a=0;a<s.length*2;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=s[a]||i[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,n,o,i,a){if(a){if(o.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Yi.adjustPadAndReturnShape(r[l+(i?1:2)],t[l],s[l],n[l],o,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,n,o,i,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Yi.computeShapeHelper(r,t,l,s,n,o,i,a),l}static computeConvOutputShape(r,t,s,n,o,i,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Yi.computeShapeHelper(!1,r,l,s,n,o,i,a),l}static computeShapeHelper(r,t,s,n,o,i,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(Yi.adjustPadAndReturnShape(t[c+2],n[c],o[c],i[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,n,o,i,a,l){let c=s*(n-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return o[i]=0,o[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+n-r;return o[i]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),o[a]=p-o[i],Math.floor((r+p-n)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+o[i]+o[a]-c)/t+1)}},Lw=class{static getShapeOfGemmResult(e,r,t,s,n){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let o,i,a;r?(o=e[1],i=e[0]):(o=e[0],i=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(o<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(n&&!Mo.isValidBroadcast(n,[o,a]))throw new Error("gemm: invalid bias shape for broadcast");return[o,a,i]}},zw=-34028234663852886e22,Bw=34028234663852886e22}),bo,Ol,ur,Er,tt,Gt,Lc,yo,Zs,et,Wi,Se,Ze,Rw,lu,Um,Nw,wt=je(()=>{ut(),gt(),bo=64,Ol=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},ur=(e,r=1)=>{let t=Ol(e,r);return typeof t=="string"?t:t[0]},Er=(e,r=1)=>{let t=Ol(e,r);return typeof t=="string"?t:t[1]},tt=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:Me.computeStrides(t)})}),r},Gt=e=>e%4===0?4:e%2===0?2:1,Lc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,yo=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,Zs=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,et=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Wi=(e,r,t,s,n)=>{let o=typeof t=="number",i=o?t:t.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,c=Ol(r,n),p=typeof c=="string"?c:c[1],u=typeof c=="string"?c:c[0],h={indices:l,value:p,storage:u,tensor:r},w=V=>typeof V=="string"?V:`${V}u`,_={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},C=o?"uniforms.":"",F=`${C}${e}_shape`,T=`${C}${e}_strides`,g="";for(let V=0;V<i-1;V++)g+=`
    let dim${V} = current / ${et(T,V,i)};
    let rest${V} = current % ${et(T,V,i)};
    indices[${V}] = dim${V};
    current = rest${V};
    `;g+=`indices[${i-1}] = current;`;let $=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${g}
    return indices;
  }`,P=V=>(_.offsetToIndices=!0,i<2?V:`o2i_${e}(${V})`),y=[];if(i>=2)for(let V=i-1;V>=0;V--)y.push(`${et(T,V,i)} * (indices[${V}])`);let M=i<2?"":`
  fn i2o_${e}(indices: ${h.indices}) -> u32 {
    return ${y.join("+")};
  }`,E=V=>(_.indicesToOffset=!0,i<2?V:`i2o_${e}(${V})`),A=(...V)=>i===0?"0u":`${h.indices}(${V.map(w).join(",")})`,B=(V,L)=>i<2?`${V}`:`${et(V,L,i)}`,N=(V,L,O)=>i<2?`${V}=${O};`:`${et(V,L,i)}=${O};`,Q={},H=(V,L)=>{_.broadcastedIndicesToOffset=!0;let O=`${L.name}broadcastedIndicesTo${e}Offset`;if(O in Q)return`${O}(${V})`;let J=[];for(let ce=i-1;ce>=0;ce--){let be=L.indicesGet("outputIndices",ce+L.rank-i);J.push(`${B(T,ce)} * (${be} % ${B(F,ce)})`)}return Q[O]=`fn ${O}(outputIndices: ${L.type.indices}) -> u32 {
             return ${J.length>0?J.join("+"):"0u"};
           }`,`${O}(${V})`},z=(V,L)=>(()=>{if(h.storage===h.value)return`${e}[${V}]=${L};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${e}[${V}]=vec2<u32>(u32(${L}), select(0u, 0xFFFFFFFFu, ${L} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${e}[${V}]=vec2<u32>(u32(${L}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${e}[${V}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${L}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Z=V=>(()=>{if(h.storage===h.value)return`${e}[${V}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${e}[${V}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${e}[${V}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${V}] & 0xFFu), bool(${e}[${V}] & 0xFF00u), bool(${e}[${V}] & 0xFF0000u), bool(${e}[${V}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),q=i<2?"":`
  fn get_${e}ByIndices(indices: ${h.indices}) -> ${p} {
    return ${Z(`i2o_${e}(indices)`)};
  }`,X=i<2?"":(()=>{let V=a.map(O=>`d${O}: u32`).join(", "),L=a.map(O=>`d${O}`).join(", ");return`
  fn get_${e}(${V}) -> ${p} {
    return get_${e}ByIndices(${A(L)});
  }`})(),se=(...V)=>{if(V.length!==i)throw new Error(`indices length must be ${i}`);let L=V.map(w).join(",");return i===0?Z("0u"):i===1?Z(L[0]):(_.get=!0,_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}(${L})`)},ne=V=>i<2?Z(V):(_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}ByIndices(${V})`),ae=i<2?"":`
  fn set_${e}ByIndices(indices: ${h.indices}, value: ${p}) {
    ${z(`i2o_${e}(indices)`,"value")}
  }`,pe=i<2?"":(()=>{let V=a.map(O=>`d${O}: u32`).join(", "),L=a.map(O=>`d${O}`).join(", ");return`
  fn set_${e}(${V}, value: ${p}) {
    set_${e}ByIndices(${A(L)}, value);
  }`})();return{impl:()=>{let V=[],L=!1;return _.offsetToIndices&&(V.push($),L=!0),_.indicesToOffset&&(V.push(M),L=!0),_.broadcastedIndicesToOffset&&(Object.values(Q).forEach(O=>V.push(O)),L=!0),_.set&&(V.push(pe),L=!0),_.setByIndices&&(V.push(ae),L=!0),_.get&&(V.push(X),L=!0),_.getByIndices&&(V.push(q),L=!0),!o&&L&&V.unshift(`const ${F} = ${h.indices}(${t.join(",")});`,`const ${T} = ${h.indices}(${Me.computeStrides(t).join(",")});`),V.join(`
`)},type:h,offsetToIndices:P,indicesToOffset:E,broadcastedIndicesToOffset:H,indices:A,indicesGet:B,indicesSet:N,set:(...V)=>{if(V.length!==i+1)throw new Error(`indices length must be ${i}`);let L=V[i];if(typeof L!="string")throw new Error("value must be string");let O=V.slice(0,i).map(w).join(",");return i===0?z("0u",L):i===1?z(O[0],L):(_.set=!0,_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}(${O}, ${L})`)},setByOffset:z,setByIndices:(V,L)=>i<2?z(V,L):(_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}ByIndices(${V}, ${L});`),get:se,getByOffset:Z,getByIndices:ne,usage:s,name:e,strides:T,shape:F,rank:i}},Se=(e,r,t,s=1)=>Wi(e,r,t,"input",s),Ze=(e,r,t,s=1)=>Wi(e,r,t,"output",s),Rw=(e,r,t)=>Wi(e,r,t,"atomicOutput",1),lu=(e,r,t,s=1)=>Wi(e,r,t,"internal",s),Um=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=bo){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,o=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${o}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let n=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${n}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},Nw=(e,r)=>new Um(e,r)}),Wm,Xd,Gm,Km,Hm,qm,jr,jw,Vw,en=je(()=>{ut(),gt(),Jt(),wt(),Wm=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},Xd=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),Gm=(e,r)=>Me.sortBasedOnPerm(e,Xd(e.length,r)),Km=(e,r,t,s)=>{let n=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let o=0;o<r;++o)n+=`a[${e[o]}]=i[${o}];`;return n+="return a;}"},Hm=(e,r)=>{let t=[],s=[];for(let n=0;n<e.length;++n)e[n]!==1&&t.push(e[n]),e[r[n]]!==1&&s.push(r[n]);return{newShape:t,newPerm:s}},qm=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},jr=(e,r)=>{let t=e.dataType,s=e.dims.length,n=Xd(s,r),o=Gm(e.dims,n),i=e.dims,a=o,l=s<2||qm(n,e.dims),c;if(l)return c=_=>{let C=Se("input",t,i,4),F=Ze("output",t,a,4);return`
  ${_.registerUniform("output_size","u32").declareVariables(C,F)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let _=Me.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64/4)},programUniforms:[{type:12,data:Math.ceil(_/4)}]}},getShaderSource:c};let{newShape:p,newPerm:u}=Hm(e.dims,n),h=Me.areEqual(u,[2,3,1]),w=Me.areEqual(u,[3,1,2]);if(p.length===2||h||w){i=h?[p[0],p[1]*p[2]]:w?[p[0]*p[1],p[2]]:p,a=[i[1],i[0]];let _=16;return c=C=>{let F=Se("a",t,i.length),T=Ze("output",t,a.length);return`
  ${C.registerUniform("output_size","u32").declareVariables(F,T)}
  var<workgroup> tile : array<array<${T.type.value}, ${_+1}>, ${_}>;
  ${C.mainStart([_,_,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${_} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${_}u + local_id.x;
    let input_row = workgroup_id_x * ${_}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${F.getByIndices(`${F.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${_}u + local_id.x;
    let output_row = workgroup_id_y * ${_}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${T.setByIndices(`${T.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let C=Me.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/_),y:Math.ceil(a[0]/_)},programUniforms:[{type:12,data:C},...tt(i,a)]}},getShaderSource:c}}return c=_=>{let C=Se("a",t,i.length),F=Ze("output",t,a.length);return`
  ${_.registerUniform("output_size","u32").declareVariables(C,F)}

  ${Km(n,s,C,F)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${F.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${F.setByOffset("global_idx",C.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let _=Me.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...tt(i,a)]}},getShaderSource:c}},jw=(e,r)=>{Wm(e.inputs,r.perm),e.compute(jr(e.inputs[0],r.perm))},Vw=e=>Ft({perm:e.perm})}),Qm,Xm,Jm,Ym,Zm,ef,tf,rf,sf,nf,es,Uw,Ww,Gw,Kw,Hw,qw,Qw,Xw,Jw,Yw,Pv=je(()=>{ut(),gt(),wt(),du(),en(),Qm={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Xm={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Jm={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Ym={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Zm=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},ef=(e,r)=>{let t=[],s=e.length;for(let o=0;o<s;o++)r.indexOf(o)===-1&&t.push(e[o]);let n=r.map(o=>e[o]);return[t,n]},tf=(e,r)=>{let t=e.length+r.length,s=[],n=0;for(let o=0;o<t;o++)r.indexOf(o)===-1?s.push(e[n++]):s.push(1);return s},rf=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},sf=(e,r)=>{let t=[];if(!rf(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},nf=(e,r,t,s,n,o,i)=>{let a=t[0].dims,l=Me.size(o),c=Me.size(i),p=Se("_A",t[0].dataType,a),u=Ze("output",n,o),h=64;l===1&&(h=256);let w=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `,_=C=>`
        ${C.registerUniform("reduceSize","u32").declareVariables(p,u)}
        ${w}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${C.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Jm[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${Qm[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Xm[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${u.setByOffset("outputIndex",`${s==="mean"?`${u.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${u.type.storage}(${Ym[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},es=(e,r,t,s)=>{let n=e.inputs.length===1?t:zc(e.inputs,t),o=n.axes;o.length===0&&!n.noopWithEmptyAxes&&(o=e.inputs[0].dims.map((w,_)=>_));let i=Me.normalizeAxes(o,e.inputs[0].dims.length),a=i,l=e.inputs[0],c=sf(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(jr(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=Zm(a.length,l.dims.length));let[p,u]=ef(l.dims,a),h=p;n.keepDims&&(h=tf(p,i)),e.compute(nf(r,n.cacheKey,[l],s,e.inputs[0].dataType,h,u),{inputs:[l]})},Uw=(e,r)=>{es(e,"ReduceMeanShared",r,"mean")},Ww=(e,r)=>{es(e,"ReduceL1Shared",r,"l1")},Gw=(e,r)=>{es(e,"ReduceL2Shared",r,"l2")},Kw=(e,r)=>{es(e,"ReduceLogSumExpShared",r,"logSumExp")},Hw=(e,r)=>{es(e,"ReduceMaxShared",r,"max")},qw=(e,r)=>{es(e,"ReduceMinShared",r,"min")},Qw=(e,r)=>{es(e,"ReduceProdShared",r,"prod")},Xw=(e,r)=>{es(e,"ReduceSumShared",r,"sum")},Jw=(e,r)=>{es(e,"ReduceSumSquareShared",r,"sumSquare")},Yw=(e,r)=>{es(e,"ReduceLogSumShared",r,"logSum")}}),ts,of,Jl,zc,rs,af,lf,df,cf,uf,pf,hf,mf,ff,_f,ss,Zw,ey,ty,ry,sy,ny,oy,iy,ay,ly,du=je(()=>{ut(),gt(),Jt(),wt(),Pv(),ts=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},of=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Jl=(e,r,t,s,n,o,i=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,u=Me.normalizeAxes(n,p),h=!a&&u.length===0;c.forEach((C,F)=>{h||u.indexOf(F)>=0?i&&l.push(1):l.push(C)});let w=l.length,_=Me.size(l);return{name:e,shaderCache:r,getShaderSource:C=>{let F=[],T=Se("_A",t[0].dataType,p),g=Ze("output",o,w),$=s(T,g,u),P=$[2];for(let y=0,M=0;y<p;y++)h||u.indexOf(y)>=0?(i&&M++,P=`for(var j${y}: u32 = 0; j${y} < ${c[y]}; j${y}++) {
                  ${$[2].includes("last_index")?`let last_index = j${y};`:""}
                  ${T.indicesSet("input_indices",y,`j${y}`)}
                  ${P}
                }`):(F.push(`${T.indicesSet("input_indices",y,g.indicesGet("output_indices",M))};`),M++);return`

        ${C.registerUniform("output_size","u32").declareVariables(T,g)}

        ${C.mainStart()}
          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${T.type.indices};
          let output_indices = ${g.offsetToIndices("global_idx")};

          ${F.join(`
`)}
          ${$[0]}       // init ops for reduce max/min
          ${$[1]}
          ${P}
          ${$[3]}
          ${$.length===4?g.setByOffset("global_idx","value"):$.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:o}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...tt(c,l)]})}},zc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Ft({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},rs=(e,r,t,s)=>{let n=e.inputs,o=n.length===1?t:zc(n,t);e.compute(Jl(r,{hint:o.cacheKey,inputDependencies:["rank"]},[n[0]],o.noopWithEmptyAxes&&o.axes.length===0?of:s,o.axes,n[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},af=(e,r)=>{ts(e.inputs),rs(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},lf=(e,r)=>{ts(e.inputs),rs(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},df=(e,r)=>{ts(e.inputs),rs(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},cf=(e,r)=>{ts(e.inputs),rs(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},uf=(e,r)=>{ts(e.inputs),rs(e,"ReduceMax",r,(t,s,n)=>{let o=[];for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&o.push(t.indicesSet("input_indices",i,0));return[`${o.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},pf=(e,r)=>{ts(e.inputs),rs(e,"ReduceMean",r,(t,s,n)=>{let o=1;for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&(o*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${o});`]})},hf=(e,r)=>{ts(e.inputs),rs(e,"ReduceMin",r,(t,s,n)=>{let o=[];for(let i=0;i<t.rank;i++)(n.indexOf(i)>=0||n.length===0)&&o.push(`input_indices[${i}] = 0;`);return[`${o.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},mf=(e,r)=>{ts(e.inputs),rs(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},ff=(e,r)=>{ts(e.inputs),rs(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},_f=(e,r)=>{ts(e.inputs),rs(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},ss=(e,r,t)=>{if(r.length===0)return t;let s=1,n=1;for(let o=0;o<r.length;o++)r.indexOf(o)===-1?s*=e[o]:n*=e[o];return n<32&&s>1024},Zw=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?pf(e,r):Uw(e,r)},ey=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?lf(e,r):Ww(e,r)},ty=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?df(e,r):Gw(e,r)},ry=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?cf(e,r):Kw(e,r)},sy=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?uf(e,r):Hw(e,r)},ny=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?hf(e,r):qw(e,r)},oy=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?mf(e,r):Qw(e,r)},iy=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ff(e,r):Xw(e,r)},ay=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_f(e,r):Jw(e,r)},ly=(e,r)=>{ss(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?af(e,r):Yw(e,r)}}),Jd,dy,cy,Bc,Cv=je(()=>{ut(),Jt(),du(),Jd=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},dy=(e,r)=>{Jd(e.inputs);let t=(s,n,o)=>{let i=[];for(let a=0;a<s.rank;a++)(o.indexOf(a)>=0||o.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Jl("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},cy=(e,r)=>{Jd(e.inputs);let t=(s,n,o)=>{let i=[];for(let a=0;a<s.rank;a++)(o.indexOf(a)>=0||o.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Jl("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Bc=e=>Ft(e)}),gf,Dl,wf,yf,Mf,sa,bf,uy,cu=je(()=>{ut(),gt(),au(),wt(),gf=(e,r)=>{let t=e[0],s=e[1],n=e[2],o=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let u=n.dims[0]/3,h=u,w=h;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let $ of r.qkvHiddenSizes)if($%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");u=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],w=r.qkvHiddenSizes[2]}let _=c;if(u!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==u+h+w)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let C=0;if(i){if(h!==w)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==h/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(C=i.dims[3])}let F=_+C,T=-1,g=0;if(o)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==F)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:C,kvSequenceLength:_,totalSequenceLength:F,maxSequenceLength:T,inputHiddenSize:p,hiddenSize:u,vHiddenSize:w,headSize:Math.floor(u/r.numHeads),vHeadSize:Math.floor(w/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Dl=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,wf=(e,r,t,s,n,o,i,a)=>{let l=Gt(i?1:o),c=64,p=o/l;p<c&&(c=32);let u=Math.ceil(o/l/c),h=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:p},{type:12,data:u}],w=ur(e.dataType,l),_=Er(1,l),C=["type"];i&&C.push("type"),a&&C.push("type");let F=T=>{let g=Ze("x",e.dataType,e.dims,l),$=[g],P=i?Se("seq_lens",i.dataType,i.dims):void 0;P&&$.push(P);let y=a?Se("total_sequence_length_input",a.dataType,a.dims):void 0;y&&$.push(y);let M=Er(e.dataType),E=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${T.registerUniforms(E).declareVariables(...$)}
  ${T.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Dl(P,y,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${_}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${_}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${_}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${_}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${g.type.value}(${M}(1.0) / ${M}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${_}(x[offset + i]);
        x[offset + i] = ${g.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${g.type.value}(${M}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${w};${l}`,inputDependencies:C},getShaderSource:F,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:r*t},programUniforms:h})}},yf=(e,r,t,s,n,o,i,a,l)=>{let c=i+o.kvSequenceLength,p=[o.batchSize,o.numHeads,o.sequenceLength,c],u=e>1&&s,h=o.kvNumHeads?o.kvNumHeads:o.numHeads,w=u?[o.batchSize,h,c,o.headSize]:void 0,_=o.nReps?o.nReps:1,C=o.scale===0?1/Math.sqrt(o.headSize):o.scale,F=Gt(o.headSize),T=o.headSize/F,g=12,$={x:Math.ceil(c/g),y:Math.ceil(o.sequenceLength/g),z:o.batchSize*o.numHeads},P=[{type:12,data:o.sequenceLength},{type:12,data:T},{type:12,data:c},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:1,data:C},{type:12,data:i},{type:12,data:o.kvSequenceLength},{type:12,data:_}],y=u&&s&&Me.size(s.dims)>0,M=["type","type"];y&&M.push("type"),n&&M.push("type"),a&&M.push("type"),l&&M.push("type");let E=[{dims:p,dataType:r.dataType,gpuDataType:0}];u&&E.push({dims:w,dataType:r.dataType,gpuDataType:0});let A=B=>{let N=Se("q",r.dataType,r.dims,F),Q=Se("key",t.dataType,t.dims,F),H=[N,Q];if(y){let ae=Se("past_key",s.dataType,s.dims,F);H.push(ae)}n&&H.push(Se("attention_bias",n.dataType,n.dims));let z=a?Se("seq_lens",a.dataType,a.dims):void 0;z&&H.push(z);let Z=l?Se("total_sequence_length_input",l.dataType,l.dims):void 0;Z&&H.push(Z);let q=Ze("output",r.dataType,p),X=[q];u&&X.push(Ze("present_key",r.dataType,w,F));let se=Er(1,F),ne=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${N.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${N.type.storage}, ${g*g}>;
  ${B.registerUniforms(ne).declareVariables(...H,...X)}
  ${B.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${_===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${_===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Dl(z,Z,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${y&&u?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${u?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${se}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${y&&u?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${u?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${se}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(F){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${F}`)}})()};
        output[outputIdx] = ${q.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${F};${n!==void 0};${s!==void 0};${e}`,inputDependencies:M},getRunData:()=>({outputs:E,dispatchGroup:$,programUniforms:P}),getShaderSource:A}},Mf=(e,r,t,s,n,o,i=void 0,a=void 0)=>{let l=o+n.kvSequenceLength,c=n.nReps?n.nReps:1,p=n.vHiddenSize*c,u=e>1&&s,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,w=u?[n.batchSize,h,l,n.headSize]:void 0,_=[n.batchSize,n.sequenceLength,p],C=12,F={x:Math.ceil(n.vHeadSize/C),y:Math.ceil(n.sequenceLength/C),z:n.batchSize*n.numHeads},T=[{type:12,data:n.sequenceLength},{type:12,data:l},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:p},{type:12,data:o},{type:12,data:n.kvSequenceLength},{type:12,data:c}],g=u&&s&&Me.size(s.dims)>0,$=["type","type"];g&&$.push("type"),i&&$.push("type"),a&&$.push("type");let P=[{dims:_,dataType:r.dataType,gpuDataType:0}];u&&P.push({dims:w,dataType:r.dataType,gpuDataType:0});let y=M=>{let E=Se("probs",r.dataType,r.dims),A=Se("v",t.dataType,t.dims),B=[E,A];g&&B.push(Se("past_value",s.dataType,s.dims));let N=i?Se("seq_lens",i.dataType,i.dims):void 0;i&&B.push(N);let Q=a?Se("total_sequence_length_input",a.dataType,a.dims):void 0;a&&B.push(Q);let H=[Ze("output",r.dataType,_)];u&&H.push(Ze("present_value",r.dataType,w));let z=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${C}u;
  var<workgroup> tileQ: array<${E.type.value}, ${C*C}>;
  var<workgroup> tileV: array<${E.type.value}, ${C*C}>;
  ${M.registerUniforms(z).declareVariables(...B,...H)}
  ${M.mainStart([C,C,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Dl(N,Q,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${g&&u?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${u?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${E.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${g&&u?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${u?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:$},getRunData:()=>({outputs:P,dispatchGroup:F,programUniforms:T}),getShaderSource:y}},sa=(e,r,t,s,n,o,i,a,l,c,p=void 0,u=void 0)=>{let h=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),w=h>1?c.pastSequenceLength:0,_=w+c.kvSequenceLength,C=l&&Me.size(l.dims)>0?l:void 0,F=[r,t];h>1&&i&&Me.size(i.dims)>0&&F.push(i),C&&F.push(C),p&&F.push(p),u&&F.push(u);let T=e.compute(yf(h,r,t,i,C,c,w,p,u),{inputs:F,outputs:h>1?[-1,1]:[-1]})[0];e.compute(wf(T,c.batchSize,c.numHeads,w,c.sequenceLength,_,p,u),{inputs:p&&u?[T,p,u]:[T],outputs:[]});let g=[T,s];h>1&&a&&Me.size(a.dims)>0&&g.push(a),p&&g.push(p),u&&g.push(u),e.compute(Mf(h,T,s,a,c,w,p,u),{inputs:g,outputs:h>1?[0,2]:[0]})},bf=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,n=r.inputHiddenSize,o=r.headSize,i=12,a={x:Math.ceil(r.headSize/i),y:Math.ceil(r.sequenceLength/i),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:n},{type:12,data:o},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=u=>{let h=Ze("output_q",l[0].dataType,t),w=Ze("output_k",l[0].dataType,t),_=Ze("output_v",l[0].dataType,t),C=Se("input",l[0].dataType,l[0].dims),F=Se("weight",l[1].dataType,l[1].dims),T=Se("bias",l[2].dataType,l[2].dims),g=C.type.storage,$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${g}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${g}, ${i*i}>;
  var<workgroup> tileWeightK: array<${g}, ${i*i}>;
  var<workgroup> tileWeightV: array<${g}, ${i*i}>;
  ${u.registerUniforms($).declareVariables(C,F,T,h,w,_)}
  ${u.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${g}(0);
    var valueK = ${g}(0);
    var valueV = ${g}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},uy=(e,r)=>{let t=gf(e.inputs,r),[s,n,o]=bf(e,t);return sa(e,s,n,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),vf,Tf,xf,py,Sv=je(()=>{ds(),ut(),gt(),Jt(),wt(),vf=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,n,o)=>{let i=n.length;if(i!==s.length)throw new Error(`${o}: num dimensions != ${i}`);n.forEach((a,l)=>{if(a!==s[l])throw new Error(`${o}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Tf=(e,r)=>{let{epsilon:t,spatial:s,format:n}=r,o=e[0].dims,i=s?Gt(o[o.length-1]):1,a=n==="NHWC"&&o.length>1?i:1,l=Me.size(o)/i,c=s,p=c?o.length:o,u=Se("x",e[0].dataType,e[0].dims,i),h=Se("scale",e[1].dataType,e[1].dims,a),w=Se("bias",e[2].dataType,e[2].dims,a),_=Se("inputMean",e[3].dataType,e[3].dims,a),C=Se("inputVar",e[4].dataType,e[4].dims,a),F=Ze("y",e[0].dataType,p,i),T=()=>{let $="";if(s)$=`let cOffset = ${o.length===1?"0u":n==="NHWC"?`outputIndices[${o.length-1}] / ${i}`:"outputIndices[1]"};`;else if(n==="NCHW")$=`
            ${F.indicesSet("outputIndices","0","0")}
            let cOffset = ${F.indicesToOffset("outputIndices")};`;else{$=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${o.length-1}];`;for(let P=1;P<h.rank;P++)$+=`cIndices[${P}] = outputIndices[${P}];`;$+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return $},g=$=>`
  const epsilon = ${t};
  ${$.registerUniform("outputSize","u32").declareVariables(u,h,w,_,C,F)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${F.offsetToIndices(`global_idx * ${i}`)};
    ${T()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${w.getByOffset("cOffset")};
    let inputMean = ${_.getByOffset("cOffset")};
    let inputVar = ${C.getByOffset("cOffset")};
    let x = ${u.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${F.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${i}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:g,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...tt(o)]:[{type:12,data:l}]})}},xf=e=>Ft(e),py=(e,r)=>{let{inputs:t,outputCount:s}=e,n=xf({...r,outputCount:s});if(jt.webgpu.validateInputContent&&vf(t,n),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Tf(t,n))}}),Ef,Pf,hy,$v=je(()=>{gt(),wt(),Ef=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Pf=e=>{let r=e[0].dims,t=e[0].dims[2],s=Me.size(r)/4,n=e[0].dataType,o=Se("input",n,r,4),i=Se("bias",n,[t],4),a=Se("residual",n,r,4),l=Ze("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(o,i,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${o.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},hy=e=>{Ef(e.inputs),e.compute(Pf(e.inputs))}}),Cf,St,my,fy,_y,gy,wy,yy,My,by,vy,Sf,Ty,xy,Ey,Py,Zi,Cy,Kl,Sy,$y,ky,Ay,Iy,Fy,Oy,Dy,Ly,zy,By,Ry,Ny,jy,Vy,Uy,Yd,Wy,Rc,Nc,Gy,Ky,Hy,$f,kf,qy,uu=je(()=>{ut(),gt(),Jt(),wt(),Cf=(e,r,t,s,n,o,i)=>{let a=Math.ceil(r/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let c=Se("inputData",t,[a],4),p=Ze("outputData",s,[a],4),u=[{name:"vec_size",type:"u32"}];return i&&u.push(...i),`
      ${e.registerUniforms(u).declareVariables(c,p)}

  ${o??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},St=(e,r,t,s,n,o=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(Me.size(e.dims)/4)}];return i&&l.push(...i),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:c=>Cf(c,Me.size(e.dims),e.dataType,o,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(Me.size(c[0].dims)/64/4)},programUniforms:l})}},my=e=>{e.compute(St(e.inputs[0],"Abs","abs"))},fy=e=>{e.compute(St(e.inputs[0],"Acos","acos"))},_y=e=>{e.compute(St(e.inputs[0],"Acosh","acosh"))},gy=e=>{e.compute(St(e.inputs[0],"Asin","asin"))},wy=e=>{e.compute(St(e.inputs[0],"Asinh","asinh"))},yy=e=>{e.compute(St(e.inputs[0],"Atan","atan"))},My=e=>{e.compute(St(e.inputs[0],"Atanh","atanh"))},by=e=>Ft(e),vy=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(St(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Sf=e=>{let r,t,s=e.length>=2&&e[1].data!==0,n=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=n?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=n?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Ft({min:r,max:t})},Ty=(e,r)=>{let t=r||Sf(e.inputs),s=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"Clip",n=>`clamp(${n}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},xy=e=>{e.compute(St(e.inputs[0],"Ceil","ceil"))},Ey=e=>{e.compute(St(e.inputs[0],"Cos","cos"))},Py=e=>{e.compute(St(e.inputs[0],"Cosh","cosh"))},Zi=e=>Ft(e),Cy=(e,r)=>{let t=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},Kl=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Sy=e=>{let r=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,Kl(r)))},$y=e=>{e.compute(St(e.inputs[0],"Exp","exp"))},ky=e=>{e.compute(St(e.inputs[0],"Floor","floor"))},Ay=e=>{let r=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,Kl(r)))},Iy=(e,r)=>{let t=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Fy=e=>{e.compute(St(e.inputs[0],"Not",r=>`!${r}`))},Oy=e=>{e.compute(St(e.inputs[0],"Neg",r=>`-${r}`))},Dy=e=>{e.compute(St(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},Ly=e=>{let r=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},zy=e=>{e.compute(St(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},By=e=>Ft(e),Ry=(e,r)=>{let t=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Ny=e=>{e.compute(St(e.inputs[0],"Sin","sin"))},jy=e=>{e.compute(St(e.inputs[0],"Sinh","sinh"))},Vy=e=>{e.compute(St(e.inputs[0],"Sqrt","sqrt"))},Uy=e=>{e.compute(St(e.inputs[0],"Tan","tan"))},Yd=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Wy=e=>{e.compute(St(e.inputs[0],"Tanh",Yd))},Rc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Yd("v")};
}
`,Nc=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Gy=e=>{let r=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"FastGelu",Nc,Rc(r),void 0,e.inputs[0].dataType))},Ky=(e,r)=>{let t=Er(e.inputs[0].dataType);return e.compute(St(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Hy=e=>{e.compute(St(e.inputs[0],"Log","log"))},$f=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,kf=e=>`quick_gelu_impl(${e})`,qy=(e,r)=>{let t=Er(e.inputs[0].dataType);e.compute(St(e.inputs[0],"QuickGelu",kf,$f(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),Af,If,Qy,kv=je(()=>{gt(),wt(),uu(),Af=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},If=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Se("input",e[0].dataType,e[0].dims,4),s=Se("bias",e[0].dataType,[e[0].dims[2]],4),n=Ze("output",e[0].dataType,r,4),o=Me.size(r)/4,i=ur(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,n)}

  ${Kl(i)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Qy=e=>{Af(e.inputs),e.compute(If(e.inputs))}}),Ff,Of,ns,Xy,Jy,Yy,Zy,eM,tM,rM,sM,nM,oM,Av=je(()=>{ut(),gt(),wt(),Ff=(e,r,t,s,n,o,i,a,l,c,p,u)=>{let h,w;typeof a=="string"?h=w=(g,$)=>`${a}((${g}),(${$}))`:typeof a=="function"?h=w=a:(h=a.scalar,w=a.vector);let _=Ze("outputData",p,s.length,4),C=Se("aData",l,r.length,4),F=Se("bData",c,t.length,4),T;if(n)if(o){let g=Me.size(r)===1,$=Me.size(t)===1,P=r.length>0&&r[r.length-1]%4===0,y=t.length>0&&t[t.length-1]%4===0;g||$?T=_.setByOffset("global_idx",w(g?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"),$?`${F.type.value}(${F.getByOffset("0")}.x)`:F.getByOffset("global_idx"))):T=`
            let outputIndices = ${_.offsetToIndices("global_idx * 4u")};
            let offsetA = ${C.broadcastedIndicesToOffset("outputIndices",_)};
            let offsetB = ${F.broadcastedIndicesToOffset("outputIndices",_)};
            ${_.setByOffset("global_idx",w(i||P?C.getByOffset("offsetA / 4u"):`${C.type.value}(${C.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||y?F.getByOffset("offsetB / 4u"):`${F.type.value}(${F.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else T=_.setByOffset("global_idx",w(C.getByOffset("global_idx"),F.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let g=($,P,y="")=>{let M=`aData[indexA${P}][componentA${P}]`,E=`bData[indexB${P}][componentB${P}]`;return`
            let outputIndices${P} = ${_.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offsetA${P} = ${C.broadcastedIndicesToOffset(`outputIndices${P}`,_)};
            let offsetB${P} = ${F.broadcastedIndicesToOffset(`outputIndices${P}`,_)};
            let indexA${P} = offsetA${P} / 4u;
            let indexB${P} = offsetB${P} / 4u;
            let componentA${P} = offsetA${P} % 4u;
            let componentB${P} = offsetB${P} % 4u;
            ${$}[${P}] = ${y}(${h(M,E)});
          `};p===9?T=`
            var data = vec4<u32>(0);
            ${g("data",0,"u32")}
            ${g("data",1,"u32")}
            ${g("data",2,"u32")}
            ${g("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:T=`
            ${g("outputData[global_idx]",0)}
            ${g("outputData[global_idx]",1)}
            ${g("outputData[global_idx]",2)}
            ${g("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(C,F,_)}

        ${u??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${T}
      }`},Of=(e,r,t,s,n,o,i=t.dataType)=>{let a=t.dims.map(C=>Number(C)??1),l=s.dims.map(C=>Number(C)??1),c=!Me.areEqual(a,l),p=a,u=Me.size(a),h=!1,w=!1,_=[c];if(c){let C=Mo.calcShape(a,l,!1);if(!C)throw new Error("Can't perform binary op on the given tensors");p=C.slice(),u=Me.size(p);let F=Me.size(a)===1,T=Me.size(l)===1,g=a.length>0&&a[a.length-1]%4===0,$=l.length>0&&l[l.length-1]%4===0;_.push(F),_.push(T),_.push(g),_.push($);let P=1;for(let y=1;y<p.length;y++){let M=a[a.length-y],E=l[l.length-y];if(M===E)P*=M;else break}P%4===0?(w=!0,h=!0):(F||T||g||$)&&(h=!0)}else h=!0;return _.push(h),{name:e,shaderCache:{hint:r+_.map(C=>C.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:C=>Ff(C,a,l,p,h,c,w,n,t.dataType,s.dataType,i,o),getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(Me.size(p)/4)},...tt(a,l,p)]})}},ns=(e,r,t,s,n,o)=>{e.compute(Of(r,n??"",e.inputs[0],e.inputs[1],t,s,o))},Xy=e=>{ns(e,"Add",(r,t)=>`${r}+${t}`)},Jy=e=>{ns(e,"Div",(r,t)=>`${r}/${t}`)},Yy=e=>{ns(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Zy=e=>{ns(e,"Mul",(r,t)=>`${r}*${t}`)},eM=e=>{let r=Se("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ns(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},tM=e=>{ns(e,"Sub",(r,t)=>`${r}-${t}`)},rM=e=>{ns(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},sM=e=>{ns(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},nM=e=>{ns(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},oM=e=>{ns(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),Df,Lf,zf,Bf,iM,aM,Iv=je(()=>{ut(),gt(),Jt(),wt(),Df=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],n=s.dataType,o=s.dims.length;e.forEach((i,a)=>{if(a!==t){if(i.dataType!==n)throw new Error("input tensors should be one type");if(i.dims.length!==o)throw new Error("input tensors should have the same shape");i.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},Lf=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,zf=(e,r)=>{let t=e.length,s=[];for(let n=0;n<t;++n){let o=r.setByOffset("global_idx",e[n].getByIndices("indices"));t===1?s.push(o):n===0?s.push(`if (inputIndex == ${n}u) { ${o} }`):n===t-1?s.push(`else { ${o} }`):s.push(`else if (inputIndex == ${n}) { ${o} }`)}return s.join(`
`)},Bf=(e,r,t,s)=>{let n=Me.size(t),o=new Array(e.length),i=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:n}];for(let C=0;C<e.length;++C)a+=e[C].dims[r],o[C]=a,c.push(e[C].dims.length),i[C]=Se(`input${C}`,s,c[C]),l.push("rank"),p.push({type:12,data:o[C]});for(let C=0;C<e.length;++C)p.push(...tt(e[C].dims));p.push(...tt(t));let u=Ze("output",s,t.length),h=u.indicesGet("indices",r),w=Array.from(Array(o.length).keys()).map(C=>`uniforms.sizeInConcatAxis${C}`).join(","),_=C=>`

  ${(()=>{C.registerUniform("outputSize","u32");for(let F=0;F<e.length;F++)C.registerUniform(`sizeInConcatAxis${F}`,"u32");return C.declareVariables(...i,u)})()}

  ${Lf(o.length,w)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${u.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${w});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${zf(i,u)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}),getShaderSource:_}},iM=(e,r)=>{let t=e.inputs,s=t[0].dims,n=Me.normalizeAxis(r.axis,s.length);Df(t,n);let o=s.slice();o[n]=t.reduce((a,l)=>a+(l.dims.length>n?l.dims[n]:0),0);let i=t.filter(a=>Me.size(a.dims)>0);e.compute(Bf(i,n,o,t[0].dataType),{inputs:i})},aM=e=>Ft({axis:e.axis})}),kn,An,In,pu,On=je(()=>{ut(),gt(),kn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},An=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},In=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},pu=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[zw,Bw];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}}),_r,lM,hu=je(()=>{_r=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},lM=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),dM,Fv=je(()=>{dM=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),ta,mu,fu=je(()=>{ut(),gt(),wt(),On(),ta=(e,r,t,s,n)=>{let o=s-t;return`
      ${Array.from({length:t}).map((i,a)=>`
      if (${et(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,et(n,a+o,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},mu=(e,r,t,s,n=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],c=a[a.length-1],p=i[i.length-1],u=Gt(c),h=Gt(p),w=Gt(l),_=Me.size(t)/u/w,C=e.length>2,F=s?s.slice(0,-2):t.slice(0,-2),T=[Me.size(F),l,c],g=[{type:12,data:_},{type:12,data:l},{type:12,data:c},{type:12,data:p}];An(r,g),g.push(...tt(F,i,a)),C&&g.push(...tt(e[2].dims)),g.push(...tt(T));let $=P=>{let y=lu("batch_dims",e[0].dataType,F.length),M=Se("a",e[0].dataType,i.length,h),E=Se("b",e[1].dataType,a.length,u),A=Ze("output",e[0].dataType,T.length,u),B=ur(A.type.tensor),N=kn(r,A.type.value,B),Q=[M,E],H="";if(C){let q=n?u:1;Q.push(Se("bias",e[2].dataType,e[2].dims.length,q)),H=`${n?`value += bias[col / ${q}];`:`value += ${A.type.value}(bias[row + i]);`}`}let z=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];In(r,z);let Z=()=>{let q=`var a_data: ${M.type.value};`;for(let X=0;X<h;X++)q+=`
              let b_data${X} = b[(b_offset + (k + ${X}) * uniforms.N + col) / ${u}];`;for(let X=0;X<w;X++){q+=`a_data = a[(a_offset + (row + ${X}) * uniforms.K + k) / ${h}];`;for(let se=0;se<h;se++)q+=`
            values[${X}] = fma(${E.type.value}(a_data${h===1?"":`[${se}]`}), b_data${se}, values[${X}]);
`}return q};return`
  ${P.registerUniforms(z).registerInternalVariables(y).declareVariables(...Q,A)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${u})) * ${u};
    var index1 = global_idx / (uniforms.N / ${u});
    let stride1 = uniforms.M / ${w};
    let row = (index1 % stride1) * ${w};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${y.offsetToIndices("batch")};`}

    var a_indices: ${M.type.indices};
    ${ta("a_indices",M,M.rank-2,y.rank,"batch_indices")}
    ${M.indicesSet("a_indices",M.rank-2,0)}
    ${M.indicesSet("a_indices",M.rank-1,0)}
    let a_offset = ${M.indicesToOffset("a_indices")};

    var b_indices: ${E.type.indices};
    ${ta("b_indices",E,E.rank-2,y.rank,"batch_indices")}
    ${E.indicesSet("b_indices",E.rank-2,0)}
    ${E.indicesSet("b_indices",E.rank-1,0)}
    let b_offset = ${E.indicesToOffset("b_indices")};
    var values: array<${A.type.value}, ${w}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${Z()}
    }
    for (var i = 0u; i < ${w}u; i++) {
      var value = values[i];
      ${H}
      ${N}
      let cur_indices = ${A.type.indices}(batch, row + i, col);
      let offset = ${A.indicesToOffset("cur_indices")};
      ${A.setByOffset(`offset / ${u}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${u};${h};${w};${n}`,inputDependencies:C?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:g}),getShaderSource:$}}}),Rf,Nf,jc,Zd,jf,Vc,Vf,Yl,_u=je(()=>{ut(),gt(),wt(),On(),fu(),hu(),Rf=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,Nf=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,jc=(e,r,t="f32",s,n=!1,o=32,i=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=n?l:o,u=n?o:l,h=p/r[0],w=o/r[1];if(!((n&&h===4&&e[1]===4||!n&&(h===3||h===4))&&p%r[0]===0&&o%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${t}>, ${p/h}>, ${u}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${o}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${h};
const tileInner = ${o};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${w};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Rf(n,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Nf(n,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Zd=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,jf=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Vc=(e,r,t="f32",s,n=!1,o=32,i=!1,a=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],u=n?c:o,h=n?o:c;if(!(h%r[1]===0&&u%r[0]===0&&o%r[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${u} must be divisible by workgroupSize[0]${r[0]}, tileInner ${o} must be divisible by workgroupSize[1]${r[1]}`);let w=h/r[1],_=u/r[0],C=o/r[1],F=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${r[0]}) {
          ${Zd(n,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${w};
let tileColA = i32(localId.x) * ${_};
let tileRowB = i32(localId.y) * ${C};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${_}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Zd(n,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${C}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${jf(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${u}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${o}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${o};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${F}
  }
`},Vf=(e,r,t,s,n=!1)=>{let[o,i,a,l]=s,c=ur(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${_r(e,c)} {
      var value = ${_r(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${ta("aIndices",i,i.rank-2,o.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${_r(e,c)} {
      var value = ${_r(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${ta("bIndices",a,a.rank-2,o.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${_r(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${_r(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Yl=(e,r,t,s,n=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),c=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),u=Me.size(p),h=i[i.length-2],w=i[i.length-1],_=a[a.length-1],C=w%4===0&&_%4===0,F=h<=8?[4,1,1]:[4,4,1],T=[8,8,1],g=[Math.ceil(_/T[0]/F[0]),Math.ceil(h/T[1]/F[1]),Math.ceil(u/T[2]/F[2])],$=C?4:1,P=[...l,h,w/$],y=P.length,M=[...c,w,_/$],E=M.length,A=[u,h,_/$],B=[{type:6,data:h},{type:6,data:_},{type:6,data:w}];An(r,B),B.push(...tt(p,P,M));let N=["rank","rank"],Q=e.length>2;Q&&(B.push(...tt(e[2].dims)),N.push("rank")),B.push(...tt(A));let H=z=>{let Z=p.length,q=lu("batchDims",e[0].dataType,Z,1),X=ur(e[0].dataType),se=Se("a",e[0].dataType,y,$),ne=Se("b",e[1].dataType,E,$),ae=Ze("result",e[0].dataType,A.length,$),pe=[se,ne];if(Q){let ce=n?$:1;pe.push(Se("bias",e[2].dataType,e[2].dims.length,ce))}let V=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];In(r,V);let L=ur(ae.type.tensor),O=kn(r,ae.type.value,L),J=Vf($,Q,O,[q,se,ne,ae],n);return`
  ${z.registerUniforms(V).registerInternalVariables(q).declareVariables(...pe,ae)}
  ${J}
  ${C?jc(F,T,X,q):Vc(F,T,X,q)}
                   `};return{name:"MatMul",shaderCache:{hint:`${F};${r.activation};${C};${n}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:o?o(t):t,dataType:e[0].dataType}],dispatchGroup:{x:g[0],y:g[1],z:g[2]},programUniforms:B}),getShaderSource:H}}}),Uf,cM,Ov=je(()=>{ut(),As(),wt(),On(),hu(),Fv(),_u(),Uf=(e,r,t,s,n=!1,o,i=4,a=4,l=4,c="f32")=>{let p=B=>{switch(B){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},u=B=>{switch(B){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${B} is not supported.`)}},h=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,w=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,_=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",F=e?"row":"col",T=e?"col":"row",g=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${F} / outWidth;
    let outCol = ${F} % outWidth;

    let WRow = ${T} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${T} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${T} % inChannels;
    var resData = ${_r(i,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${_} && xCol >= 0 && xCol < ${C}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(i)}
    }
    return resData;`,$=e?r&&s?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${g}
    }
    return ${_r(i,c)}(0.0);`:s&&t?`
    let col = colIn * ${i};
    ${g}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${g}
    }
    return ${_r(i,c)}(0.0);`,P=e?s&&t?u(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${u(a)}
    }
    return ${_r(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${u(a)}
    }
    return ${_r(a,c)}(0.0);`,y=_r(l,c),M=_r(e?i:a,c),E=_r(e?a:i,c),A=kn(o,y,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {
      ${e?$:P}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${E} {
      ${e?P:$}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${w}
      ${lM(n)}
      ${A}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},cM=(e,r,t,s,n,o,i,a,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],u=t[0],h=c?t[2]:t[3],w=c?t[1]:t[2],_=c?t[3]:t[1],C=c&&(p%4===0||p%3===0)&&_%4===0,F=c?_:h*w,T=c?h*w:_,g=[8,8,1],$=s<=8?[4,1,1]:[4,4,1],P=[Math.ceil(F/g[0]/$[0]),Math.ceil(T/g[1]/$[1]),Math.ceil(u/g[2]/$[2])];Ct("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${P}`);let y=C?c&&p%4!==0?3:4:1,M=g[1]*$[1],E=g[0]*$[0],A=Math.max(g[0]*y,g[1]),B=s%M===0,N=n%E===0,Q=o%A===0,H=C?[y,4,4]:[1,1,1],z=[{type:6,data:s},{type:6,data:n},{type:6,data:o},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];An(r,z),z.push(...tt(e[0].dims,e[1].dims));let Z=["rank","rank"];i&&(z.push(...tt(e[2].dims)),Z.push("rank")),z.push(...tt(t));let q=X=>{let se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];In(r,se);let ne=C?4:1,ae=ur(e[0].dataType),pe=`
      fn setOutputAtIndex(flatIndex : i32, value : ${C?`vec4<${ae}>`:ae}) {
        result[flatIndex] = ${C?`vec4<${ae}>`:ae}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${C?`vec4<${ae}>`:ae}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${C?"/ 4":""}, value);
      }`,V=Se("x",e[0].dataType,e[0].dims.length,y===3?1:y),L=Se("w",e[1].dataType,e[1].dims.length,ne),O=[V,L],J=Ze("result",e[0].dataType,t.length,ne);if(i){let ce=Se("bias",e[2].dataType,e[2].dims.length,ne);O.push(ce),pe+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${C?`vec4<${ae}>`:ae} {
          return bias[coords.${c?"w":"y"}${C?"/ 4":""}];
        }`}return`
        ${dM("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${X.registerUniforms(se).declareVariables(...O,J)}
        ${pe}
        ${Uf(c,B,N,Q,i,r,H[0],H[1],H[2],ae)}
        ${C?jc($,g,ae,void 0,!c,A):Vc($,g,ae,void 0,!c,A,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${y};${C};${B};${N};${Q};${M};${E};${A}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:P[0],y:P[1],z:P[2]},programUniforms:z}),getShaderSource:q}}}),Wf,ec,Gi,Gf,tc,Kf,uM,pM,Dv=je(()=>{ut(),As(),gt(),wt(),On(),hu(),Wf=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},ec=e=>typeof e=="number"?[e,e,e]:e,Gi=(e,r)=>r<=1?e:e+(e-1)*(r-1),Gf=(e,r,t,s=1)=>{let n=Gi(r,s);return Math.floor((e[0]*(t-1)-t+n)/2)},tc=(e,r,t,s,n)=>{n==null&&(n=Gf(e,r[0],s[0]));let o=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*n>=r[i]&&(o[i]=Math.trunc((e[i]-r[i]+2*n)/s[i]+1));return o},Kf=(e,r,t,s,n,o,i,a,l,c)=>{let p,u,h,w;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let _=tc([r,t,s,1],[a,l,c],1,[n,o,i],e);u=_[0],h=_[1],w=_[2]}else if(Array.isArray(e)){if(!e.every((C,F,T)=>C===T[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let _=tc([r,t,s,1],[a,l,c],1,[n,o,i],e[0]);u=_[0],h=_[1],w=_[2]}else if(e==="SAME_UPPER"){u=Math.ceil(r/n),h=Math.ceil(t/o),w=Math.ceil(s/i);let _=(u-1)*n+a-r,C=(h-1)*o+l-t,F=(w-1)*i+c-s,T=Math.floor(_/2),g=_-T,$=Math.floor(C/2),P=C-$,y=Math.floor(F/2),M=F-y;p={top:$,bottom:P,left:y,right:M,front:T,back:g}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:u,outHeight:h,outWidth:w}},uM=(e,r,t,s,n,o=!1,i="channelsLast")=>{let a,l,c,p,u;if(i==="channelsLast")[a,l,c,p,u]=e;else if(i==="channelsFirst")[a,u,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,,w,_,C]=r,[F,T,g]=ec(t),[$,P,y]=ec(s),M=Gi(w,$),E=Gi(_,P),A=Gi(C,y),{padInfo:B,outDepth:N,outHeight:Q,outWidth:H}=Kf(n,l,c,p,F,T,g,M,E,A),z=o?h*u:h,Z=[0,0,0,0,0];return i==="channelsFirst"?Z=[a,z,N,Q,H]:i==="channelsLast"&&(Z=[a,N,Q,H,z]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:u,outDepth:N,outHeight:Q,outWidth:H,outChannels:z,padInfo:B,strideDepth:F,strideHeight:T,strideWidth:g,filterDepth:w,filterHeight:_,filterWidth:C,effectiveFilterDepth:M,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:$,dilationHeight:P,dilationWidth:y,inShape:e,outShape:Z,filterShape:r}},pM=(e,r,t,s,n,o)=>{let i=o==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((F,T)=>T)},c=[Math.ceil(Wf(l.x.map(F=>t[F]))/a[0]),1,1];Ct("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,u=Me.size(t),h=[{type:12,data:u},{type:12,data:s},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];An(r,h),h.push(...tt(e[0].dims,e[1].dims));let w=["rank","rank"],_=e.length===3;_&&(h.push(...tt(e[2].dims)),w.push("rank")),h.push(...tt(t));let C=F=>{let T=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];In(r,T);let g=1,$=ur(e[0].dataType),P=Se("x",e[0].dataType,e[0].dims.length,p),y=Se("W",e[1].dataType,e[1].dims.length,g),M=[P,y],E=Ze("result",e[0].dataType,t.length,g),A="";if(_){let Q=Se("bias",e[2].dataType,e[2].dims.length,g);M.push(Q),A+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${$} {
          return bias[${i?et("coords",4,5):et("coords",1,5)}];
        }`}let B=_r(p,$),N=kn(r,B,$);return`
            ${A}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${P.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${y.getByIndices("aIndices")};
            }
          ${F.registerUniforms(T).declareVariables(...M,E)}
          ${F.mainStart()}
          ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${E.offsetToIndices("global_idx")};
              let batch = ${et("coords",0,P.rank)};
              let d2 = ${i?et("coords",P.rank-1,P.rank):et("coords",1,P.rank)};
              let xFRCCorner = vec3<u32>(${i?et("coords",1,P.rank):et("coords",2,P.rank)},
              ${i?et("coords",2,P.rank):et("coords",3,P.rank)},
              ${i?et("coords",3,P.rank):et("coords",4,P.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?et("uniforms.x_shape",1,P.rank):et("uniforms.x_shape",2,P.rank)};
              let xShapeZ = ${i?et("uniforms.x_shape",2,P.rank):et("uniforms.x_shape",3,P.rank)};
              let xShapeW = ${i?et("uniforms.x_shape",3,P.rank):et("uniforms.x_shape",4,P.rank)};
              let xShapeU = ${i?et("uniforms.x_shape",4,P.rank):et("uniforms.x_shape",1,P.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${_?"value = value + getBiasByOutputCoords(coords)":""};
              ${N}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${i};${p};${_}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:h}),getShaderSource:C}}}),hM,mM,Lv=je(()=>{ut(),gt(),wt(),On(),hM=(e,r,t,s)=>{let n=e.length>2,o=n?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,u=l&&p>=4?Gt(c):1,h=Me.size(t)/u,w=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];An(r,w),w.push(...tt(i,[a[0],a[1],a[2],a[3]/u]));let _=n?["rank","rank","rank"]:["rank","rank"];w.push(...tt([t[0],t[1],t[2],t[3]/u]));let C=F=>{let T=Ze("output",e[0].dataType,t.length,u),g=ur(T.type.tensor),$=kn(r,T.type.value,g),P=Se("x",e[0].dataType,i.length),y=Se("w",e[1].dataType,a.length,u),M=[P,y];n&&M.push(Se("b",e[2].dataType,e[2].dims,u));let E=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];In(r,E);let A=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${P.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${y.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${P.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${F.registerUniforms(E).declareVariables(...M,T)}

  ${F.mainStart()}
    ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${T.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${u} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${T.type.value} = ${T.type.value}(0);
    ${A}
    ${o}
    ${$}
    ${T.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${u}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:w}),getShaderSource:C}},mM=(e,r,t,s)=>{let n=e.length>2,o=Gt(t[3]),i=Gt(t[2]),a=Me.size(t)/o/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],p=[t[0],t[1],t[2],t[3]/o],u=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];An(r,u),u.push(...tt(l,c,p));let h=(i-1)*r.strides[1]+c[1],w=_=>{let C=Ze("output",e[0].dataType,p.length,o),F=ur(C.type.tensor),T=kn(r,C.type.value,F),g=Se("x",e[0].dataType,l.length,o),$=Se("w",e[1].dataType,c.length,o),P=[g,$];n&&P.push(Se("b",e[2].dataType,e[2].dims,o));let y=n?"value += b[output_channel];":"",M=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return In(r,M),`
  ${_.registerUniforms(M).declareVariables(...P,C)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${g.type.value}, ${h}>;
    var values: array<${C.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${g.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${g.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${$.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${y}
      ${T}
      ${C.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${o};${i};${h};${c[0]};${c[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:u}),getShaderSource:w}}}),Hf,Ll,qf,zl,Uc,rc,Qf,Xf,Wc,zv=je(()=>{gt(),Ov(),Dv(),_u(),Lv(),On(),fu(),en(),Hf=(e,r,t,s,n,o)=>{let i=e[0],a=e.slice(o?1:2,o?3:4),l=a.length,c=r[0],p=r.slice(2).map((h,w)=>h+(h-1)*(t[w]-1)),u=a.map((h,w)=>h+s[w]+s[w+l]).map((h,w)=>Math.floor((h-p[w]+n[w])/n[w]));return u.splice(0,0,i),u.splice(o?3:1,0,c),u},Ll=[2,3,1,0],qf=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},zl=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let o=2;o<r[1].dims.length;++o)t[o-2]===0&&(t[o-2]=r[1].dims[o]);let s=e.pads.slice();Xl.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:t,pads:s}),n},Uc=e=>{let r=pu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,o=e.group,i=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:n,group:o,kernelShape:i,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},rc=(e,r,t,s)=>{let n=t.format==="NHWC",o=Hf(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,n);if(t.group!==1){let M=[r[0]];if(n){let E=e.kernelCustomData.wT??e.compute(jr(r[1],Ll),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=E),M.push(E)}else M.push(r[1]);r.length===3&&M.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(mM(M,t,o,s),{inputs:M}):e.compute(hM(M,t,o,s),{inputs:M});return}let i=r.length===3,a=r[0].dims[n?1:2],l=r[0].dims[n?2:3],c=r[0].dims[n?3:1],p=r[1].dims[2],u=r[1].dims[3],h=o[n?1:2],w=o[n?2:3],_=o[n?3:1],C=n&&p===a&&u===l&&t.pads[0]===0&&t.pads[1]===0;if(C||p===1&&u===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let M=o[0],E,A,B,N=[];if(n){let z=e.kernelCustomData.wT??e.compute(jr(r[1],Ll),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=z),C){let Z=a*l*c;E=r[0].reshape([1,M,Z]),A=z.reshape([1,Z,_]),B=[1,M,_]}else E=r[0].reshape([M,a*l,c]),A=z.reshape([1,c,_]),B=[M,h*w,_];N.push(E),N.push(A)}else E=r[0].reshape([M,c,a*l]),A=r[1].reshape([1,_,c]),B=[M,_,h*w],N.push(A),N.push(E);i&&N.push(r[2]);let Q=B[2],H=N[0].dims[N[0].dims.length-1];Q<8&&H<8?e.compute(mu(N,t,o,B,n,s),{inputs:N}):e.compute(Yl(N,t,o,B,n,s),{inputs:N});return}let F=!0,T=e.kernelCustomData.wT??e.compute(jr(r[1],Ll),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);let g=[r[0],T];i&&g.push(r[2]);let $=n?h*w:_,P=n?_:h*w,y=p*u*c;e.compute(cM(g,t,o,$,P,y,i,F,s),{inputs:g})},Qf=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],o=[1].concat(r.strides),i=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=zl({...r,pads:n,strides:o,dilations:i,kernelShape:a},s);rc(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},Xf=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",n=zl(t,r),o=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=uM(r[0].dims,r[1].dims,t.strides,t.dilations,o,!1,s);e.compute(pM(r,n,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],s))},Wc=(e,r)=>{if(qf(e.inputs,r),e.inputs[0].dims.length===3)Qf(e,r);else if(e.inputs[0].dims.length===5)Xf(e,e.inputs,r);else{let t=zl(r,e.inputs);rc(e,e.inputs,t)}}}),fM,Bv=je(()=>{ut(),As(),gt(),wt(),fM=(e,r,t)=>{let s=e.length>2,n=r.outputShape,o=r.format==="NHWC",i=r.group,a=e[1].dims,l=a[2]/i,c=a[3],p=o?Gt(l):1,u=o&&c===1&&l>=4,h=u?Math.floor(l/4)*4:Math.floor(l/p)*p,w=l-h,_=o?Gt(c):1,C=o?c===1?p:_:1,F=Me.size(n)/_,T=[Math.ceil(F/64),1,1];Ct("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${T}`);let g=["rank","rank"],$=[r.strides[0],r.strides[1]],P=[r.kernelShape[o?1:2],r.kernelShape[o?2:3]],y=[r.dilations[0],r.dilations[1]],M=[P[0]+(r.dilations[0]<=1?0:(r.kernelShape[o?1:2]-1)*(r.dilations[0]-1)),P[1]+(r.dilations[1]<=1?0:(r.kernelShape[o?2:3]-1)*(r.dilations[1]-1))],E=[M[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),M[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],A=[{type:12,data:F},{type:12,data:$},{type:12,data:P},{type:12,data:y},{type:12,data:M},{type:6,data:E},{type:12,data:h},{type:12,data:l},{type:12,data:c},...tt(e[0].dims,e[1].dims)];s&&(A.push(...tt(e[2].dims)),g.push("rank")),A.push(...tt(n));let B=N=>{let Q=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:$.length},{name:"filter_dims",type:"u32",length:P.length},{name:"dilations",type:"u32",length:P.length},{name:"effective_filter_dims",type:"u32",length:M.length},{name:"pads",type:"i32",length:E.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],H=ur(e[0].dataType),z=o?1:2,Z=o?2:3,q=o?3:1,X=Se("W",e[1].dataType,e[1].dims.length,C),se=Se("Dy",e[0].dataType,e[0].dims.length,p),ne=[se,X];s&&ne.push(Se("bias",e[2].dataType,[n[q]].length,_));let ae=Ze("result",e[0].dataType,n.length,_),pe=()=>{let O="";if(u)p===4?O+=`
        let xValue = ${se.getByOffset("x_offset")};
        let wValue = ${X.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?O+=`
          dotProd = dotProd + dot(vec4<${H}>(${se.getByOffset("x_offset")}, ${se.getByOffset("x_offset + 1u")}), vec4<${H}>(${X.getByOffset("w_offset")}, ${X.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(O+=`
          dotProd = dotProd + dot(vec4<${H}>(${se.getByOffset("x_offset")}, ${se.getByOffset("x_offset + 1u")}, ${se.getByOffset("x_offset + 2u")}, ${se.getByOffset("x_offset + 3u")}), vec4<${H}>(${X.getByOffset("w_offset")}, ${X.getByOffset("w_offset + 1u")}, ${X.getByOffset("w_offset + 2u")}, ${X.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(O+=`
                  let xValue = ${o?se.getByOffset(`${se.indicesToOffset(`${se.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):se.get("batch","inputChannel","idyR","idyC")};
        `,p===1)O+=`
          let w_offset = ${X.indicesToOffset(`${X.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${X.getByOffset(`w_offset / ${C}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let J=0;J<p;J++)O+=`
            let wValue${J} = ${X.getByOffset(`${X.indicesToOffset(`${X.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${J}, wOutChannel)`)} / ${C}`)};
            dotProd = dotProd + xValue[${J}] * wValue${J};`;return O},V=()=>{if(w===0)return"";if(!u)throw new Error(`packInputAs4 ${u} is not true.`);let O="";if(p===1){O+="dotProd = dotProd";for(let J=0;J<w;J++)O+=`
            + ${se.getByOffset(`x_offset + ${J}`)} * ${X.getByOffset(`w_offset + ${J}`)}`;O+=";"}else if(p===2){if(w!==2)throw new Error(`Invalid inputChannelsRemainder ${w}.`);O+=`
          let xValue = ${se.getByOffset("x_offset")};
          let wValue = ${X.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return O},L=`
            let outputIndices = ${ae.offsetToIndices(`global_idx * ${_}`)};
            let batch = ${ae.indicesGet("outputIndices",0)};
            let d1 = ${ae.indicesGet("outputIndices",q)};
            let r = ${ae.indicesGet("outputIndices",z)};
            let c = ${ae.indicesGet("outputIndices",Z)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${ae.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${H}(dyRCorner) + ${H}(wR)) / ${H}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${H}(uniforms.Dy_shape[${z}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${H}(dyCCorner) + ${H}(wC)) / ${H}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${H}(uniforms.Dy_shape[${Z}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${u?`
                var x_offset = ${se.indicesToOffset(`${se.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${X.indicesToOffset(`${X.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${C};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${u?4:p}) {
                  ${pe()}
                  inputChannel = inputChannel + ${u?4:p};
                }
                ${V()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${_}]`:""};
            ${ae.setByOffset("global_idx","value")};
          `;return`
    ${N.registerUniforms(Q).declareVariables(...ne,ae)}
      ${N.mainStart()}
      ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${L}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${C}${_}${u}${w}`,inputDependencies:g},getRunData:()=>({dispatchGroup:{x:T[0],y:T[1],z:T[2]},outputs:[{dims:t?t(n):n,dataType:e[0].dataType}],programUniforms:A}),getShaderSource:B}}}),Jf,Yf,Zf,sc,_M,e_,nc,t_,gM,Rv=je(()=>{Bv(),On(),en(),Jf=(e,r,t,s,n,o)=>(e-1)*r+t+(s-1)*n+1-o,Yf=(e,r,t,s,n)=>{let o=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=o,t[n]=e-o):r==="SAME_LOWER"&&(t[s]=e-o,t[n]=o)},Zf=(e,r,t,s,n,o,i,a,l,c)=>{let p=e.length-2,u=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let h=e[0],w=r[a?3:1]*n;for(let _=0,C=e.length-p-(a?1:0);_<p;++_,++C){let F=e[C],T=u?F*i[_]:c[_],g=Jf(F,i[_],o[_],r[C],t[_],T);Yf(g,s,o,_,_+p),u&&c.push(i[_]*(F-1)+l[_]+(r[C]-1)*t[_]+1-o[_]-o[_+p])}c.splice(0,0,h),c.splice(a?3:1,0,w)},sc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((u,h)=>u*h,1)===0){t.length=0;for(let u=2;u<r[1].dims.length;++u)t.push(r[1].dims[u])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let n=e.pads.slice(),o=e.outputShape.slice(),i=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((u,h)=>u+h,0)===0){let u=r[0].dims.length-2;l=new Array(u).fill(1)}let c=e.strides.slice();if(c.reduce((u,h)=>u+h,0)===0){let u=r[0].dims.length-2;c=new Array(u).fill(1)}Zf(a,t,l,e.autoPad,e.group,n,c,s,i,o);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:n,outputPadding:i,outputShape:o,dilations:l,strides:c}),p},_M=e=>{let r=pu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,o=e.group,i=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,u=e.outputShape;return{autoPad:s,format:t,dilations:n,group:o,kernelShape:i,outputPadding:p,outputShape:u,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},e_=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let o=e[0].dims.length-2;if(r.dilations.reduce((i,a)=>i+a,0)>0&&r.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(r.strides.reduce((i,a)=>i+a,0)>0&&r.strides.length!==o)throw new Error(`strides should be ${o}D`);if(r.pads.reduce((i,a)=>i+a,0)>0&&r.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(r.outputPadding.length!==o&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${o}D`);if(r.kernelShape.reduce((i,a)=>i+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},nc=(e,r,t,s)=>{let n=e.kernelCustomData.wT??e.compute(jr(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=n);let o=[r[0],n];r.length===3&&o.push(r[2]),e.compute(fM(o,t,s),{inputs:o})},t_=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=r.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let o=r.dilations;(o.length===0||o[0]===0)&&(o=[1]);let i=r.strides;(i.length===0||i[0]===0)&&(i=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),o=[1].concat(o),n=[1].concat(n);let l=r.outputPadding;l=[0].concat(l);let c=sc({...r,pads:a,strides:i,dilations:o,kernelShape:n,outputPadding:l},s);nc(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},gM=(e,r)=>{if(e_(e.inputs,r),e.inputs[0].dims.length===3)t_(e,r);else{let t=sc(r,e.inputs);nc(e,e.inputs,t)}}}),r_,wM,yM,Nv=je(()=>{ut(),gt(),Jt(),wt(),r_=(e,r,t,s)=>{let n=Me.size(r),o=r.length,i=Se("input",e,o),a=Ze("output",e,o),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=Me.normalizeAxis(l,o),p=u=>{let h=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,w=et("uniforms.input_shape","uniforms.axis",o),_=s.reverse?h+(s.exclusive?" + 1":""):"0",C=s.reverse?w:h+(s.exclusive?"":" + 1");return`
                ${u.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}
                ${u.mainStart()}
                  ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${_};
                  let last : i32 = ${C};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:c},...tt(r,r)]}),getShaderSource:p}},wM=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,n=e.inputs[1];e.compute(r_(s,t,n,r),{inputs:[0]})},yM=e=>{let r=e.exclusive===1,t=e.reverse===1;return Ft({exclusive:r,reverse:t})}}),s_,n_,o_,MM,bM,jv=je(()=>{ut(),gt(),Jt(),wt(),s_=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},n_=(e,r,t,s)=>{let n=[];n.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let o=0;o<r;++o)n.push(t.indicesSet("a",e[o],`i[${o}]`));return n.push("return a;}"),n.join(`
`)},o_=(e,r)=>{let t,s,n,o,i,a,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,n,o]=e.dims,i=p?[t,s,n,c,c,o/c**2]:[t,s,n,o/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,n,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=p?[t,c,c,o/c**2,s,n]:[t,o/c**2,c,c,s,n],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let u=e.reshape(i),h=u.dims.length,w=e.dataType,_=Se("a",w,h),C=Ze("output",w,h),F=T=>`
  ${T.registerUniform("output_size","u32").declareVariables(_,C)}

  ${n_(a,h,_,C)}

  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${C.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${C.setByOffset("global_idx",_.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:T=>{let g=l?[t,s*c,n*c,o/c**2]:[t,o/c**2,s*c,n*c],$=Me.size(g),P=u.dims,y=Me.sortBasedOnPerm(P,a);return{outputs:[{dims:g,dataType:T[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...tt(P,y)]}},getShaderSource:F}},MM=(e,r)=>{s_(e.inputs),e.compute(o_(e.inputs[0],r))},bM=e=>Ft({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Bl,Ki,oc,i_,a_,l_,d_,ic,c_,vM,TM,Vv=je(()=>{ut(),gt(),Jt(),wt(),Bl="[a-zA-Z]|\\.\\.\\.",Ki="("+Bl+")+",oc="^"+Ki+"$",i_="("+Ki+",)*"+Ki,a_="^"+i_+"$",l_=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},d_=class{constructor(e,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(a_)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,o)=>{let i=e[o].dims.slice();if(!n.match(RegExp(oc)))throw new Error("Invalid LHS term");let a=this.processTerm(n,!0,i,o);this.lhs.push(a)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,o])=>o.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(Ki)))throw new Error("Invalid RHS");s.match(RegExp(Bl,"g"))?.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(n);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let n=t.length,o=!1,i=[],a=0;if(!e.match(RegExp(oc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Bl,"g")),c=new l_(s);return l?.forEach((p,u)=>{if(p==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let h=n-l.length+1;if(h<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(a,a+h),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let w=0;w<i.length;w++){let _=String.fromCharCode(48+w);c.addSymbol(_,u+w),this.addSymbol(_,t[a++],s)}}else c.addSymbol(p,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),c}},ic=e=>e+"_max",c_=(e,r,t,s)=>{let n=e.map(c=>c.length).map((c,p)=>Se(`input${p}`,r,c)),o=Me.size(s),i=Ze("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],u="var prod = 1.0;",h="var sum = 0.0;",w="sum += prod;",_=[],C=[],F=[],T=[],g=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((P,y)=>{if(t.rhs.symbolToIndices.has(y)){let M=t.rhs.symbolToIndices.get(y)?.[0];M!==void 0&&t.lhs.forEach((E,A)=>{if(P.inputIndices.includes(A)){let B=E.symbolToIndices.get(y);if(B===void 0)throw new Error("Invalid symbol error");B.forEach(N=>{p.push(`${n[A].indicesSet(`input${A}Indices`,N,i.indicesGet("outputIndices",M))}`)})}})}else t.lhs.forEach((M,E)=>{if(P.inputIndices.includes(E)){let A=M.symbolToIndices.get(y);if(A===void 0)throw new Error("Invalid symbol error");A.forEach(B=>{_.push(`${n[E].indicesSet(`input${E}Indices`,B,`${y}`)}`)}),T.push(`prod *= ${n[E].getByIndices(`input${E}Indices`)};`)}}),C.push(`for(var ${y}: u32 = 0; ${y} < uniforms.${ic(y)}; ${y}++) {`),F.push("}")});let $=g?[...p,`let sum = ${n.map((P,y)=>P.getByIndices(`input${y}Indices`)).join(" * ")};`]:[...p,h,...C,..._,u,...T,w,...F];return`
            ${c.registerUniforms(a.map(P=>({name:`${ic(P)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,i)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${n.map((P,y)=>`var input${y}Indices: ${n[y].type.indices};`).join(`
`)}
            ${$.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(u=>t.symbolToInfo.has(u)).map(u=>({type:12,data:t.symbolToInfo.get(u)?.dimValue||0}));c.push({type:12,data:o});let p=e.map((u,h)=>[...tt(u)]).reduce((u,h)=>u.concat(h),c);return p.push(...tt(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}},getShaderSource:l}},vM=(e,r)=>{let t=new d_(e.inputs,r.equation),s=t.outputDims,n=e.inputs.map((o,i)=>o.dims);e.compute(c_(n,e.inputs[0].dataType,t,s))},TM=e=>{let r=e.equation.replace(/\s+/g,"");return Ft({equation:r})}}),u_,ac,p_,h_,xM,Uv=je(()=>{ut(),gt(),wt(),u_=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,n=r.length<t.length?0:r.length-t.length;for(;s<t.length&&n<r.length;++s,++n)if(t[s]!==r[n]&&t[s]!==1&&r[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},ac=(e,r)=>{let t=e.length-r.length,s=[];for(let n=0;n<t;++n)s.push(e[n]);for(let n=0;n<r.length;++n)s.push(r[n]===1?e[n+t]:r[n]);return s},p_=(e,r)=>e.length>r.length?ac(e,r):ac(r,e),h_=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=p_(r,t),n=e[0].dataType,o=n===9||Me.size(r)===1,i=n===9||r.length>0&&r[r.length-1]%4===0?4:1,a=o||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(Me.size(s)/a),c=u=>{let h=Se("input",n,r.length,i),w=Ze("output",n,s.length,a),_;if(n===9){let C=(F,T,g="")=>`
          let outputIndices${T} = ${w.offsetToIndices(`outputOffset + ${T}u`)};
          let offset${T} = ${h.broadcastedIndicesToOffset(`outputIndices${T}`,w)};
          let index${T} = offset${T} / 4u;
          let component${T} = offset${T} % 4u;
          ${F}[${T}] = ${g}(${h.getByOffset(`index${T}`)}[component${T}]);
        `;_=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${C("data",0,"u32")}
        ${C("data",1,"u32")}
        ${C("data",2,"u32")}
        ${C("data",3,"u32")}
        ${w.setByOffset("global_idx","data")}
      }`}else _=`
        let outputIndices = ${w.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${h.broadcastedIndicesToOffset("outputIndices",w)};
        let data = ${w.type.value}(${h.getByOffset(`inputOffset / ${i}`)});
        ${w.setByOffset("global_idx","data")}
      }`;return`
    ${u.registerUniform("vec_size","u32").declareVariables(h,w)}
    ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${_}`},p=[{type:12,data:l},...tt(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${i}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},xM=e=>{u_(e.inputs),e.compute(h_(e.inputs),{inputs:[0]})}}),m_,EM,Wv=je(()=>{ut(),gt(),wt(),uu(),m_=e=>{let r=e[0].dataType,t=Me.size(e[0].dims),s=Me.size(e[1].dims),n=s%4===0,o=i=>{let a=Se("x",r,[1],4),l=Se("bias",r,[1],4),c=Ze("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],u=w=>`
      let bias${w}_offset: u32 = (global_idx * 4 + ${w}) % uniforms.bias_size;
      let bias${w} = ${l.getByOffset(`bias${w}_offset / 4`)}[bias${w}_offset % 4];`,h=n?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${u(0)}${u(1)}${u(2)}${u(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(p).declareVariables(a,l,c)}

    ${Rc(Er(r))}

    ${i.mainStart(bo)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${h}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Nc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:o,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/bo/4)}})}},EM=e=>{e.inputs.length<2||Me.size(e.inputs[1].dims)===0?Gy(e):e.compute(m_(e.inputs))}}),f_,__,PM,CM,Gv=je(()=>{ut(),gt(),Jt(),wt(),f_=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},__=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,o=Me.normalizeAxis(r.axis,n),i=t.slice(0);i.splice(o,1,...s);let a=t[o],l=e[0].dataType===9?4:1,c=Math.ceil(Me.size(i)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:o},...tt(e[0].dims,e[1].dims,i)],u=h=>{let w=Se("data",e[0].dataType,e[0].dims.length,l),_=Se("inputIndices",e[1].dataType,e[1].dims.length),C=Ze("output",e[0].dataType,i.length,l),F=g=>{let $=s.length,P=`var indicesIndices${g}  = ${_.type.indices}(0);`;for(let y=0;y<$;y++)P+=`${$>1?`indicesIndices${g}[${y}]`:`indicesIndices${g}`} = ${i.length>1?`outputIndices${g}[uniforms.axis + ${y}]`:`outputIndices${g}`};`;P+=`
          var idx${g} = ${_.getByIndices(`indicesIndices${g}`)};
          if (idx${g} < 0) {
            idx${g} = idx${g} + uniforms.axisDimLimit;
          }
          var dataIndices${g} : ${w.type.indices};
        `;for(let y=0,M=0;y<n;y++)y===o?(P+=`${n>1?`dataIndices${g}[${y}]`:`dataIndices${g}`} = u32(idx${g});`,M+=$):(P+=`${n>1?`dataIndices${g}[${y}]`:`dataIndices${g}`} = ${i.length>1?`outputIndices${g}[${M}]`:`outputIndices${g}`};`,M++);return P},T;if(e[0].dataType===9){let g=($,P,y="")=>`
          let outputIndices${P} = ${C.offsetToIndices(`outputOffset + ${P}u`)};
          ${F(P)};
          let offset${P} = ${w.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${$}[${P}] = ${y}(${w.getByOffset(`index${P}`)}[component${P}]);
        `;T=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${g("value",0,"u32")}
        ${g("value",1,"u32")}
        ${g("value",2,"u32")}
        ${g("value",3,"u32")}
        ${C.setByOffset("global_idx","value")}
      `}else T=`
      let outputIndices = ${C.offsetToIndices("global_idx")};
      ${F("")};
      let value = ${w.getByIndices("dataIndices")};
      ${C.setByOffset("global_idx","value")};
      `;return`
      ${h.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(w,_,C)}
      ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${T}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:u}},PM=e=>Ft({axis:e.axis}),CM=(e,r)=>{let t=e.inputs;f_(t),e.compute(__(e.inputs,r))}}),g_,SM,$M,Kv=je(()=>{ut(),gt(),wt(),g_=(e,r,t,s,n,o,i,a,l)=>{let c=[{type:12,data:o},{type:12,data:s},{type:12,data:n},{type:12,data:t},{type:12,data:i},{type:12,data:a},{type:12,data:l}],p=[o];c.push(...tt(r.dims,p));let u=h=>{let w=Se("indices_data",r.dataType,r.dims.length),_=Ze("input_slice_offsets_data",12,1,1),C=[w,_],F=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${h.registerUniforms(F).declareVariables(...C)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${n.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:u},{inputs:[r],outputs:[-1]})[0]},SM=(e,r)=>{let t=e.inputs,s=t[0].dims,n=t[0].dataType,o=t[1].dims,i=o[o.length-1],a=Me.sizeToDimension(o,o.length-1),l=Me.sizeFromDimension(s,r.batchDims+i),c=Me.sizeToDimension(s,r.batchDims),p=Me.sizeFromDimension(s,r.batchDims),u=a/c,h=new Array(i),w=l;for(let P=0;P<i;++P)h[i-1-P]=w,w*=s[r.batchDims+i-1-P];let _=g_(e,t[1],h,r.batchDims,s,a,u,p,i),C=r.batchDims+i;if(C>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let F=o.slice(0,-1).concat(s.slice(C)),T=Me.size(F),g=[{type:12,data:T},{type:12,data:l},...tt(t[0].dims,_.dims,F)],$=P=>{let y=Se("data",t[0].dataType,t[0].dims.length),M=Se("slice_offsets",12,_.dims.length),E=Ze("output",t[0].dataType,F.length);return`
          ${P.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(y,M,E)}
            ${P.mainStart()}
            ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:F,dataType:n}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:g}),getShaderSource:$},{inputs:[t[0],_]})},$M=e=>({batchDims:e.batch_dims,cacheKey:""})}),w_,y_,kM,AM,Hv=je(()=>{ut(),gt(),Jt(),wt(),w_=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=Me.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,n=e[0],o=e[2],i=e.length===4?e[3]:void 0;if(o.dims.length!==n.dims.length||!n.dims.map((a,l)=>l===t?Math.ceil(a/s)===o.dims[l]:a===o.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==o.dims.length||!i.dims.map((a,l)=>a===o.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},y_=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,o=Me.normalizeAxis(r.gatherAxis,n),i=Me.normalizeAxis(r.quantizeAxis,n),a=t.slice(0);a.splice(o,1,...s);let l=Me.size(a),c=e[2].dataType,p=e[0].dataType===22,u=[{type:12,data:l},{type:12,data:i},{type:12,data:o},{type:12,data:r.blockSize},...tt(...e.map((w,_)=>w.dims),a)],h=w=>{let _=Se("data",e[0].dataType,e[0].dims.length),C=Se("inputIndices",e[1].dataType,e[1].dims.length),F=Se("scales",e[2].dataType,e[2].dims.length),T=e.length>3?Se("zeroPoint",e[3].dataType,e[3].dims.length):void 0,g=Ze("output",c,a.length),$=[_,C,F];T&&$.push(T);let P=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${w.registerUniforms(P).declareVariables(...$,g)}
        ${w.mainStart()}
        let output_indices = ${g.offsetToIndices("global_idx")};
        var indices_indices = ${C.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${g.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${C.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${g.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${_.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${g.indicesGet("output_indices","i")};
          ${_.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${C.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[o]};
        }
        ${_.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${g.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${_.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${_.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${_.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${F.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${F.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${F.getByIndices("scale_indices")};
        ${T?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${T.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${T.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Er(c)}(quantized_data - zero_point) * scale;
        ${g.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((w,_)=>_!==1).map(w=>w.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(w,_)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:h}},kM=(e,r)=>{let t=e.inputs;w_(t,r),e.compute(y_(e.inputs,r))},AM=e=>Ft({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),M_,b_,IM,FM,qv=je(()=>{ut(),gt(),Jt(),wt(),M_=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},b_=(e,r)=>{let t=e[0].dims,s=e[0].dataType,n=t.length,o=e[1].dims,i=e[1].dataType,a=Me.normalizeAxis(r.axis,n),l=t[a],c=o.slice(0),p=Me.size(c),u=Se("input",s,n),h=Se("indicesInput",i,o.length),w=Ze("output",s,c.length),_=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return _.push(...tt(t,o,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:C=>`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(u,h,w)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${w.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${u.type.indices}(outputIndices);
      ${u.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${u.getByIndices("inputIndices")};

      ${w.setByOffset("global_idx","value")};
  }`}},IM=e=>Ft({axis:e.axis}),FM=(e,r)=>{let t=e.inputs;M_(t),e.compute(b_(e.inputs,r))}}),v_,T_,OM,DM,Qv=je(()=>{ut(),gt(),wt(),v_=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},T_=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[n,o,i]=Lw.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[n,o];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(o/l),p=Math.ceil(n/l),u=!0,h=Me.size(a),w=[{type:12,data:u?c:h},{type:12,data:n},{type:12,data:o},{type:12,data:i},{type:1,data:r.alpha},{type:1,data:r.beta}],_=["type","type"];e.length===3&&(w.push(...tt(e[2].dims)),_.push("rank")),w.push(...tt(a));let C=T=>{let g="";r.transA&&r.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=r.alpha===1?"":"value *= uniforms.alpha;",P=Se("a",e[0].dataType,e[0].dims),y=Se("b",e[1].dataType,e[1].dims),M=P.type.value,E=null,A=[P,y];e.length===3&&(E=Se("c",e[2].dataType,e[2].dims.length),A.push(E));let B=Ze("output",e[0].dataType,a.length);A.push(B);let N=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${T.registerUniforms(N).declareVariables(...A)}

  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${M}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${$}
    ${E!=null?`let cOffset = ${E.broadcastedIndicesToOffset("vec2(m, n)",B)}; value += ${M}(uniforms.beta) * ${E.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},F=T=>{let g=Se("a",e[0].dataType,e[0].dims),$=Se("b",e[1].dataType,e[1].dims),P=null,y=[g,$];e.length===3&&(P=Se("c",e[2].dataType,e[2].dims.length),y.push(P));let M=Ze("output",e[0].dataType,a.length);y.push(M);let E=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],A="",B="";r.transA&&r.transB?(B=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,A="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(B=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,A="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(B=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,A="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(B=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${g.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,A="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let N=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${T.registerUniforms(E).declareVariables(...y)}
  var<workgroup> tile_a: array<array<${g.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${$.type.storage}, ${l}>, ${l}>;
  ${T.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${M.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${B}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${A}
      }
      workgroupBarrier();
    }

    ${N}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${P!=null?`let cOffset = ${P.broadcastedIndicesToOffset("vec2(m, n)",M)}; value += ${M.type.value}(uniforms.beta) * ${P.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return u?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:w}),getShaderSource:F}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:w}),getShaderSource:C}},OM=e=>{let r=e.transA,t=e.transB,s=e.alpha,n=e.beta;return{transA:r,transB:t,alpha:s,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},DM=(e,r)=>{v_(e.inputs),e.compute(T_(e.inputs,r))}}),ys,ks,bn,vn,x_,E_,P_,C_,S_,$_,k_,A_,LM,zM,Xv=je(()=>{ut(),gt(),Jt(),wt(),[ys,ks,bn,vn]=[0,1,2,3],x_=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},E_=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,P_=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,C_=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,S_=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,$_=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${ys}] = batch;
     indices[${ks}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${bn}] = u32(r);
            indices[${vn}] = u32(c);
          }
        `;case"border":return`
          indices[${bn}] = u32(clamp(r, 0, H - 1));
          indices[${vn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${bn}] = gs_reflect(r, border[1], border[3]);
          indices[${vn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,k_=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${ys}], indices[${ks}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${ys}], indices[${ks}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${ys}], indices[${ks}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${ys}], indices[${ks}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${ys}], indices[${ks}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${ys}], indices[${ks}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,A_=(e,r)=>{let t=Se("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],n=Se("grid",e[1].dataType,s.length,2),o=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(o=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[ys,ks,bn,vn]=[0,3,1,2]);let i=Ze("output",e[0].dataType,o.length),a=t.type.value,l=Me.size(o),c=[{type:12,data:l},...tt(e[0].dims,s,o)],p=u=>`
  ${u.registerUniform("output_size","u32").declareVariables(t,n,i)}
  ${E_}
  ${P_(a)}
  ${C_(r)}
  ${S_(r)}
  ${$_(t,a,r)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${bn}]);
      let W_in = i32(uniforms.x_shape[${vn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${ys}], indices[${bn}], indices[${vn}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${k_(i,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:u=>{let h=Me.size(o);return{outputs:[{dims:o,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:c}},getShaderSource:p}},LM=(e,r)=>{x_(e.inputs),e.compute(A_(e.inputs,r))},zM=e=>Ft({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),$r,I_,BM,lc,F_,ea,RM,NM=je(()=>{ut(),gt(),Jt(),au(),cu(),wt(),en(),$r=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,I_=(e,r)=>{let t=e[0],s=$r(e,1),n=$r(e,2),o=$r(e,3),i=$r(e,4),a=$r(e,5),l=$r(e,6),c=$r(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],u=t.dims[1],h=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],w=u,_=0,C=0,F=Math.floor(h/r.numHeads);if(l&&c&&Me.size(l.dims)&&Me.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==F)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==F)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');_=l.dims[2],C=l.dims[2]}else if(l&&Me.size(l.dims)||c&&Me.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let T;if(s&&Me.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');T=2,w=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==F)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');T=5,w=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==F)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');T=0,w=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');T=3}if(o&&Me.size(o.dims)>0){if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let g=_+w,$=0;if(i&&Me.size(i.dims)>0){$=8;let E=i.dims;throw E.length===1?E[0]===p?$=1:E[0]===3*p+2&&($=3):E.length===2&&E[0]===p&&E[1]===g&&($=5),$===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let P=!1,y=h;if(n&&Me.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(w!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=n.dims[2]}else{if(w!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');y=n.dims[1]*n.dims[3],P=!0}}let M=!1;if(i&&Me.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&Me.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==u||a.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:u,pastSequenceLength:_,kvSequenceLength:w,totalSequenceLength:g,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:h,vHiddenSize:y,headSize:F,vHeadSize:Math.floor(y/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:$,scale:r.scale,broadcastResPosBias:M,passPastInKv:P,qkvFormat:T}},BM=e=>Ft({...e}),lc=Ft({perm:[0,2,1,3]}),F_=(e,r,t,s,n,o,i)=>{let a=[s,n,o],l=Me.size(a),c=[{type:12,data:l},{type:12,data:i},{type:12,data:o}],p=u=>{let h=Ze("qkv_with_bias",r.dataType,a),w=Se("qkv",r.dataType,a),_=Se("bias",t.dataType,a),C=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${u.registerUniforms(C).declareVariables(w,_,h)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},ea=(e,r,t,s,n,o,i,a)=>{let l=o;if(i&&Me.size(i.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=F_(e,o,i,r,s,t*n,a),l=l.reshape([r,s,t,n]),t===1||s===1?l:e.compute(jr(l,lc.perm),{inputs:[l],outputs:[-1]})[0]}else return o.dims.length===3&&(l=o.reshape([r,s,t,n])),t===1||s===1?l:e.compute(jr(l,lc.perm),{inputs:[l],outputs:[-1]})[0]},RM=(e,r)=>{let t=I_(e.inputs,r),s=e.inputs[0],n=$r(e.inputs,1),o=$r(e.inputs,2),i=$r(e.inputs,3),a=$r(e.inputs,4),l=$r(e.inputs,5),c=$r(e.inputs,6),p=$r(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if(n?.dims.length===5)throw new Error("Packed KV is not implemented");let u=n&&o&&n.dims.length===4&&o.dims.length===4,h=ea(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,i,0);if(u)return sa(e,h,n,o,a,void 0,c,p,l,t);if(!n||!o)throw new Error("key and value must be provided");let w=ea(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,n,i,t.hiddenSize),_=ea(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,o,i,2*t.hiddenSize);sa(e,h,w,_,a,void 0,c,p,l,t)}}),O_,D_,L_,z_,Gc,jM,VM,UM=je(()=>{ut(),gt(),Jt(),wt(),O_=e=>{if(!e||e.length<1)throw new Error("too few inputs")},D_=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>t.push(Number(n))),s=t.length),Ft({numOutputs:s,axis:r.axis,splitSizes:t})},L_=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${et("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,z_=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let n=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(n):s===0?t.push(`if (output_number == ${s}u) { ${n} }`):s===r-1?t.push(`else { ${n} }`):t.push(`else if (output_number == ${s}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},Gc=(e,r)=>{let t=e[0].dims,s=Me.size(t),n=e[0].dataType,o=Me.normalizeAxis(r.axis,t.length),i=new Array(r.numOutputs),a=Se("input",n,t.length),l=new Array(r.numOutputs),c=[],p=[],u=0,h=[{type:12,data:s}];for(let _=0;_<r.numOutputs;_++){u+=r.splitSizes[_],l[_]=u;let C=t.slice();C[o]=r.splitSizes[_],p.push(C),i[_]=Ze(`output${_}`,n,C.length),c.push({dims:p[_],dataType:e[0].dataType})}h.push({type:12,data:l},...tt(t,...p));let w=_=>`
  ${_.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}
  ${L_(l.length)}
  ${z_(i)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",o)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${et("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",o,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:w,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h})}},jM=(e,r)=>{O_(e.inputs);let t=e.inputs.length===1?r:D_(e.inputs,r);e.compute(Gc(e.inputs,t),{inputs:[0]})},VM=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ft({axis:r,numOutputs:s,splitSizes:t})}}),B_,R_,dc,WM,Jv=je(()=>{Jt(),cu(),NM(),UM(),en(),B_=(e,r)=>{if(r.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],n=e[2],o=e[3],i=e[4];if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],u=c,h=0,w=!s||s.dims.length===0,_=Math.floor(w?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);w&&(p=_*r.numHeads);let C=o&&o.dims.length!==0,F=i&&i.dims.length!==0;if(C&&o.dims.length===4&&o.dims[0]===l&&o.dims[1]!==r.kvNumHeads&&o.dims[2]===r.kvNumHeads&&o.dims[3]===_)throw new Error("BSNH pastKey/pastValue is not supported");if(C&&F){if(o.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');h=o.dims[2]}else if(C||F)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let T=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');u=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');u=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');T=3}let g=0,$=!1,P=r.kvNumHeads?_*r.kvNumHeads:p;if(n&&n.dims.length>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(u!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');P=n.dims[2]}else{if(u!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');P=n.dims[1]*n.dims[3],$=!0}}let y=e.length>4?e[5]:void 0;if(y&&y.dims.length!==1&&y.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:h,kvSequenceLength:u,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:P,headSize:_,vHeadSize:Math.floor(P/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:g,scale:r.scale,broadcastResPosBias:!1,passPastInKv:$,qkvFormat:T}},R_=Ft({perm:[0,2,1,3]}),dc=(e,r,t)=>{let s=r,n=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,n,t.headSize]),s=e.compute(jr(s,R_.perm),{inputs:[s],outputs:[-1]})[0]),s},WM=(e,r)=>{let t=B_(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],n=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,o=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,u=Ft({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[h,w,_]=!n&&!o?e.compute(Gc([s],u),{inputs:[s],outputs:[-1,-1,-1]}):[s,n,o],C=ea(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,h,void 0,0);sa(e,C,dc(e,w,t),dc(e,_,t),void 0,void 0,i,a,void 0,t,l,c)}}),cc,N_,j_,GM,Yv=je(()=>{ut(),gt(),en(),wt(),cc=(e,r,t,s,n,o,i,a)=>{let l=Gt(o),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,u=n*i,h=64;u===1&&(h=256);let w=[n,i,o/l],_=[n,i,2],C=["rank","type","type"],F=[];F.push(...tt(w,_));let T=g=>{let $=Se("x",r.dataType,3,l),P=Se("scale",t.dataType,t.dims),y=Se("bias",s.dataType,s.dims),M=Ze("output",1,3,2),E=[$,P,y,M];return`
  var<workgroup> workgroup_shared : array<${p}, ${h}>;
  const workgroup_size = ${h}u;
  ${g.declareVariables(...E)}
  ${g.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${$.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Zs("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${Zs("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${h}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:_,dataType:1}],dispatchGroup:{x:u},programUniforms:F}),getShaderSource:T},{inputs:[r,t,s],outputs:[-1]})[0]},N_=(e,r,t)=>{let s=r[0].dims,n=s,o=2,i=s[0],a=s[1],l=Me.sizeFromDimension(s,o),c=Gt(l),p=Me.size(n)/c,u=cc(e,r[0],r[1],r[2],i,l,a,t.epsilon),h=[i,a,l/c],w=[i,a],_=["type","none"],C=F=>{let T=Se("x",r[0].dataType,h.length,c),g=Se("scale_shift",1,w.length,2),$=Ze("output",r[0].dataType,h.length,c),P=[T,g,$];return`
  ${F.registerUniform("output_size","u32").declareVariables(...P)}
  ${F.mainStart()}
  ${F.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${$.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${g.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${T.getByOffset("global_idx")} * ${$.type.value}(scale_shift.x) + ${$.type.value}(scale_shift.y);
      ${$.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...tt(h,w,h)]}),getShaderSource:C},{inputs:[r[0],u]})},j_=(e,r,t)=>{let s=r[0].dims,n=s,o=s[0],i=s[s.length-1],a=Me.sizeFromDimension(s,1)/i,l=Gt(i),c=Me.size(n)/l,p=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],u=["type","type"],h=!1,w=[0,s.length-1];for(let T=0;T<s.length-2;T++)h=h||s[T+1]!==1,w.push(T+1);h=h&&s[s.length-1]!==1;let _=h?e.compute(jr(e.inputs[0],w),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(T,g)=>s[w[g]])),C=cc(e,_,r[1],r[2],o,a,i,t.epsilon),F=T=>{let g=ur(r[0].dataType),$=l===1?"vec2f":`mat${l}x2f`,P=E=>{let A=E===0?"x":"y",B=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${g}(${B}(scale.${A}))`;case 2:return`vec2<${g}>(${B}(scale[0].${A}, scale[1].${A}))`;case 4:return`vec4<${g}>(${B}(scale[0].${A}, scale[1].${A}, scale[2].${A}, scale[3].${A}))`;default:throw new Error(`Not supported compoents ${l}`)}},y=Se("input",r[0].dataType,r[0].dims,l),M=Ze("output",r[0].dataType,n,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${y.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${$}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${M.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${T.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${P(0)}, ${P(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:F},{inputs:[r[0],C]})},GM=(e,r)=>{r.format==="NHWC"?j_(e,e.inputs,r):N_(e,e.inputs,r)}}),V_,U_,KM,Zv=je(()=>{ut(),gt(),wt(),V_=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},U_=(e,r,t)=>{let s=r.simplified,n=e[0].dims,o=e[1],i=!s&&e[2],a=n,l=Me.normalizeAxis(r.axis,n.length),c=Me.sizeToDimension(n,l),p=Me.sizeFromDimension(n,l),u=Me.size(o.dims),h=i?Me.size(i.dims):0;if(u!==p||i&&h!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${u} and bias size of ${h}`);let w=[];for(let y=0;y<n.length;++y)y<l?w.push(n[y]):w.push(1);let _=Gt(p),C=["type","type"],F=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/_)},{type:1,data:r.epsilon}];i&&C.push("type");let T=t>1,g=t>2,$=y=>{let M=ur(e[0].dataType),E=[Se("x",e[0].dataType,e[0].dims,_),Se("scale",o.dataType,o.dims,_)];i&&E.push(Se("bias",i.dataType,i.dims,_)),E.push(Ze("output",e[0].dataType,a,_)),T&&E.push(Ze("mean_data_output",1,w)),g&&E.push(Ze("inv_std_output",1,w));let A=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${y.registerUniforms(A).declareVariables(...E)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Lc("f32",_)};
    var mean_square_vector = ${Lc("f32",_)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${yo(M,_,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Zs("mean_vector",_)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Zs("mean_square_vector",_)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${yo(M,_,"x[j + offset]")};
      let f32scale = ${yo(M,_,"scale[j]")};
      output[j + offset] = ${E[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${yo(M,_,"bias[j]")}`:""}
      );
    }

    ${T?"mean_data_output[global_idx] = mean":""};
    ${g?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},P=[{dims:a,dataType:e[0].dataType}];return T&&P.push({dims:w,dataType:1}),g&&P.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${t};${s}`,inputDependencies:C},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:F}),getShaderSource:$}},KM=(e,r)=>{V_(e.inputs),e.compute(U_(e.inputs,r,e.outputCount))}}),W_,HM,eT=je(()=>{gt(),fu(),_u(),W_=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},HM=e=>{W_(e.inputs);let r=Mo.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(mu(e.inputs,{activation:""},r));else{let n=r[r.length-2],o=Me.size(e.inputs[0].dims.slice(0,-2)),i=Me.size(e.inputs[1].dims.slice(0,-2));if(o!==1&&n===1&&i===1){let a=e.inputs[0].reshape([1,o,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,o,t],p=[a,l];e.compute(Yl(p,{activation:""},r,c),{inputs:p})}else e.compute(Yl(e.inputs,{activation:""},r))}}}),G_,K_,H_,qM,QM,tT=je(()=>{ut(),gt(),Jt(),wt(),G_=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),o=r.blockSize/8*r.bits,i=e[1];if(!Me.areEqual(i.dims,[r.n,n,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(Me.size(a)!==r.n*n)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(Me.size(l)!==c)throw new Error("zeroPoints input size error.")}},K_=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],o=r.k,i=r.n,a=t.slice(0,s-2),l=Me.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=Gt(r.k),h=Gt(c),w=Gt(i),_=a.concat([n,i]),C=n>1&&i/w%2===0?2:1,F=Me.size(_)/w/C,T=64,g=[],$=[l,n,o/u],P=Me.convertShape(e[1].dims).slice();P.splice(-1,1,c/h),g.push(...tt($)),g.push(...tt(P)),g.push(...tt(e[2].dims)),e.length===4&&g.push(...tt(Me.convertShape(e[3].dims)));let y=[l,n,i/w];g.push(...tt(y));let M=E=>{let A=$.length,B=Se("a",e[0].dataType,A,u),N=Se("b",12,P.length,h),Q=Se("scales",e[2].dataType,e[2].dims.length),H=[B,N,Q],z=e.length===4?Se("zero_points",12,e[3].dims.length):void 0;z&&H.push(z);let Z=y.length,q=Ze("output",e[0].dataType,Z,w),X=ur(e[0].dataType),se=(()=>{switch(u){case 1:return`array<${X}, 8>`;case 2:return`mat4x2<${X}>`;case 4:return`mat2x4<${X}>`;default:throw new Error(`${u}-component is not supported.`)}})(),ne=()=>{let V=`
          // reuse a data
            var input_offset = ${B.indicesToOffset(`${B.type.indices}(batch, row, word_offset)`)};
            var a_data: ${se};
            for (var j: u32 = 0; j < ${8/u}; j++) {
              a_data[j] = ${B.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let L=0;L<w*C;L++)V+=`
            b_value = ${h===1?`b${L}_data`:`b${L}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${se}(${Array.from({length:4},(O,J)=>`${X}(b_value_lower[${J}]), ${X}(b_value_upper[${J}])`).join(", ")});
            b_dequantized_values = ${u===1?`${se}(${Array.from({length:8},(O,J)=>`(b_quantized_values[${J}] - ${z?`zero_point${L}`:"zero_point"}) * scale${L}`).join(", ")});`:`(b_quantized_values - ${se}(${Array(8).fill(`${z?`zero_point${L}`:"zero_point"}`).join(",")})) * scale${L};`};
            workgroup_shared[local_id.x * ${C} + ${Math.floor(L/w)}]${w>1?`[${L%w}]`:""} += ${Array.from({length:8/u},(O,J)=>`${u===1?`a_data[${J}] * b_dequantized_values[${J}]`:`dot(a_data[${J}], b_dequantized_values[${J}])`}`).join(" + ")};
          `;return V},ae=()=>{let V=`
            var col_index = col * ${w};
            ${z?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${X}(8);`}
            `;for(let L=0;L<w*C;L++)V+=`
            let scale${L} = ${Q.getByOffset("col_index * nBlocksPerCol + block")};
            ${z?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${z.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${L} = ${X}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return V},pe=()=>{let V=`col_index = col * ${w};`;for(let L=0;L<w*C;L++)V+=`
            let b${L}_data = ${N.getByIndices(`${N.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return V+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${se};
            var b_dequantized_values: ${se};`,V};return`
        var<workgroup> workgroup_shared: array<${q.type.value}, ${C*T}>;
        ${E.declareVariables(...H,q)}
        ${E.mainStart([T,1,1])}
          let output_indices = ${q.offsetToIndices(`(global_idx / ${T}) * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${T}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/u};
            ${ae()}
            for (var word: u32 = 0; word < ${c}; word += ${h}) {
              ${pe()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${ne()}
                word_offset += ${8/u};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${C}) {
            var output_value: ${q.type.value} = ${q.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${T}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${C};
            }
            ${q.setByIndices(`${q.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${u};${h};${w};${C};${T}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:F},programUniforms:g}),getShaderSource:M}},H_=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],o=r.k,i=r.n,a=t.slice(0,s-2),l=Me.size(a),c=e[1].dims[2]/4,p=e[0].dataType,u=Gt(r.k),h=Gt(c),w=a.concat([n,i]),_=128,C=i%8===0?8:i%4===0?4:1,F=_/C,T=F*h*8,g=T/u,$=T/r.blockSize,P=Me.size(w)/C,y=[],M=[l,n,o/u],E=Me.convertShape(e[1].dims).slice();E.splice(-1,1,c/h),y.push(...tt(M)),y.push(...tt(E)),y.push(...tt(e[2].dims)),e.length===4&&y.push(...tt(Me.convertShape(e[3].dims)));let A=[l,n,i];y.push(...tt(A));let B=N=>{let Q=M.length,H=Se("a",e[0].dataType,Q,u),z=Se("b",12,E.length,h),Z=Se("scales",e[2].dataType,e[2].dims.length),q=[H,z,Z],X=e.length===4?Se("zero_points",12,e[3].dims.length):void 0;X&&q.push(X);let se=A.length,ne=Ze("output",e[0].dataType,se),ae=ur(e[0].dataType),pe=()=>{switch(u){case 1:return`
          let a_data0 = vec4<${ae}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${ae}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${ae}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${ae}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${u}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${H.type.value}, ${g}>;
        var<workgroup> inter_results: array<array<${ne.type.value}, ${F}>, ${C}>;
        ${N.declareVariables(...q,ne)}
        ${N.mainStart([F,C,1])}
          let output_indices = ${ne.offsetToIndices(`workgroup_index * ${C}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${$} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${g};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${g}; a_offset += ${_})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${H.getByIndices(`${H.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${H.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${$} + local_id.x;
            ${X?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${X.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${ae}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ae}(8);`}
            let scale = ${Z.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${z.getByIndices(`${z.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/u};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${pe()}
              let b_value = ${h===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${ae}>(${Array.from({length:4},(V,L)=>`${ae}(b_value_lower[${L}]), ${ae}(b_value_upper[${L}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${ae}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(V,L)=>`${`dot(a_data${L}, b_dequantized_values[${L}])`}`).join(" + ")};
              word_offset += ${8/u};
            }
            workgroupBarrier();
          }

          if (local_idx < ${C}) {
            var output_value: ${ne.type.value} = ${ne.type.value}(0);
            for (var b = 0u; b < ${F}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ne.setByIndices(`${ne.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${u};${h};${F};${C}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:w,dataType:p}],dispatchGroup:{x:P},programUniforms:y}),getShaderSource:B}},qM=(e,r)=>{G_(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(H_(e.inputs,r)):e.compute(K_(e.inputs,r))},QM=e=>Ft(e)}),q_,Q_,X_,J_,Y_,Z_,eg,tg,XM,rT=je(()=>{ut(),gt(),wt(),q_=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Q_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
            k = i32(${e.indicesGet("indices",n)}) - ${et("uniforms.pads",n,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${et("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${et("uniforms.x_strides",n,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},X_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${et("uniforms.pads",n,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${et("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${et("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${et("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},J_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${et("uniforms.pads",n,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${et("uniforms.x_shape",n,r)})) {
                  k = i32(${et("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${et("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Y_=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${et("uniforms.pads",n,t)};
                if (k < 0)  {
                  k += i32(${et("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${et("uniforms.x_shape",n,r)})) {
                  k -= i32(${et("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${et("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Z_=(e,r,t)=>{switch(t.mode){case 0:return Q_(e,r,t.pads.length);case 1:return X_(e,r,t.pads.length);case 2:return J_(e,r,t.pads.length);case 3:return Y_(e,r,t.pads.length);default:throw new Error("Invalid mode")}},eg=(e,r)=>{let t=Me.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,n=Me.size(t),o=[{type:12,data:n},{type:6,data:r.pads}],i=e.length>=3&&e[2].data;r.mode===0&&o.push({type:i?e[2].dataType:1,data:r.value}),o.push(...tt(e[0].dims,t));let a=["rank"],l=c=>{let p=Ze("output",e[0].dataType,t.length),u=Se("x",e[0].dataType,s.length),h=u.type.value,w=Z_(p,s.length,r),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&_.push({name:"constant_value",type:i?h:"f32"}),`
            ${c.registerUniforms(_).declareVariables(u,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${h}(0);
            ${w}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${i}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Me.size(t)/64)},programUniforms:o}),getShaderSource:l}},tg=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,n=e[0].dims.length,o=new Int32Array(2*n).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)o[Number(a[l])]=Number(t[l]),o[Number(a[l])+n]=Number(t[l+a.length])}else t.forEach((a,l)=>o[Number(l)]=Number(a));let i=[];return o.forEach(a=>i.push(a)),{mode:r.mode,value:s,pads:i}}else return r},XM=(e,r)=>{q_(e.inputs);let t=tg(e.inputs,r);e.compute(eg(e.inputs,t),{inputs:[0]})}}),Hi,uc,pc,hc,mc,rg,sg,fc,_c,JM,YM,gc,ZM,e0,wc,t0,r0,s0,n0,sT=je(()=>{ds(),ut(),gt(),wt(),Hi=e=>{if(jt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},uc=(e,r,t)=>{let s=r.format==="NHWC",n=e.dims.slice();s&&n.splice(1,0,n.pop());let o=Object.hasOwnProperty.call(r,"dilations"),i=r.kernelShape.slice(),a=r.strides.slice(),l=o?r.dilations.slice():[],c=r.pads.slice();Xl.adjustPoolAttributes(t,n,i,a,l,c);let p=Xl.computePoolOutputShape(t,n,a,l,i,c,r.autoPad),u=Object.assign({},r);o?Object.assign(u,{kernelShape:i,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(u,{kernelShape:i,strides:a,pads:c,cacheKey:r.cacheKey});let h=p.slice();return h.push(h.splice(1,1)[0]),[u,s?h:p]},pc=(e,r)=>{let t=r.format==="NHWC",s=Me.size(e),n=Me.size(r.kernelShape),o=[{type:12,data:s},{type:12,data:n}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],u=!!(c+p);o.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(r.kernelShape.length===2){let w=r.kernelShape[r.kernelShape.length-2],_=r.strides[r.strides.length-2],C=r.pads[r.pads.length/2-2],F=r.pads[r.pads.length-2];h=!!(C+F),o.push({type:12,data:w},{type:12,data:_},{type:12,data:C},{type:12,data:F}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[o,i,!0,u,h]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=Me.computeStrides(r.kernelShape);o.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),i.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[o,i,!!l,!1,!1]}},hc=(e,r,t,s,n,o,i,a,l,c,p,u)=>{let h=n.format==="NHWC",w=r.type.value,_=Ze("output",r.type.tensor,s);if(n.kernelShape.length<=2){let C="",F="",T="",g=t-(h?2:1);if(p?C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${o}
                }`:C=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${o}
                }`,n.kernelShape.length===2){let $=t-(h?3:2);u?F=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${$}] < 0 || xIndices[${$}] >= uniforms.x_shape[${$}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:F=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                `,T=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var value = ${w}(${a});
              var pad = 0;
              ${F}
              ${C}
              ${T}
              ${i}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let C=n.kernelShape.length,F=n.pads.length,T="";return c?T=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${o}
              }`:T=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${o}
            `,`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var offsets: array<u32, ${C}>;

              var value = ${w}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${C-1}u; j++) {
                  offsets[j] = offset / ${et("uniforms.kernelStrides","j",C)};
                  offset -= offsets[j] * ${et("uniforms.kernelStrides","j",C)};
                }
                offsets[${C-1}] = offset;

                isPad = false;
                for (var j = ${t-C}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${et("uniforms.strides",`j - ${t-C}u`,C)}
                    + offsets[j - ${t-C}u] - ${et("uniforms.pads","j - 2u",F)};
                  ${T}
              }
              ${i}

              output[global_idx] = value;
            }`}},mc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,rg=e=>`${mc(e)};${e.countIncludePad}`,sg=e=>`${mc(e)};${e.storageOrder};${e.dilations}`,fc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),_c=(e,r,t,s)=>{let[n,o]=uc(r,s,t),i=Se("x",r.dataType,r.dims.length),a=i.type.value,l="value += x_val;",c="";n.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,u,h,w,_]=pc(o,n);p.push(...tt(r.dims,o));let C=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${h};${w};${_}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Me.size(o)/64)},programUniforms:p}),getShaderSource:F=>hc(F,i,r.dims.length,o.length,n,l,c,0,u,h,w,_)}},JM=e=>{let r=e.count_include_pad!==0,t=fc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:rg(s)}},YM=(e,r)=>{Hi(e.inputs),e.compute(_c("AveragePool",e.inputs[0],!1,r))},gc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},ZM=e=>{let r=e.format;return{format:r,...gc,cacheKey:r}},e0=(e,r)=>{Hi(e.inputs),e.compute(_c("GlobalAveragePool",e.inputs[0],!0,r))},wc=(e,r,t,s)=>{let[n,o]=uc(r,s,t),i=`
      value = max(x_val, value);
    `,a="",l=Se("x",r.dataType,r.dims.length),c=["rank"],[p,u,h,w,_]=pc(o,n);return p.push(...tt(r.dims,o)),{name:e,shaderCache:{hint:`${s.cacheKey};${h};${w};${_}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:o,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Me.size(o)/64)},programUniforms:p}),getShaderSource:C=>hc(C,l,r.dims.length,o.length,n,i,a,r.dataType===10?-65504:-1e5,u,h,w,_)}},t0=(e,r)=>{Hi(e.inputs),e.compute(wc("MaxPool",e.inputs[0],!1,r))},r0=e=>{let r=e.storage_order,t=e.dilations,s=fc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:t,...s,cacheKey:""};return{...n,cacheKey:sg(n)}},s0=e=>{let r=e.format;return{format:r,...gc,cacheKey:r}},n0=(e,r)=>{Hi(e.inputs),e.compute(wc("GlobalMaxPool",e.inputs[0],!0,r))}}),ng,og,o0,i0,nT=je(()=>{ut(),gt(),Jt(),wt(),ng=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,o)=>o===r.axis||n===e[0].dims[o]).reduce((n,o)=>n&&o,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},og=(e,r)=>{let t=Me.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,n=s===3,o=e[0].dims,i=e[1].dataType,a=Me.size(o),l=s===3||s===2,c=l?[Math.ceil(Me.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,u=e.length>2?e[2]:void 0,h=u?l?[Math.ceil(Me.size(u.dims)/4)]:u.dims:void 0,w=p.length===0||p.length===1&&p[0]===1,_=w===!1&&p.length===1,C=Gt(a),F=w&&(!l||C===4),T=F?C:1,g=F&&!l?C:1,$=Se("input",l?12:s,c.length,g),P=Se("scale",i,p.length),y=u?Se("zero_point",l?12:s,h.length):void 0,M=Ze("output",i,o.length,T),E=[$,P];y&&E.push(y);let A=[c,p];u&&A.push(h);let B=[{type:12,data:a/T},{type:12,data:t},{type:12,data:r.blockSize},...tt(...A,o)],N=Q=>{let H=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${Q.registerUniforms(H).declareVariables(...E,M)}
      ${Q.mainStart()}
          ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${M.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${$.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${T===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${$.getByOffset("global_idx")};`};

          // Set scale input
          ${w?`let scale_value= ${P.getByOffset("0")}`:_?`
            let scale_index = ${M.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${P.getByOffset("scale_index")};`:`
            var scale_indices: ${P.type.indices} = output_indices;
            let index = ${P.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${P.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${P.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${y?w?l?`
                let zero_point_input = ${y.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${y.getByOffset("0")}`:_?l?`
                let zero_point_index = ${M.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${y.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${M.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${y.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${P.indicesToOffset("scale_indices")};
                let zero_point_input = ${y.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${y.getByIndices("scale_indices")};`:`let zero_point_value = ${l?n?"i32":"u32":$.type.value}(0);`};
      // Compute and write output
      ${M.setByOffset("global_idx",`${M.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getShaderSource:N,getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/T/64),y:1,z:1},programUniforms:B})}},o0=(e,r)=>{ng(e.inputs,r),e.compute(og(e.inputs,r))},i0=e=>Ft({axis:e.axis,blockSize:e.blockSize})}),ig,ag,a0,oT=je(()=>{ds(),ut(),wt(),ig=(e,r,t)=>{let s=e===r,n=e<r&&t<0,o=e>r&&t>0;if(s||n||o)throw new Error("Range these inputs' contents are invalid.")},ag=(e,r,t,s)=>{let n=Math.abs(Math.ceil((r-e)/t)),o=[n],i=n,a=[{type:12,data:i},{type:s,data:e},{type:s,data:t},...tt(o)],l=c=>{let p=Ze("output",s,o.length),u=p.type.value,h=[{name:"outputSize",type:"u32"},{name:"start",type:u},{name:"delta",type:u}];return`
        ${c.registerUniforms(h).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${u}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},a0=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),jt.webgpu.validateInputContent&&ig(r,t,s),e.compute(ag(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),lg,dg,l0,d0,iT=je(()=>{ut(),gt(),Jt(),wt(),lg=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,o=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${n}bitcast<${s}>(oldValue) + (${t})${o}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${n}max(bitcast<f32>(oldValue), (${t}))${o}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${n}min(bitcast<${s}>(oldValue), (${t}))${o}`;case"mul":return`${n}(bitcast<${s}>(oldValue) * (${t}))${o}`;default:throw new Error(`Reduction ${e} is not supported.`)}},dg=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t,o=1,i=Math.ceil(Me.size(s)/o),a=s[s.length-1],l=Me.sizeFromDimension(t,a),c=[{type:12,data:i},{type:12,data:a},{type:12,data:l},...tt(e[1].dims,e[2].dims,n)],p=u=>{let h=Se("indices",e[1].dataType,e[1].dims.length),w=Se("updates",e[2].dataType,e[2].dims.length,o),_=r.reduction!=="none"&&r.reduction!==""?Rw("output",e[0].dataType,n.length):Ze("output",e[0].dataType,n.length,o);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(h,w,_)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    let n = ${Me.size(s)};
    for (var i = 0; i < n; i = i + 1) {
      for (var j = i + 1; j < n; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    indices_start = 0u;
  }
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${lg(r.reduction,"output[data_offset + i]","value",_.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}),getShaderSource:p}},l0=e=>Ft({reduction:e.reduction}),d0=(e,r)=>{e.compute(dg(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),cg,ug,pg,yc,hg,mg,fg,_g,gg,wg,yg,Mg,Mc,bg,vg,Tg,xg,Eg,c0,u0,aT=je(()=>{ut(),gt(),Jt(),wt(),cg=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},ug=(e,r,t)=>{r.every(n=>n>=0&&n<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((n,o)=>s[n]=e[o]),s},pg=(e,r,t,s,n,o)=>{let[i,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(p=>o.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");cg(s,r),r.axes.length>0&&ug(s,r.axes,c).forEach((p,u)=>s[u]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>n.push(Number(p))),n.length!==0&&n.length!==c&&t>=18&&n.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof n<"u"&&s.length>0&&n.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},yc=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,hg=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${yc("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${yc("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",mg=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",fg=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),n=e.length===0?s:e.slice();return r.length>0?(r.forEach((o,i)=>{s[o]=n[i],s[i+t]=n[r.length+i]}),s):n},_g=(e,r,t,s)=>{let n=[];if(t.length>0)if(s.length>0){if(e.forEach(o=>n.push(o)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((o,i)=>n[o]=t[i])}else t.forEach(o=>n.push(o));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((o,i)=>Math.round(o*r[i]))}return n},gg=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(o=>r[o]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(o=>r[o]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=e.slice();return t.axes.length>0?(t.axes.forEach(o=>r[o]=s),t.axes.forEach(o=>n[o]=Math.round(e[o]*r[o]))):(r.fill(s,0,r.length),n.forEach((o,i)=>n[i]=Math.round(o*r[i]))),n},wg=(e,r,t,s,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${et("uniforms.scales","i",s)};
        var roi_low = ${et("uniforms.roi","i",n)};
        var roi_hi = ${et("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${et("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${et("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,yg=(e,r,t,s,n,o,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${et("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${et("uniforms.roi","i",o)};
          var roi_hi = ${et("uniforms.roi",`i + ${t.length}`,o)};
          var input_shape_i = ${et("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${et("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Mg=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${et("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Mc=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",bg=(e,r,t,s,n)=>{let[o,i,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Mc(e,l,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${i}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},vg=(e,r,t,s,n,o,i,a,l,c)=>{let p=t.length===2,[u,h]=p?[0,1]:[2,3],w=e.type.value,_=C=>{let F=C===u?"row":"col";return`
      fn ${F}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${w} {
        var output_index = ${r.indicesGet("output_indices",C)};
        var originalIdx: ${w} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[C]},
        ${s[C]}, ${t[C]}, ${o[C]}, ${o[C]} + ${t.length});
        var fractOriginalIdx: ${w} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[C]} - 1))) {
          return ${l};
        }
        var data: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${F}: ${w} = originalIdx + ${w}(i);
          if (${F} < 0 || ${F} >= ${t[C]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${F} = max(0, min(${F}, ${t[C]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",C,`u32(${F})`)};
          data[i + 1] = ${C===u?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${_(u)};
    ${_(h)};
  fn getCubicInterpolationCoefs(s: ${w}) -> array<${w}, 4> {
    var absS = abs(s);
    var coeffs: array<${w}, 4> = array<${w}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${w} = 1.0 - absS;
    var twoMinusAbsS: ${w} = 2.0 - absS;
    var onePlusAbsS: ${w} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${w}, 4>, coefs: array<${w}, 4>) -> ${w} {
    var coefsSum: ${w} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${w} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Tg=(e,r,t,s,n)=>{let[o,i,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Mc(e,c,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${i}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},xg=(e,r,t,s,n,o)=>{let i=e.dims,a=fg(o,r.axes,i.length),l=_g(i,s,n,r.axes),c=s.slice();s.length===0&&(c=i.map((g,$)=>g===0?1:l[$]/g),r.keepAspectRatioPolicy!=="stretch"&&(l=gg(i,c,r)));let p=Ze("output",e.dataType,l.length),u=Se("input",e.dataType,i.length),h=Me.size(l),w=i.length===l.length&&i.every((g,$)=>g===l[$]),_=r.coordinateTransformMode==="tf_crop_and_resize",C=r.extrapolationValue,F=u.type.value,T=g=>`
      ${w?"":`
      ${hg(r.coordinateTransformMode,F)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${Mg(u,i)};
              ${mg(r.nearestMode,t,F)};
              ${yg(u,p,i,l,c.length,a.length,_)};
              `;case"linear":return`
              ${wg(p,i,l,c.length,a.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${bg(u,p,i,_,C)}`;if(i.length===3||i.length===5)return`${Tg(u,p,i,_,C)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${vg(u,p,i,l,c,a,r.cubicCoeffA,_,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${g.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(u,p)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${w?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${u.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${u.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${n.length>0?n:""}|${a.length>0?a:""}|${w}|${r.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:c},{type:1,data:a},...tt(i,l)]})}},Eg=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},c0=(e,r)=>{let t=[],s=[],n=[],o=Eg(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");pg(e.inputs,r,o,t,s,n),e.compute(xg(e.inputs[0],r,o,t,s,n),{inputs:[0]})},u0=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,n=e.cubicCoeffA,o=e.excludeOutside!==0,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Ft({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:n,excludeOutside:o,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),Pg,Cg,p0,lT=je(()=>{ut(),gt(),Jt(),wt(),Pg=(e,r)=>{let[t,s,n,o]=e,{numHeads:i,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!Me.areEqual(s.dims,[])&&!Me.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!Me.areEqual(n.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=n.dims[0],u=Me.sizeFromDimension(t.dims,1)/c,h=a===0?n.dims[1]*2:u/i;if(a>h)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(h/2!==n.dims[1]&&a/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Cg=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:n,scale:o}=r,i=e[0].dims[0],a=Me.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],u=n===0?p*2:c/s,h=new Array(i,l,c/u,u-p),w=Me.computeStrides(h),_=[{type:1,data:o},{type:12,data:h},{type:12,data:w},...e[0].dims.length===3?new Array({type:12,data:[a,c,u,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,u,l*u,1]}):[],...tt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],C=F=>{let T=Se("input",e[0].dataType,e[0].dims.length),g=Se("position_ids",e[1].dataType,e[1].dims.length),$=Se("cos_cache",e[2].dataType,e[2].dims.length),P=Se("sin_cache",e[3].dataType,e[3].dims.length),y=Ze("output",e[0].dataType,e[0].dims.length);return F.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:w.length},{name:"input_output_strides",type:"u32",length:w.length}]),`
        ${F.declareVariables(T,g,$,P,y)}

        ${F.mainStart(bo)}
          let half_rotary_emb_dim = uniforms.${$.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${F.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${g.broadcastedIndicesToOffset("bsnh.xy",Ze("",g.type.tensor,2))};
            let position_id =
                u32(${g.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${T.getByOffset("i")} * ${$.get("position_id","bsnh[3]")} -
                ${T.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};
            ${y.setByOffset("i","re")}
            let im = ${T.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +
                ${T.getByOffset("j")} * ${$.get("position_id","bsnh[3]")};
            ${y.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${y.setByOffset("k",T.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ft({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:C,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Me.size(h)/bo)},programUniforms:_})}},p0=(e,r)=>{Pg(e.inputs,r),e.compute(Cg(e.inputs,r))}}),Sg,$g,h0,dT=je(()=>{ut(),gt(),wt(),Sg=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],o=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},$g=(e,r,t,s)=>{let n=r.simplified,o=e[0].dims,i=Me.size(o),a=o,l=i,c=o.slice(-1)[0],p=s?o.slice(0,-1).concat(1):[],u=!n&&e.length>3,h=e.length>4,w=s&&t>1,_=s&&t>2,C=t>3,F=64,T=Gt(c),g=[{type:12,data:l},{type:12,data:T},{type:12,data:c},{type:1,data:r.epsilon}],$=y=>{let M=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],E=[Se("x",e[0].dataType,e[0].dims,T),Se("skip",e[1].dataType,e[1].dims,T),Se("gamma",e[2].dataType,e[2].dims,T)];u&&E.push(Se("beta",e[3].dataType,e[3].dims,T)),h&&E.push(Se("bias",e[4].dataType,e[4].dims,T)),E.push(Ze("output",e[0].dataType,a,T)),w&&E.push(Ze("mean_output",1,p)),_&&E.push(Ze("inv_std_output",1,p)),C&&E.push(Ze("input_skip_bias_sum",e[0].dataType,a,T));let A=ur(e[0].dataType),B=ur(1,T);return`

      ${y.registerUniforms(M).declareVariables(...E)}
      var<workgroup> sum_shared : array<${B}, ${F}>;
      var<workgroup> sum_squared_shared : array<${B}, ${F}>;

      ${y.mainStart([F,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${F};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${F};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${F-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${h?"bias[offset1d + i]":A+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${C?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${yo(A,T,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${F};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Zs("sum",T)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Zs("square_sum",T)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${w?"mean_output[global_idx] = mean;":""}
        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${A}(mean)`}) *
            ${A}(inv_std_dev) * gamma[offset1d + i]
            ${u?"+ beta[offset1d + i]":""};
        }
      }`},P=[{dims:a,dataType:e[0].dataType}];return t>1&&P.push({dims:p,dataType:1}),t>2&&P.push({dims:p,dataType:1}),t>3&&P.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${T};${w};${_};${C}`,inputDependencies:e.map((y,M)=>"type")},getShaderSource:$,getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:g})}},h0=(e,r)=>{Sg(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute($g(e.inputs,r,e.outputCount,!1),{outputs:t})}}),kg,qi,Ag,bc,Ig,Fg,m0,f0,cT=je(()=>{ut(),gt(),Jt(),wt(),kg=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},qi=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Ag=(e,r)=>{if(e.length>1){let t=qi(e,1),s=qi(e,2),n=qi(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),Ft({starts:t,ends:s,axes:n})}else return r},bc=(e,r,t,s,n)=>{let o=e;return e<0&&(o+=t[s[r]]),n[r]<0?Math.max(0,Math.min(o,t[s[r]]-1)):Math.max(0,Math.min(o,t[s[r]]))},Ig=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${et("uniforms.input_shape","i",t.length)};
            let steps_i = ${et("uniforms.steps","i",t.length)};
            let signs_i = ${et("uniforms.signs","i",t.length)};
            let starts_i = ${et("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Fg=(e,r)=>{let t=e[0].dims,s=Me.size(t),n=r.axes.length>0?Me.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],o=qi(e,4);o.forEach(T=>T!==0||(()=>{throw new Error("step cannot be 0")})),o.length===0&&(o=Array(n.length).fill(1));let i=r.starts.map((T,g)=>bc(T,g,t,n,o)),a=r.ends.map((T,g)=>bc(T,g,t,n,o));if(n.length!==i.length||n.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==t.length)for(let T=0;T<t.length;++T)n.includes(T)||(i.splice(T,0,0),a.splice(T,0,t[T]),o.splice(T,0,1));let l=o.map(T=>Math.sign(T));o.forEach((T,g,$)=>{if(T<0){let P=(a[g]-i[g])/T,y=i[g],M=y+P*o[g];i[g]=M,a[g]=y,$[g]=-T}});let c=t.slice(0);n.forEach((T,g)=>{c[T]=Math.ceil((a[T]-i[T])/o[T])});let p={dims:c,dataType:e[0].dataType},u=Ze("output",e[0].dataType,c.length),h=Se("input",e[0].dataType,e[0].dims.length),w=Me.size(c),_=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:o.length}],C=[{type:12,data:w},{type:12,data:i},{type:6,data:l},{type:12,data:o},...tt(e[0].dims,c)],F=T=>`
      ${T.registerUniforms(_).declareVariables(h,u)}
        ${Ig(h,u,t)}
        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${u.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${u.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:F,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:C})}},m0=(e,r)=>{kg(e.inputs,r);let t=Ag(e.inputs,r);e.compute(Fg(e.inputs,t),{inputs:[0]})},f0=e=>{let r=e.starts,t=e.ends,s=e.axes;return Ft({starts:r,ends:t,axes:s})}}),Og,Dg,_0,g0,uT=je(()=>{ut(),gt(),Jt(),en(),wt(),Og=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Dg=(e,r)=>{let t=e.inputs[0],s=t.dims,n=Me.size(s),o=s.length,i=Me.normalizeAxis(r.axis,o),a=i<s.length-1,l,c=[];a?(c=Array.from({length:o},(E,A)=>A),c[i]=o-1,c[o-1]=i,l=e.compute(jr(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,u=p[o-1],h=n/u,w=Gt(u),_=u/w,C=64;h===1&&(C=256);let F=(E,A)=>A===4?`max(max(${E}.x, ${E}.y), max(${E}.z, ${E}.w))`:A===2?`max(${E}.x, ${E}.y)`:A===3?`max(max(${E}.x, ${E}.y), ${E}.z)`:E,T=Se("x",l.dataType,l.dims,w),g=Ze("result",l.dataType,l.dims,w),$=T.type.value,P=ur(l.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,y=E=>`
      var<workgroup> rowMaxShared : ${$};
      var<workgroup> rowSumShared : ${$};
      var<workgroup> threadShared : array<${$}, ${C}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${E.registerUniform("packedCols","i32").declareVariables(T,g)}
      ${E.mainStart(C)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${C};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${P}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${$}(${F("threadShared[0]",w)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${$}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${$}(${Zs("threadShared[0]",w)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,M=e.compute({name:"Softmax",shaderCache:{hint:`${w};${C}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:_}]}),getShaderSource:y},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(jr(M,c),{inputs:[M]})},_0=(e,r)=>{Og(e.inputs),Dg(e,r)},g0=e=>Ft({axis:e.axis})}),vc,Lg,zg,Bg,w0,pT=je(()=>{ut(),gt(),wt(),vc=e=>Array.from(e.getBigInt64Array(),Number),Lg=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(vc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},zg=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Bg=(e,r)=>{let t=e[0].dims,s=r??vc(e[1]),n=zg(t,s),o=Me.size(n),i=e[0].dataType,a=Se("input",i,t.length),l=Ze("output",i,n.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...tt(e[0].dims,n)]}),getShaderSource:c}},w0=e=>{Lg(e.inputs),e.compute(Bg(e.inputs),{inputs:[0]})}}),Rg,Ng,y0,hT=je(()=>{ut(),gt(),wt(),Rg=(e,r,t,s,n)=>{let o=Ze("output_data",n,t.length,4),i=Se("a_data",r[1].dataType,r[1].dims.length,4),a=Se("b_data",r[2].dataType,r[2].dims.length,4),l=Se("c_data",r[0].dataType,r[0].dims.length,4),c,p=(u,h,w)=>`select(${h}, ${u}, ${w})`;if(!s)c=o.setByOffset("global_idx",p(i.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let u=(h,w,_="")=>{let C=`a_data[index_a${w}][component_a${w}]`,F=`b_data[index_b${w}][component_b${w}]`,T=`bool(c_data[index_c${w}] & (0xffu << (component_c${w} * 8)))`;return`
            let output_indices${w} = ${o.offsetToIndices(`global_idx * 4u + ${w}u`)};
            let offset_a${w} = ${i.broadcastedIndicesToOffset(`output_indices${w}`,o)};
            let offset_b${w} = ${a.broadcastedIndicesToOffset(`output_indices${w}`,o)};
            let offset_c${w} = ${l.broadcastedIndicesToOffset(`output_indices${w}`,o)};
            let index_a${w} = offset_a${w} / 4u;
            let index_b${w} = offset_b${w} / 4u;
            let index_c${w} = offset_c${w} / 4u;
            let component_a${w} = offset_a${w} % 4u;
            let component_b${w} = offset_b${w} % 4u;
            let component_c${w} = offset_c${w} % 4u;
            ${h}[${w}] = ${_}(${p(C,F,T)});
          `};n===9?c=`
            var data = vec4<u32>(0);
            ${u("data",0,"u32")}
            ${u("data",1,"u32")}
            ${u("data",2,"u32")}
            ${u("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${u("output_data[global_idx]",0)}
            ${u("output_data[global_idx]",1)}
            ${u("output_data[global_idx]",2)}
            ${u("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,a,o)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},Ng=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,n=e[1].dataType,o=!(Me.areEqual(r,t)&&Me.areEqual(t,s)),i=r,a=Me.size(r);if(o){let c=Mo.calcShape(Mo.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");i=c,a=Me.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>Rg(c,e,i,o,n),getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...tt(s,r,t,i)]})}},y0=e=>{e.compute(Ng(e.inputs))}}),M0,mT=je(()=>{Cv(),cu(),Sv(),$v(),kv(),Av(),Iv(),zv(),Rv(),Nv(),jv(),Vv(),Uv(),Wv(),Gv(),Kv(),Hv(),qv(),Qv(),Xv(),Jv(),Yv(),Zv(),eT(),tT(),NM(),rT(),sT(),nT(),oT(),iT(),du(),aT(),lT(),dT(),cT(),uT(),UM(),pT(),en(),uu(),hT(),M0=new Map([["Abs",[my]],["Acos",[fy]],["Acosh",[_y]],["Add",[Xy]],["ArgMax",[cy,Bc]],["ArgMin",[dy,Bc]],["Asin",[gy]],["Asinh",[wy]],["Atan",[yy]],["Atanh",[My]],["Attention",[uy]],["AveragePool",[YM,JM]],["BatchNormalization",[py]],["BiasAdd",[hy]],["BiasSplitGelu",[Qy]],["Cast",[vy,by]],["Ceil",[xy]],["Clip",[Ty]],["Concat",[iM,aM]],["Conv",[Wc,Uc]],["ConvTranspose",[gM,_M]],["Cos",[Ey]],["Cosh",[Py]],["CumSum",[wM,yM]],["DepthToSpace",[MM,bM]],["DequantizeLinear",[o0,i0]],["Div",[Jy]],["Einsum",[vM,TM]],["Elu",[Cy,Zi]],["Equal",[Yy]],["Erf",[Sy]],["Exp",[$y]],["Expand",[xM]],["FastGelu",[EM]],["Floor",[ky]],["FusedConv",[Wc,Uc]],["Gather",[CM,PM]],["GatherElements",[FM,IM]],["GatherBlockQuantized",[kM,AM]],["GatherND",[SM,$M]],["Gelu",[Ay]],["Gemm",[DM,OM]],["GlobalAveragePool",[e0,ZM]],["GlobalMaxPool",[n0,s0]],["Greater",[rM]],["GreaterOrEqual",[nM]],["GridSample",[LM,zM]],["GroupQueryAttention",[WM]],["HardSigmoid",[Ry,By]],["InstanceNormalization",[GM]],["LayerNormalization",[KM]],["LeakyRelu",[Iy,Zi]],["Less",[sM]],["LessOrEqual",[oM]],["Log",[Hy]],["MatMul",[HM]],["MatMulNBits",[qM,QM]],["MaxPool",[t0,r0]],["Mul",[Zy]],["MultiHeadAttention",[RM,BM]],["Neg",[Oy]],["Not",[Fy]],["Pad",[XM]],["Pow",[eM]],["QuickGelu",[qy,Zi]],["Range",[a0]],["Reciprocal",[Dy]],["ReduceMin",[ny]],["ReduceMean",[Zw]],["ReduceMax",[sy]],["ReduceSum",[iy]],["ReduceProd",[oy]],["ReduceL1",[ey]],["ReduceL2",[ty]],["ReduceLogSum",[ly]],["ReduceLogSumExp",[ry]],["ReduceSumSquare",[ay]],["Relu",[Ly]],["Resize",[c0,u0]],["RotaryEmbedding",[p0]],["ScatterND",[d0,l0]],["Sigmoid",[zy]],["Sin",[Ny]],["Sinh",[jy]],["Slice",[m0,f0]],["SkipLayerNormalization",[h0]],["Split",[jM,VM]],["Sqrt",[Vy]],["Softmax",[_0,g0]],["Sub",[tM]],["Tan",[Uy]],["Tanh",[Wy]],["ThresholdedRelu",[Ky,Zi]],["Tile",[w0]],["Transpose",[jw,Vw]],["Where",[y0]]])}),b0,fT=je(()=>{ds(),As(),wt(),b0=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,n){ls(e.programInfo.name);let o=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});n&&a.push({binding:a.length,resource:n});let l=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Jr(e.programInfo.name)}dispose(){}build(e,r){ls(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let n=Nw(r,this.backend.device.limits),o=e.getShaderSource(n),i=`${s.join(`
`)}
${n.additionalImplementations}
${o}`,a=t.createShaderModule({code:i,label:e.name});Ct("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return Jr(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&t<=n&&s<=n)return[r,t,s];let o=r*t*s,i=Math.ceil(Math.sqrt(o));if(i>n){if(i=Math.ceil(Math.cbrt(o)),i>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),jg,Vg,Ug,v0,_T=je(()=>{ds(),ut(),As(),Ow(),Ev(),mT(),fT(),jg=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let n=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${n}`);break}case"rank":{let o=e[s].dims.length;t.push(`${n};${o}`);break}case"dims":{let o=e[s].dims.join(",");t.push(`${n};${o}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},Vg=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${jg(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},Ug=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},v0=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},n=o=>r.features.has(o)&&t.push(o)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new Ug(r.info||await r.requestAdapterInfo()),this.gpuDataManager=Dw(this),this.programManager=new b0(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ou(e.logLevel,!!e.debug),this.device.onuncapturederror=o=>{o.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${o.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;ls(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let s=0;s<r.length/2;s++){let n=t[s],o=n.kernelId,i=this.kernels.get(o),a=i.kernelType,l=i.kernelName,c=n.programName,p=n.inputTensorViews,u=n.outputTensorViews,h=r[s*2],w=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=h);let _=Number(h-this.queryTimeBase),C=Number(w-this.queryTimeBase);if(!Number.isSafeInteger(_)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(F=>({dims:F.dims,dataType:Cn(F.dataType)})),outputsMetadata:u.map(F=>({dims:F.dims,dataType:Cn(F.dataType)})),kernelId:o,kernelType:a,kernelName:l,programName:c,startTime:_,endTime:C});else{let F="";p.forEach((g,$)=>{F+=`input[${$}]: [${g.dims}] | ${Cn(g.dataType)}, `});let T="";u.forEach((g,$)=>{T+=`output[${$}]: [${g.dims}] | ${Cn(g.dataType)}, `}),console.log(`[profiling] kernel "${o}|${a}|${l}|${c}" ${F}${T}execution time: ${C-_} ns`)}ra("GPU",`${c}::${h}::${w}`)}e.unmap(),this.pendingQueries.delete(e)}),Jr()}run(e,r,t,s,n,o){ls(e.name);let i=[];for(let g=0;g<r.length;++g){let $=r[g].data;if($===0)continue;let P=this.gpuDataManager.get($);if(!P)throw new Error(`no GPU data for input: ${$}`);i.push(P)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?a.map((g,$)=>$):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let u=[],h=[];for(let g=0;g<a.length;++g){if(!Number.isInteger(p[g])||p[g]<-3||p[g]>=o)throw new Error(`Invalid output index: ${p[g]}`);if(p[g]===-3)continue;let $=p[g]===-1,P=p[g]===-2,y=$||P?n(a[g].dataType,a[g].dims):s(p[g],a[g].dataType,a[g].dims);if(u.push(y),y.data===0)continue;let M=this.gpuDataManager.get(y.data);if(!M)throw new Error(`no GPU data for output: ${y.data}`);if($&&this.temporaryData.push(M),P){let E=this.kernelPersistentData.get(this.currentKernelId);E||(E=[],this.kernelPersistentData.set(this.currentKernelId,E)),E.push(M)}h.push(M)}if(i.length!==r.length||h.length!==u.length){if(h.length===0)return Jr(e.name),u;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let w;if(c){let g=0,$=[];c.forEach(E=>{let A=typeof E.data=="number"?[E.data]:E.data;if(A.length===0)return;let B=E.type===10?2:4,N,Q;E.type===10?(Q=A.length>4?16:A.length>2?8:A.length*B,N=A.length>4?16:B*A.length):(Q=A.length<=2?A.length*B:16,N=16),g=Math.ceil(g/Q)*Q,$.push(g);let H=E.type===10?8:4;g+=A.length>4?Math.ceil(A.length/H)*N:A.length*B});let P=16;g=Math.ceil(g/P)*P;let y=new ArrayBuffer(g);c.forEach((E,A)=>{let B=$[A],N=typeof E.data=="number"?[E.data]:E.data;if(E.type===6)new Int32Array(y,B,N.length).set(N);else if(E.type===12)new Uint32Array(y,B,N.length).set(N);else if(E.type===10)new Uint16Array(y,B,N.length).set(N);else if(E.type===1)new Float32Array(y,B,N.length).set(N);else throw new Error(`Unsupported uniform type: ${Cn(E.type)}`)});let M=this.gpuDataManager.create(g,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,y,0,g),this.gpuDataManager.release(M.id),w={offset:0,size:g,buffer:M.buffer}}let _=this.programManager.normalizeDispatchGroupSize(l),C=_[1]===1&&_[2]===1,F=Vg(e,r,C),T=this.programManager.getArtifact(F);if(T||(T=this.programManager.build(e,_),this.programManager.setArtifact(F,T),Ct("info",()=>`[artifact] key: ${F}, programName: ${e.name}`)),c&&T.uniformVariablesInfo){if(c.length!==T.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${T.uniformVariablesInfo.length}, got ${c.length} in program "${T.programInfo.name}".`);for(let g=0;g<c.length;g++){let $=c[g],P=$.type,y=typeof $.data=="number"?1:$.data.length,[M,E]=T.uniformVariablesInfo[g];if(P!==M||y!==E)throw new Error(`Uniform variable ${g} mismatch: expect type ${M} with size ${E}, got type ${P} with size ${y} in program "${T.programInfo.name}".`)}}if(Ct("info",()=>`[ProgramManager] run "${e.name}" (key=${F}) with ${_[0]}x${_[1]}x${_[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let g={kernelId:this.currentKernelId,programName:T.programInfo.name,inputTensorViews:r,outputTensorViews:u};this.pendingKernels.push(g),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(g)}return this.programManager.run(T,i,h,_,w),Jr(e.name),u}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let n=M0.get(e);if(!n)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:s,kernelEntry:n[0],attributes:[n[1],t]};this.kernels.set(r,o)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let n=s.kernelType,o=s.kernelName,i=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ct("info",()=>`[WebGPU] Start to run kernel "[${n}] ${o}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${o}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${n}] ${o}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let n=this.sessionExternalDataMapping.get(e);n||(n=new Map,this.sessionExternalDataMapping.set(e,n));let o=n.get(r),i=this.gpuDataManager.registerExternalBuffer(t,s,o);return n.set(r,[i,t]),i}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Dc(this,e,r);return iu(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ct("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ct("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ct("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let n=this.getComputePassEncoder(),o=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(o.computePipeline),n.setBindGroup(0,o.bindGroup),n.dispatchWorkgroups(...o.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),Wg,Tc,Gg,xc,Ec,Pc,Kg,T0,gT=je(()=>{As(),Wg=1,Tc=()=>Wg++,Gg=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),xc=(e,r)=>{let t=Gg.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,n)=>s*n)*t/8):0},Ec=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return xc(this.dataType,this.tensorShape)}destroy(){Ct("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,n)=>s===t[n])}},Pc=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let n=this.tensorManager.getMLContext(e);if(this.wrapper){if(this.wrapper.canReuseTensor(n,r,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==xc(r,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,r,t,o,!0,!0),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper)if(e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else Ct("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},Kg=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=Tc();return this.tensorTrackersById.set(e,new Pc(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,n){Ct("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${n}}`);let o=this.tensorTrackersById.get(r);if(!o)throw new Error("Tensor not found.");return o.ensureTensor(e,t,s,n)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){Ct("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r?.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let n=this.getMLContext(e),o=Tc(),i=new Ec({sessionId:e,context:n,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(o,new Pc(this,i)),this.externalTensors.add(i),o}async getCachedTensor(e,r,t,s,n,o){let i=this.getMLContext(e);for(let[l,c]of this.freeTensors.entries())if(c.canReuseTensor(i,r,t)){Ct("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let p=this.freeTensors.splice(l,1)[0];return p.sessionId=e,p}Ct("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let a=await i.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:n,readable:o});return new Ec({sessionId:e,context:i,tensor:a,dataType:r,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},T0=(...e)=>new Kg(...e)}),Rl,Hg,x0,wT=je(()=>{ut(),Fn(),Ow(),gT(),As(),Rl=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Hg=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((n,o)=>n===s[o]&&e[n]===r[n])},x0=class{constructor(e){this.tensorManager=T0(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,ou(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Ct("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Ct("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)Ct("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>Hg(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(n=>n.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Ct("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,n){let o=Rl.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,o,s,n)}async createTemporaryTensor(e,r,t){Ct("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=Rl.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,n,s,t,!1);let o=this.temporarySessionTensorIds.get(e);return o?o.push(n):this.temporarySessionTensorIds.set(e,[n]),n}uploadTensor(e,r){if(!cr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ct("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return iu(t,r)}}registerMLTensor(e,r,t,s){let n=Rl.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let o=this.tensorManager.registerTensor(e,r,n,s);return Ct("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${n}, dimensions: ${s}} -> {tensorId: ${o}}`),o}registerMLConstant(e,r,t,s,n,o){if(!o)throw new Error("External mounted files are not available.");let i=e;e.startsWith("./")&&(i=e.substring(2));let a=o.get(i);if(!a)throw new Error(`File with name ${i} not found in preloaded files.`);if(r+t>a.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let l=a.slice(r,r+t).buffer,c;switch(n.dataType){case"float32":c=new Float32Array(l);break;case"float16":c=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(l):new Uint16Array(l);break;case"int32":c=new Int32Array(l);break;case"uint32":c=new Uint32Array(l);break;case"int64":c=new BigInt64Array(l);break;case"uint64":c=new BigUint64Array(l);break;case"int8":c=new Int8Array(l);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(l);break;default:throw new Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return Ct("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}}`),s.constant(n,c)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}flush(){}}}),E0={};na(E0,{init:()=>P0});var Nl,qg,P0,yT=je(()=>{ut(),_T(),As(),gt(),wT(),Nl=class C0{constructor(r,t,s,n){this.module=r,this.dataType=t,this.data=s,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=Me.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=Me.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=Me.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=Me.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(Me.size(r)!==Me.size(this.dims))throw new Error("Invalid new shape");return new C0(this.module,this.dataType,this.data,r)}},qg=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,n=t/e.PTR_SIZE,o=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*n++,o));let i=Number(e.getValue(s*n++,o));this.outputCount=Number(e.getValue(s*n++,o)),this.customDataOffset=Number(e.getValue(s*n++,"*")),this.customDataSize=Number(e.getValue(s*n++,o));let a=[];for(let l=0;l<i;l++){let c=Number(e.getValue(s*n++,o)),p=Number(e.getValue(s*n++,"*")),u=Number(e.getValue(s*n++,o)),h=[];for(let w=0;w<u;w++)h.push(Number(e.getValue(s*n++,o)));a.push(new Nl(e,c,p,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){let t=r?.inputs?.map(i=>typeof i=="number"?this.inputs[i]:i)??this.inputs,s=r?.outputs??[],n=(i,a,l)=>new Nl(this.module,a,this.output(i,l),l),o=(i,a)=>{let l=Sn(i,a);if(!l)throw new Error(`Unsupported data type: ${i}`);let c=l>0?this.backend.gpuDataManager.create(l).id:0;return new Nl(this.module,i,c,a)};return this.backend.run(e,t,s,n,o,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,n=s===4?"i32":"i64",o=this.module.stackAlloc((1+r.length)*s);this.module.setValue(o,r.length,n);for(let i=0;i<r.length;i++)this.module.setValue(o+s*(i+1),r[i],n);return this.module._JsepOutput(this.opKernelContext,e,o)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},P0=async(e,r,t,s)=>{let n=r.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let o=new v0;await o.initialize(t,s),n("webgpu",[o,i=>o.alloc(Number(i)),i=>o.free(i),(i,a,l,c=!1)=>{if(c)Ct("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(i)}, dst=${Number(a)}, size=${Number(l)}`),o.memcpy(Number(i),Number(a));else{Ct("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(i)}, gpuDataId=${Number(a)}, size=${Number(l)}`);let p=r.HEAPU8.subarray(Number(i>>>0),Number(i>>>0)+Number(l));o.upload(Number(a),p)}},async(i,a,l)=>{Ct("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${a}, size=${l}`),await o.download(Number(i),()=>r.HEAPU8.subarray(Number(a)>>>0,Number(a+l)>>>0))},(i,a,l)=>o.createKernel(i,Number(a),l,r.UTF8ToString(r._JsepGetNodeName(Number(a)))),i=>o.releaseKernel(i),(i,a,l,c)=>{Ct("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${l}, kernel=${i}, contextDataOffset=${a}`);let p=new qg(r,o,Number(a));return o.computeKernel(Number(i),p,c)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let o=new x0(t);n("webnn",[o,()=>o.reserveTensorId(),i=>o.releaseTensorId(i),async(i,a,l,c,p)=>o.ensureTensor(i,a,l,c,p),(i,a)=>{o.uploadTensor(i,a)},async(i,a)=>o.downloadTensor(i,a)])}}}),Qg,gu,wu,Js,Xg,Zl,yu,Mu,Cc,bu,vu,Tu,S0=je(()=>{Tv(),xv(),ut(),Fn(),eu(),Fw(),Qg=(e,r)=>{cr()._OrtInit(e,r)!==0&&kt("Can't initialize onnxruntime.")},gu=async e=>{Qg(e.wasm.numThreads,Ql(e.logLevel))},wu=async(e,r)=>{{let t=(yT(),Hl(E0)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let o=e.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:o}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",cr(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",cr(),e)}}},Js=new Map,Xg=e=>{let r=cr(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,n,n+s)!==0&&kt("Can't get session input/output count.");let o=s===4?"i32":"i64";return[Number(r.getValue(n,o)),Number(r.getValue(n+s,o))]}finally{r.stackRestore(t)}},Zl=e=>{let r=cr(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},yu=async(e,r)=>{let t,s,n=cr();Array.isArray(e)?[t,s]=e:e.buffer===n.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=Zl(e);let o=0,i=0,a=0,l=[],c=[],p=[];try{if([i,l]=Iw(r),r?.externalData&&n.mountExternalData){let g=[];for(let $ of r.externalData){let P=typeof $=="string"?$:$.path;g.push(nu(typeof $=="string"?$:$.data).then(y=>{n.mountExternalData(P,y)}))}await Promise.all(g)}for(let g of r?.executionProviders??[])if((typeof g=="string"?g:g.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,typeof g!="string"){let $=g,P=$?.context,y=$?.gpuDevice,M=$?.deviceType,E=$?.powerPreference;P?n.currentContext=P:y?n.currentContext=await n.jsepCreateMLContext(y):n.currentContext=await n.jsepCreateMLContext({deviceType:M,powerPreference:E})}else n.currentContext=await n.jsepCreateMLContext();break}o=await n._OrtCreateSession(t,s,i),o===0&&kt("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.jsepRegisterMLContext(o,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[u,h]=Xg(o),w=!!r?.enableGraphCapture,_=[],C=[],F=[];for(let g=0;g<u;g++){let $=n._OrtGetInputName(o,g);$===0&&kt("Can't get an input name."),c.push($),_.push(n.UTF8ToString($))}for(let g=0;g<h;g++){let $=n._OrtGetOutputName(o,g);$===0&&kt("Can't get an output name."),p.push($);let P=n.UTF8ToString($);C.push(P);{if(w&&r?.preferredOutputLocation===void 0){F.push("gpu-buffer");continue}let y=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[P]??"cpu";if(y!=="cpu"&&y!=="cpu-pinned"&&y!=="gpu-buffer"&&y!=="ml-tensor")throw new Error(`Not supported preferred output location: ${y}.`);if(w&&y!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${y}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);F.push(y)}}let T=null;return F.some(g=>g==="gpu-buffer"||g==="ml-tensor")&&(a=n._OrtCreateBinding(o),a===0&&kt("Can't create IO binding."),T={handle:a,outputPreferredLocations:F,outputPreferredLocationsEncoded:F.map(g=>Oc(g))}),Js.set(o,[o,c,p,T,w,!1]),[o,_,C]}catch(u){throw c.forEach(h=>n._OrtFree(h)),p.forEach(h=>n._OrtFree(h)),a!==0&&n._OrtReleaseBinding(a)!==0&&kt("Can't release IO binding."),o!==0&&n._OrtReleaseSession(o)!==0&&kt("Can't release session."),u}finally{n._free(t),i!==0&&n._OrtReleaseSessionOptions(i)!==0&&kt("Can't release session options."),l.forEach(u=>n._free(u)),n.unmountExternalData?.()}},Mu=e=>{let r=cr(),t=Js.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,n,o,i,a]=t;i&&(a&&r._OrtClearBoundOutputs(i.handle)!==0&&kt("Can't clear bound outputs."),r._OrtReleaseBinding(i.handle)!==0&&kt("Can't release IO binding.")),r.jsepOnReleaseSession?.(e),n.forEach(l=>r._OrtFree(l)),o.forEach(l=>r._OrtFree(l)),r._OrtReleaseSession(s)!==0&&kt("Can't release session."),Js.delete(e)},Cc=async(e,r,t,s,n,o=!1)=>{if(!e){r.push(0);return}let i=cr(),a=i.PTR_SIZE,l=e[0],c=e[1],p=e[3],u=p,h,w;if(l==="string"&&(p==="gpu-buffer"||p==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&p!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(p==="gpu-buffer"){let F=e[2].gpuBuffer;w=Sn(go(l),c);let T=i.jsepRegisterBuffer;if(!T)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');h=T(s,n,F,w)}else if(p==="ml-tensor"){let F=e[2].mlTensor;w=Sn(go(l),c);let T=i.jsepRegisterMLTensor;if(!T)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');h=T(s,F,go(l),c)}else{let F=e[2];if(Array.isArray(F)){w=a*F.length,h=i._malloc(w),t.push(h);for(let T=0;T<F.length;T++){if(typeof F[T]!="string")throw new TypeError(`tensor data at index ${T} is not a string`);i.setValue(h+T*a,Mr(F[T],t),"*")}}else{let T=i.jsepIsGraphInput;if(l!=="string"&&T){let g=i._OrtGetInputName(s,n),$=i.UTF8ToString(g);if(T(s,$)){let P=go(l);w=Sn(P,c),u="ml-tensor";let y=i.jsepCreateTemporaryTensor,M=i.jsepUploadTensor;if(!y||!M)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let E=await y(s,P,c);M(E,new Uint8Array(F.buffer,F.byteOffset,F.byteLength)),h=E}else w=F.byteLength,h=i._malloc(w),t.push(h),i.HEAPU8.set(new Uint8Array(F.buffer,F.byteOffset,w),h)}else w=F.byteLength,h=i._malloc(w),t.push(h),i.HEAPU8.set(new Uint8Array(F.buffer,F.byteOffset,w),h)}}let _=i.stackSave(),C=i.stackAlloc(4*c.length);try{c.forEach((T,g)=>i.setValue(C+g*a,T,a===4?"i32":"i64"));let F=i._OrtCreateTensor(go(l),h,w,C,c.length,Oc(u));F===0&&kt(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(F)}finally{i.stackRestore(_)}},bu=async(e,r,t,s,n,o)=>{let i=cr(),a=i.PTR_SIZE,l=Js.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],u=l[2],h=l[3],w=l[4],_=l[5],C=r.length,F=s.length,T=0,g=[],$=[],P=[],y=[],M=i.stackSave(),E=i.stackAlloc(C*a),A=i.stackAlloc(C*a),B=i.stackAlloc(F*a),N=i.stackAlloc(F*a);try{[T,g]=Aw(o);for(let z=0;z<C;z++)await Cc(t[z],$,y,e,r[z],w);for(let z=0;z<F;z++)await Cc(n[z],P,y,e,C+s[z],w);for(let z=0;z<C;z++)i.setValue(E+z*a,$[z],"*"),i.setValue(A+z*a,p[r[z]],"*");for(let z=0;z<F;z++)i.setValue(B+z*a,P[z],"*"),i.setValue(N+z*a,u[s[z]],"*");if(h&&!_){let{handle:z,outputPreferredLocations:Z,outputPreferredLocationsEncoded:q}=h;if(p.length!==C)throw new Error(`input count from feeds (${C}) is expected to be always equal to model's input count (${p.length}).`);for(let X=0;X<C;X++){let se=r[X];await i._OrtBindInput(z,p[se],$[X])!==0&&kt(`Can't bind input[${X}] for session=${e}.`)}for(let X=0;X<F;X++){let se=s[X];n[X]?.[3]?i._OrtBindOutput(z,u[se],P[X],0)!==0&&kt(`Can't bind pre-allocated output[${X}] for session=${e}.`):i._OrtBindOutput(z,u[se],0,q[se])!==0&&kt(`Can't bind output[${X}] to ${Z[X]} for session=${e}.`)}Js.set(e,[c,p,u,h,w,!0])}i.jsepOnRunStart?.(c);let Q;h?Q=await i._OrtRunWithBinding(c,h.handle,F,B,T):Q=await i._OrtRun(c,A,E,C,N,F,B,T),Q!==0&&kt("failed to call OrtRun().");let H=[];for(let z=0;z<F;z++){let Z=Number(i.getValue(B+z*a,"*"));if(Z===P[z]){H.push(n[z]);continue}let q=i.stackSave(),X=i.stackAlloc(4*a),se=!1,ne,ae=0;try{i._OrtGetTensorData(Z,X,X+a,X+2*a,X+3*a)!==0&&kt(`Can't access output tensor data on index ${z}.`);let pe=a===4?"i32":"i64",V=Number(i.getValue(X,pe));ae=i.getValue(X+a,"*");let L=i.getValue(X+a*2,"*"),O=Number(i.getValue(X+a*3,pe)),J=[];for(let ue=0;ue<O;ue++)J.push(Number(i.getValue(L+ue*a,pe)));i._OrtFree(L)!==0&&kt("Can't free memory for tensor dims.");let ce=J.reduce((ue,Ee)=>ue*Ee,1);ne=Cn(V);let be=h?.outputPreferredLocations[s[z]];if(ne==="string"){if(be==="gpu-buffer"||be==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let ue=[];for(let Ee=0;Ee<ce;Ee++){let Ne=i.getValue(ae+Ee*a,"*"),ye=i.getValue(ae+(Ee+1)*a,"*"),K=Ee===ce-1?void 0:ye-Ne;ue.push(i.UTF8ToString(Ne,K))}H.push([ne,J,ue,"cpu"])}else if(be==="gpu-buffer"&&ce>0){let ue=i.jsepGetBuffer;if(!ue)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Ee=ue(ae),Ne=Sn(V,ce);if(Ne===void 0||!ru(ne))throw new Error(`Unsupported data type: ${ne}`);se=!0,H.push([ne,J,{gpuBuffer:Ee,download:i.jsepCreateDownloader(Ee,Ne,ne),dispose:()=>{i._OrtReleaseTensor(Z)!==0&&kt("Can't release tensor.")}},"gpu-buffer"])}else if(be==="ml-tensor"&&ce>0){let ue=i.jsepEnsureTensor;if(!ue)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Sn(V,ce)===void 0||!su(ne))throw new Error(`Unsupported data type: ${ne}`);let Ee=await ue(e,ae,V,J,!1);se=!0,H.push([ne,J,{mlTensor:Ee,download:i.jsepCreateMLTensorDownloader(ae,ne),dispose:()=>{i.jsepReleaseTensorId(ae),i._OrtReleaseTensor(Z)}},"ml-tensor"])}else{let ue=tu(ne),Ee=new ue(ce);new Uint8Array(Ee.buffer,Ee.byteOffset,Ee.byteLength).set(i.HEAPU8.subarray(ae,ae+Ee.byteLength)),H.push([ne,J,Ee,"cpu"])}}finally{i.stackRestore(q),ne==="string"&&ae&&i._free(ae),se||i._OrtReleaseTensor(Z),i.jsepOnRunEnd?.(c)}}return h&&!w&&(i._OrtClearBoundOutputs(h.handle)!==0&&kt("Can't clear bound outputs."),Js.set(e,[c,p,u,h,w,!1])),H}finally{i.stackRestore(M),$.forEach(Q=>i._OrtReleaseTensor(Q)),P.forEach(Q=>i._OrtReleaseTensor(Q)),y.forEach(Q=>i._free(Q)),T!==0&&i._OrtReleaseRunOptions(T),g.forEach(Q=>i._free(Q))}},vu=e=>{let r=cr(),t=Js.get(e);if(!t)throw new Error("invalid session id");let s=t[0],n=r._OrtEndProfiling(s);n===0&&kt("Can't get an profile file name."),r._OrtFree(n)},Tu=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),Ys,qr,_o,Qi,Xi,jl,Sc,Vl,Tn,xn,Jg,$0,k0,A0,I0,F0,O0,D0,L0=je(()=>{ds(),S0(),Fn(),Yc(),Ys=()=>!!jt.wasm.proxy&&typeof document<"u",_o=!1,Qi=!1,Xi=!1,Vl=new Map,Tn=(e,r)=>{let t=Vl.get(e);t?t.push(r):Vl.set(e,[r])},xn=()=>{if(_o||!Qi||Xi||!qr)throw new Error("worker not ready")},Jg=e=>{switch(e.data.type){case"init-wasm":_o=!1,e.data.err?(Xi=!0,Sc[1](e.data.err)):(Qi=!0,Sc[0]()),jl&&(URL.revokeObjectURL(jl),jl=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=Vl.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},$0=async()=>{if(!Qi){if(_o)throw new Error("multiple calls to 'initWasm()' detected.");if(Xi)throw new Error("previous call to 'initWasm()' failed.");if(_o=!0,Ys())return new Promise((e,r)=>{qr?.terminate(),$w().then(([t,s])=>{try{qr=s,qr.onerror=o=>r(o),qr.onmessage=Jg,Sc=[e,r];let n={type:"init-wasm",in:jt};!n.in.wasm.wasmPaths&&(t||Fc)&&(n.in.wasm.wasmPaths={wasm:new URL("/_astro/ort-wasm-simd-threaded.jsep-BAR87mbD.wasm",import.meta.url).href}),qr.postMessage(n),jl=t}catch(n){r(n)}},r)});try{await Zc(jt.wasm),await gu(jt),Qi=!0}catch(e){throw Xi=!0,e}finally{_o=!1}}},k0=async e=>{if(Ys())return xn(),new Promise((r,t)=>{Tn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:jt}};qr.postMessage(s)});await wu(jt,e)},A0=async e=>Ys()?(xn(),new Promise((r,t)=>{Tn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};qr.postMessage(s,[e.buffer])})):Zl(e),I0=async(e,r)=>{if(Ys()){if(r?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return xn(),new Promise((t,s)=>{Tn("create",[t,s]);let n={type:"create",in:{model:e,options:{...r}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),qr.postMessage(n,o)})}else return yu(e,r)},F0=async e=>{if(Ys())return xn(),new Promise((r,t)=>{Tn("release",[r,t]);let s={type:"release",in:e};qr.postMessage(s)});Mu(e)},O0=async(e,r,t,s,n,o)=>{if(Ys()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return xn(),new Promise((i,a)=>{Tn("run",[i,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:o}};qr.postMessage(c,Tu(l))})}else return bu(e,r,t,s,n,o)},D0=async e=>{if(Ys())return xn(),new Promise((r,t)=>{Tn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};qr.postMessage(s)});vu(e)}}),$c,Yg,z0,MT=je(()=>{ds(),L0(),ut(),Jc(),Fw(),$c=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},Yg=e=>{switch(e[3]){case"cpu":return new is(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!ru(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:n}=e[2];return is.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:n})}case"ml-tensor":{let r=e[0];if(!su(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:n}=e[2];return is.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},z0=class{async fetchModelAndCopyToWasmMemory(e){return A0(await nu(e))}async loadModel(e,r){ls();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await I0(t,r),Jr()}async dispose(){return F0(this.sessionId)}async run(e,r,t){ls();let s=[],n=[];Object.entries(e).forEach(u=>{let h=u[0],w=u[1],_=this.inputNames.indexOf(h);if(_===-1)throw new Error(`invalid input '${h}'`);s.push(w),n.push(_)});let o=[],i=[];Object.entries(r).forEach(u=>{let h=u[0],w=u[1],_=this.outputNames.indexOf(h);if(_===-1)throw new Error(`invalid output '${h}'`);o.push(w),i.push(_)});let a=s.map((u,h)=>$c(u,()=>`input "${this.inputNames[n[h]]}"`)),l=o.map((u,h)=>u?$c(u,()=>`output "${this.outputNames[i[h]]}"`):null),c=await O0(this.sessionId,n,a,i,l,t),p={};for(let u=0;u<c.length;u++)p[this.outputNames[i[u]]]=o[u]??Yg(c[u]);return Jr(),p}startProfiling(){}endProfiling(){D0(this.sessionId)}}}),B0={};na(B0,{OnnxruntimeWebAssemblyBackend:()=>Hc,initializeFlags:()=>Kc,wasmBackend:()=>R0});var Kc,Hc,R0,bT=je(()=>{ds(),L0(),MT(),Kc=()=>{if((typeof jt.wasm.initTimeout!="number"||jt.wasm.initTimeout<0)&&(jt.wasm.initTimeout=0),jt.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof jt.wasm.proxy!="boolean"&&(jt.wasm.proxy=!1),typeof jt.wasm.trace!="boolean"&&(jt.wasm.trace=!1),typeof jt.wasm.numThreads!="number"||!Number.isInteger(jt.wasm.numThreads)||jt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)jt.wasm.numThreads=1;else{let e=typeof navigator>"u"?iv("node:os").cpus().length:navigator.hardwareConcurrency;jt.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Hc=class{async init(e){Kc(),await $0(),await k0(e)}async createInferenceSessionHandler(e,r){let t=new z0;return await t.loadModel(e,r),Promise.resolve(t)}},R0=new Hc});ds();ds();ds();var vT="1.22.0-dev.20250306-ccf8fdd9ea",TT=Tw;{let e=(bT(),Hl(B0)).wasmBackend;$n("webgpu",e,5),$n("webnn",e,5),$n("cpu",e,10),$n("wasm",e,10)}Object.defineProperty(jt.versions,"web",{value:vT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xT=Object.freeze({__proto__:null,get InferenceSession(){return Xc},get TRACE(){return ra},get TRACE_FUNC_BEGIN(){return ls},get TRACE_FUNC_END(){return Jr},get Tensor(){return is},default:TT,get env(){return jt},get registerBackend(){return $n}}),kc={},ET={"onnxruntime-common":e=>{e.exports=rv},"onnxruntime-web":e=>{e.exports=xT},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>ke,Interpreter:()=>Ae,Template:()=>Ve,parse:()=>V,tokenize:()=>u});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),n=Object.freeze({set:s.Set,for:s.For,in:s.In,is:s.Is,if:s.If,else:s.Else,endif:s.EndIf,elif:s.ElseIf,endfor:s.EndFor,and:s.And,or:s.Or,not:s.Not,"not in":s.NotIn,macro:s.Macro,endmacro:s.EndMacro,true:s.BooleanLiteral,false:s.BooleanLiteral,none:s.NullLiteral,True:s.BooleanLiteral,False:s.BooleanLiteral,None:s.NullLiteral}),o=class{constructor(D,Y){this.value=D,this.type=Y}};function i(D){return/\w/.test(D)}function a(D){return/[0-9]/.test(D)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],c=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function p(D,Y={}){return D.endsWith(`
`)&&(D=D.slice(0,-1)),D=D.replace(/{#.*?#}/gs,"{##}"),Y.lstrip_blocks&&(D=D.replace(/^[ \t]*({[#%])/gm,"$1")),Y.trim_blocks&&(D=D.replace(/([#%]})\n/g,"$1")),D.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function u(D,Y={}){const R=[],te=p(D,Y);let oe=0;const Te=Ce=>{let De="";for(;Ce(te[oe]);){if(te[oe]==="\\"){if(++oe,oe>=te.length)throw new SyntaxError("Unexpected end of input");const we=te[oe++],Le=c.get(we);if(Le===void 0)throw new SyntaxError(`Unexpected escaped character: ${we}`);De+=Le;continue}if(De+=te[oe++],oe>=te.length)throw new SyntaxError("Unexpected end of input")}return De};e:for(;oe<te.length;){const Ce=R.at(-1)?.type;if(Ce===void 0||Ce===s.CloseStatement||Ce===s.CloseExpression){let we="";for(;oe<te.length&&!(te[oe]==="{"&&(te[oe+1]==="%"||te[oe+1]==="{"));)we+=te[oe++];if(we.length>0){R.push(new o(we,s.Text));continue}}Te(we=>/\s/.test(we));const De=te[oe];if(De==="-"||De==="+"){const we=R.at(-1)?.type;if(we===s.Text||we===void 0)throw new SyntaxError(`Unexpected character: ${De}`);switch(we){case s.Identifier:case s.NumericLiteral:case s.BooleanLiteral:case s.NullLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++oe;const Le=Te(a);R.push(new o(`${De}${Le}`,Le.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[we,Le]of l)if(te.slice(oe,oe+we.length)===we){R.push(new o(we,Le)),oe+=we.length;continue e}if(De==="'"||De==='"'){++oe;const we=Te(Le=>Le!==De);R.push(new o(we,s.StringLiteral)),++oe;continue}if(a(De)){const we=Te(a);R.push(new o(we,s.NumericLiteral));continue}if(i(De)){const we=Te(i),Le=Object.hasOwn(n,we)?n[we]:s.Identifier;Le===s.In&&R.at(-1)?.type===s.Not?(R.pop(),R.push(new o("not in",s.NotIn))):R.push(new o(we,Le));continue}throw new SyntaxError(`Unexpected character: ${De}`)}return R}var h=class{type="Statement"},w=class extends h{constructor(D){super(),this.body=D}type="Program"},_=class extends h{constructor(D,Y,R){super(),this.test=D,this.body=Y,this.alternate=R}type="If"},C=class extends h{constructor(D,Y,R,te){super(),this.loopvar=D,this.iterable=Y,this.body=R,this.defaultBlock=te}type="For"},F=class extends h{constructor(D,Y){super(),this.assignee=D,this.value=Y}type="Set"},T=class extends h{constructor(D,Y,R){super(),this.name=D,this.args=Y,this.body=R}type="Macro"},g=class extends h{type="Expression"},$=class extends g{constructor(D,Y,R){super(),this.object=D,this.property=Y,this.computed=R}type="MemberExpression"},P=class extends g{constructor(D,Y){super(),this.callee=D,this.args=Y}type="CallExpression"},y=class extends g{constructor(D){super(),this.value=D}type="Identifier"},M=class extends g{constructor(D){super(),this.value=D}type="Literal"},E=class extends M{type="NumericLiteral"},A=class extends M{type="StringLiteral"},B=class extends M{type="BooleanLiteral"},N=class extends M{type="NullLiteral"},Q=class extends M{type="ArrayLiteral"},H=class extends M{type="TupleLiteral"},z=class extends M{type="ObjectLiteral"},Z=class extends g{constructor(D,Y,R){super(),this.operator=D,this.left=Y,this.right=R}type="BinaryExpression"},q=class extends g{constructor(D,Y){super(),this.operand=D,this.filter=Y}type="FilterExpression"},X=class extends g{constructor(D,Y){super(),this.iterable=D,this.test=Y}type="SelectExpression"},se=class extends g{constructor(D,Y,R){super(),this.operand=D,this.negate=Y,this.test=R}type="TestExpression"},ne=class extends g{constructor(D,Y){super(),this.operator=D,this.argument=Y}type="UnaryExpression"},ae=class extends g{constructor(D=void 0,Y=void 0,R=void 0){super(),this.start=D,this.stop=Y,this.step=R}type="SliceExpression"},pe=class extends g{constructor(D,Y){super(),this.key=D,this.value=Y}type="KeywordArgumentExpression"};function V(D){const Y=new w([]);let R=0;function te(Re,Je){const Qe=D[R++];if(!Qe||Qe.type!==Re)throw new Error(`Parser Error: ${Je}. ${Qe.type} !== ${Re}.`);return Qe}function oe(){switch(D[R].type){case s.Text:return De();case s.OpenStatement:return we();case s.OpenExpression:return Le();default:throw new SyntaxError(`Unexpected token type: ${D[R].type}`)}}function Te(...Re){return R+Re.length<=D.length&&Re.some((Je,Qe)=>Je!==D[R+Qe].type)}function Ce(...Re){return R+Re.length<=D.length&&Re.every((Je,Qe)=>Je===D[R+Qe].type)}function De(){return new A(te(s.Text,"Expected text token").value)}function we(){te(s.OpenStatement,"Expected opening statement token");let Re;switch(D[R].type){case s.Set:++R,Re=ot(),te(s.CloseStatement,"Expected closing statement token");break;case s.If:++R,Re=lt(),te(s.OpenStatement,"Expected {% token"),te(s.EndIf,"Expected endif token"),te(s.CloseStatement,"Expected %} token");break;case s.Macro:++R,Re=Tt(),te(s.OpenStatement,"Expected {% token"),te(s.EndMacro,"Expected endmacro token"),te(s.CloseStatement,"Expected %} token");break;case s.For:++R,Re=rr(),te(s.OpenStatement,"Expected {% token"),te(s.EndFor,"Expected endfor token"),te(s.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${D[R].type}`)}return Re}function Le(){te(s.OpenExpression,"Expected opening expression token");const Re=Lt();return te(s.CloseExpression,"Expected closing expression token"),Re}function ot(){const Re=Lt();if(Ce(s.Equals)){++R;const Je=ot();return new F(Re,Je)}return Re}function lt(){const Re=Lt();te(s.CloseStatement,"Expected closing statement token");const Je=[],Qe=[];for(;!(D[R]?.type===s.OpenStatement&&(D[R+1]?.type===s.ElseIf||D[R+1]?.type===s.Else||D[R+1]?.type===s.EndIf));)Je.push(oe());if(D[R]?.type===s.OpenStatement&&D[R+1]?.type!==s.EndIf)if(++R,Ce(s.ElseIf))te(s.ElseIf,"Expected elseif token"),Qe.push(lt());else for(te(s.Else,"Expected else token"),te(s.CloseStatement,"Expected closing statement token");!(D[R]?.type===s.OpenStatement&&D[R+1]?.type===s.EndIf);)Qe.push(oe());return new _(Re,Je,Qe)}function Tt(){const Re=ir();if(Re.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Je=Ur();te(s.CloseStatement,"Expected closing statement token");const Qe=[];for(;Te(s.OpenStatement,s.EndMacro);)Qe.push(oe());return new T(Re,Je,Qe)}function Mt(Re=!1){const Je=Re?ir:Lt,Qe=[Je()],ar=Ce(s.Comma);for(;ar&&(++R,Qe.push(Je()),!!Ce(s.Comma)););return ar?new H(Qe):Qe[0]}function rr(){const Re=Mt(!0);if(!(Re instanceof y||Re instanceof H))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Re.type} instead`);te(s.In,"Expected `in` keyword following loop variable");const Je=Lt();te(s.CloseStatement,"Expected closing statement token");const Qe=[];for(;Te(s.OpenStatement,s.EndFor)&&Te(s.OpenStatement,s.Else);)Qe.push(oe());const ar=[];if(Ce(s.OpenStatement,s.Else))for(++R,++R,te(s.CloseStatement,"Expected closing statement token");Te(s.OpenStatement,s.EndFor);)ar.push(oe());return new C(Re,Je,Qe,ar)}function Lt(){return pr()}function pr(){const Re=cs();if(Ce(s.If)){++R;const Je=cs();if(Ce(s.Else)){++R;const Qe=cs();return new _(Je,[Re],[Qe])}else return new X(Re,Je)}return Re}function cs(){let Re=Vr();for(;Ce(s.Or);){const Je=D[R];++R;const Qe=Vr();Re=new Z(Je,Re,Qe)}return Re}function Vr(){let Re=kr();for(;Ce(s.And);){const Je=D[R];++R;const Qe=kr();Re=new Z(Je,Re,Qe)}return Re}function kr(){let Re;for(;Ce(s.Not);){const Je=D[R];++R;const Qe=kr();Re=new ne(Je,Qe)}return Re??Dr()}function Dr(){let Re=Ms();for(;Ce(s.ComparisonBinaryOperator)||Ce(s.In)||Ce(s.NotIn);){const Je=D[R];++R;const Qe=Ms();Re=new Z(Je,Re,Qe)}return Re}function Ms(){let Re=hs();for(;Ce(s.AdditiveBinaryOperator);){const Je=D[R];++R;const Qe=hs();Re=new Z(Je,Re,Qe)}return Re}function us(){const Re=ps(ir());return Ce(s.OpenParen)?it(Re):Re}function it(Re){let Je=new P(Re,Ur());return Je=ps(Je),Ce(s.OpenParen)&&(Je=it(Je)),Je}function Ur(){te(s.OpenParen,"Expected opening parenthesis for arguments list");const Re=Lr();return te(s.CloseParen,"Expected closing parenthesis for arguments list"),Re}function Lr(){const Re=[];for(;!Ce(s.CloseParen);){let Je=Lt();if(Ce(s.Equals)){if(++R,!(Je instanceof y))throw new SyntaxError("Expected identifier for keyword argument");const Qe=Lt();Je=new pe(Je,Qe)}Re.push(Je),Ce(s.Comma)&&++R}return Re}function bs(){const Re=[];let Je=!1;for(;!Ce(s.CloseSquareBracket);)Ce(s.Colon)?(Re.push(void 0),++R,Je=!0):(Re.push(Lt()),Ce(s.Colon)&&(++R,Je=!0));if(Re.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Je){if(Re.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ae(...Re)}return Re[0]}function ps(Re){for(;Ce(s.Dot)||Ce(s.OpenSquareBracket);){const Je=D[R];++R;let Qe;const ar=Je.type!==s.Dot;if(ar)Qe=bs(),te(s.CloseSquareBracket,"Expected closing square bracket");else if(Qe=ir(),Qe.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Re=new $(Re,Qe,ar)}return Re}function hs(){let Re=ms();for(;Ce(s.MultiplicativeBinaryOperator);){const Je=D[R];++R;const Qe=ms();Re=new Z(Je,Re,Qe)}return Re}function ms(){let Re=fs();for(;Ce(s.Is);){++R;const Je=Ce(s.Not);Je&&++R;let Qe=ir();if(Qe instanceof B?Qe=new y(Qe.value.toString()):Qe instanceof N&&(Qe=new y("none")),!(Qe instanceof y))throw new SyntaxError("Expected identifier for the test");Re=new se(Re,Je,Qe)}return Re}function fs(){let Re=us();for(;Ce(s.Pipe);){++R;let Je=ir();if(!(Je instanceof y))throw new SyntaxError("Expected identifier for the filter");Ce(s.OpenParen)&&(Je=it(Je)),Re=new q(Re,Je)}return Re}function ir(){const Re=D[R];switch(Re.type){case s.NumericLiteral:return++R,new E(Number(Re.value));case s.StringLiteral:return++R,new A(Re.value);case s.BooleanLiteral:return++R,new B(Re.value.toLowerCase()==="true");case s.NullLiteral:return++R,new N(null);case s.Identifier:return++R,new y(Re.value);case s.OpenParen:{++R;const Je=Mt();if(D[R].type!==s.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${D[R].type} instead`);return++R,Je}case s.OpenSquareBracket:{++R;const Je=[];for(;!Ce(s.CloseSquareBracket);)Je.push(Lt()),Ce(s.Comma)&&++R;return++R,new Q(Je)}case s.OpenCurlyBracket:{++R;const Je=new Map;for(;!Ce(s.CloseCurlyBracket);){const Qe=Lt();te(s.Colon,"Expected colon between key and value in object literal");const ar=Lt();Je.set(Qe,ar),Ce(s.Comma)&&++R}return++R,new z(Je)}default:throw new SyntaxError(`Unexpected token: ${Re.type}`)}}for(;R<D.length;)Y.body.push(oe());return Y}function L(D,Y,R=1){Y===void 0&&(Y=D,D=0);const te=[];for(let oe=D;oe<Y;oe+=R)te.push(oe);return te}function O(D,Y,R,te=1){const oe=Math.sign(te);oe>=0?(Y=(Y??=0)<0?Math.max(D.length+Y,0):Math.min(Y,D.length),R=(R??=D.length)<0?Math.max(D.length+R,0):Math.min(R,D.length)):(Y=(Y??=D.length-1)<0?Math.max(D.length+Y,-1):Math.min(Y,D.length-1),R=(R??=-1)<-1?Math.max(D.length+R,-1):Math.min(R,D.length-1));const Te=[];for(let Ce=Y;oe*Ce<oe*R;Ce+=te)Te.push(D[Ce]);return Te}function J(D){return D.replace(/\b\w/g,Y=>Y.toUpperCase())}var ce=class{type="RuntimeValue";value;builtins=new Map;constructor(D=void 0){this.value=D}__bool__(){return new Ee(!!this.value)}},be=class extends ce{type="NumericValue"},ue=class extends ce{type="StringValue";builtins=new Map([["upper",new he(()=>new ue(this.value.toUpperCase()))],["lower",new he(()=>new ue(this.value.toLowerCase()))],["strip",new he(()=>new ue(this.value.trim()))],["title",new he(()=>new ue(J(this.value)))],["length",new be(this.value.length)],["rstrip",new he(()=>new ue(this.value.trimEnd()))],["lstrip",new he(()=>new ue(this.value.trimStart()))],["split",new he(D=>{const Y=D[0]??new Pe;if(!(Y instanceof ue||Y instanceof Pe))throw new Error("sep argument must be a string or null");const R=D[1]??new be(-1);if(!(R instanceof be))throw new Error("maxsplit argument must be a number");let te=[];if(Y instanceof Pe){const oe=this.value.trimStart();for(const{0:Te,index:Ce}of oe.matchAll(/\S+/g)){if(R.value!==-1&&te.length>=R.value&&Ce!==void 0){te.push(Te+oe.slice(Ce+Te.length));break}te.push(Te)}}else{if(Y.value==="")throw new Error("empty separator");te=this.value.split(Y.value),R.value!==-1&&te.length>R.value&&te.push(te.splice(R.value).join(Y.value))}return new K(te.map(oe=>new ue(oe)))})]])},Ee=class extends ce{type="BooleanValue"},Ne=class extends ce{type="ObjectValue";__bool__(){return new Ee(this.value.size>0)}builtins=new Map([["get",new he(([D,Y])=>{if(!(D instanceof ue))throw new Error(`Object key must be a string: got ${D.type}`);return this.value.get(D.value)??Y??new Pe})],["items",new he(()=>new K(Array.from(this.value.entries()).map(([D,Y])=>new K([new ue(D),Y]))))]])},ye=class extends Ne{type="KeywordArgumentsValue"},K=class extends ce{type="ArrayValue";builtins=new Map([["length",new be(this.value.length)]]);__bool__(){return new Ee(this.value.length>0)}},W=class extends K{type="TupleValue"},he=class extends ce{type="FunctionValue"},Pe=class extends ce{type="NullValue"},ve=class extends ce{type="UndefinedValue"},ke=class{constructor(D){this.parent=D}variables=new Map([["namespace",new he(D=>{if(D.length===0)return new Ne(new Map);if(D.length!==1||!(D[0]instanceof Ne))throw new Error("`namespace` expects either zero arguments or a single object argument");return D[0]})]]);tests=new Map([["boolean",D=>D.type==="BooleanValue"],["callable",D=>D instanceof he],["odd",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${D.type}`);return D.value%2!==0}],["even",D=>{if(D.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${D.type}`);return D.value%2===0}],["false",D=>D.type==="BooleanValue"&&!D.value],["true",D=>D.type==="BooleanValue"&&D.value],["none",D=>D.type==="NullValue"],["string",D=>D.type==="StringValue"],["number",D=>D.type==="NumericValue"],["integer",D=>D.type==="NumericValue"&&Number.isInteger(D.value)],["iterable",D=>D.type==="ArrayValue"||D.type==="StringValue"],["mapping",D=>D.type==="ObjectValue"],["lower",D=>{const Y=D.value;return D.type==="StringValue"&&Y===Y.toLowerCase()}],["upper",D=>{const Y=D.value;return D.type==="StringValue"&&Y===Y.toUpperCase()}],["none",D=>D.type==="NullValue"],["defined",D=>D.type!=="UndefinedValue"],["undefined",D=>D.type==="UndefinedValue"],["equalto",(D,Y)=>D.value===Y.value],["eq",(D,Y)=>D.value===Y.value]]);set(D,Y){return this.declareVariable(D,Oe(Y))}declareVariable(D,Y){if(this.variables.has(D))throw new SyntaxError(`Variable already declared: ${D}`);return this.variables.set(D,Y),Y}setVariable(D,Y){return this.variables.set(D,Y),Y}resolve(D){if(this.variables.has(D))return this;if(this.parent)return this.parent.resolve(D);throw new Error(`Unknown variable: ${D}`)}lookupVariable(D){try{return this.resolve(D).variables.get(D)??new ve}catch{return new ve}}},Ae=class{global;constructor(D){this.global=D??new ke}run(D){return this.evaluate(D,this.global)}evaluateBinaryExpression(D,Y){const R=this.evaluate(D.left,Y);switch(D.operator.value){case"and":return R.__bool__().value?this.evaluate(D.right,Y):R;case"or":return R.__bool__().value?R:this.evaluate(D.right,Y)}const te=this.evaluate(D.right,Y);switch(D.operator.value){case"==":return new Ee(R.value==te.value);case"!=":return new Ee(R.value!=te.value)}if(R instanceof ve||te instanceof ve)throw new Error("Cannot perform operation on undefined values");if(R instanceof Pe||te instanceof Pe)throw new Error("Cannot perform operation on null values");if(R instanceof be&&te instanceof be)switch(D.operator.value){case"+":return new be(R.value+te.value);case"-":return new be(R.value-te.value);case"*":return new be(R.value*te.value);case"/":return new be(R.value/te.value);case"%":return new be(R.value%te.value);case"<":return new Ee(R.value<te.value);case">":return new Ee(R.value>te.value);case">=":return new Ee(R.value>=te.value);case"<=":return new Ee(R.value<=te.value)}else if(R instanceof K&&te instanceof K)switch(D.operator.value){case"+":return new K(R.value.concat(te.value))}else if(te instanceof K){const oe=te.value.find(Te=>Te.value===R.value)!==void 0;switch(D.operator.value){case"in":return new Ee(oe);case"not in":return new Ee(!oe)}}if(R instanceof ue||te instanceof ue)switch(D.operator.value){case"+":return new ue(R.value.toString()+te.value.toString())}if(R instanceof ue&&te instanceof ue)switch(D.operator.value){case"in":return new Ee(te.value.includes(R.value));case"not in":return new Ee(!te.value.includes(R.value))}if(R instanceof ue&&te instanceof Ne)switch(D.operator.value){case"in":return new Ee(te.value.has(R.value));case"not in":return new Ee(!te.value.has(R.value))}throw new SyntaxError(`Unknown operator "${D.operator.value}" between ${R.type} and ${te.type}`)}evaluateArguments(D,Y){const R=[],te=new Map;for(const oe of D)if(oe.type==="KeywordArgumentExpression"){const Te=oe;te.set(Te.key.value,this.evaluate(Te.value,Y))}else{if(te.size>0)throw new Error("Positional arguments must come before keyword arguments");R.push(this.evaluate(oe,Y))}return[R,te]}evaluateFilterExpression(D,Y){const R=this.evaluate(D.operand,Y);if(D.filter.type==="Identifier"){const te=D.filter;if(te.value==="tojson")return new ue(Ue(R));if(R instanceof K)switch(te.value){case"list":return R;case"first":return R.value[0];case"last":return R.value[R.value.length-1];case"length":return new be(R.value.length);case"reverse":return new K(R.value.reverse());case"sort":return new K(R.value.sort((oe,Te)=>{if(oe.type!==Te.type)throw new Error(`Cannot compare different types: ${oe.type} and ${Te.type}`);switch(oe.type){case"NumericValue":return oe.value-Te.value;case"StringValue":return oe.value.localeCompare(Te.value);default:throw new Error(`Cannot compare type: ${oe.type}`)}}));case"join":return new ue(R.value.map(oe=>oe.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${te.value}`)}else if(R instanceof ue)switch(te.value){case"length":return new be(R.value.length);case"upper":return new ue(R.value.toUpperCase());case"lower":return new ue(R.value.toLowerCase());case"title":return new ue(J(R.value));case"capitalize":return new ue(R.value.charAt(0).toUpperCase()+R.value.slice(1));case"trim":return new ue(R.value.trim());case"indent":return new ue(R.value.split(`
`).map((oe,Te)=>Te===0||oe.length===0?oe:"    "+oe).join(`
`));case"join":case"string":return R;default:throw new Error(`Unknown StringValue filter: ${te.value}`)}else if(R instanceof be)switch(te.value){case"abs":return new be(Math.abs(R.value));default:throw new Error(`Unknown NumericValue filter: ${te.value}`)}else if(R instanceof Ne)switch(te.value){case"items":return new K(Array.from(R.value.entries()).map(([oe,Te])=>new K([new ue(oe),Te])));case"length":return new be(R.value.size);default:throw new Error(`Unknown ObjectValue filter: ${te.value}`)}throw new Error(`Cannot apply filter "${te.value}" to type: ${R.type}`)}else if(D.filter.type==="CallExpression"){const te=D.filter;if(te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${te.callee.type}`);const oe=te.callee.value;if(oe==="tojson"){const[,Te]=this.evaluateArguments(te.args,Y),Ce=Te.get("indent")??new Pe;if(!(Ce instanceof be||Ce instanceof Pe))throw new Error("If set, indent must be a number");return new ue(Ue(R,Ce.value))}else if(oe==="join"){let Te;if(R instanceof ue)Te=Array.from(R.value);else if(R instanceof K)Te=R.value.map(Le=>Le.value);else throw new Error(`Cannot apply filter "${oe}" to type: ${R.type}`);const[Ce,De]=this.evaluateArguments(te.args,Y),we=Ce.at(0)??De.get("separator")??new ue("");if(!(we instanceof ue))throw new Error("separator must be a string");return new ue(Te.join(we.value))}if(R instanceof K){switch(oe){case"selectattr":case"rejectattr":{const Te=oe==="selectattr";if(R.value.some(lt=>!(lt instanceof Ne)))throw new Error(`\`${oe}\` can only be applied to array of objects`);if(te.args.some(lt=>lt.type!=="StringLiteral"))throw new Error(`arguments of \`${oe}\` must be strings`);const[Ce,De,we]=te.args.map(lt=>this.evaluate(lt,Y));let Le;if(De){const lt=Y.tests.get(De.value);if(!lt)throw new Error(`Unknown test: ${De.value}`);Le=lt}else Le=(...lt)=>lt[0].__bool__().value;const ot=R.value.filter(lt=>{const Tt=lt.value.get(Ce.value),Mt=Tt?Le(Tt,we):!1;return Te?Mt:!Mt});return new K(ot)}case"map":{const[,Te]=this.evaluateArguments(te.args,Y);if(Te.has("attribute")){const Ce=Te.get("attribute");if(!(Ce instanceof ue))throw new Error("attribute must be a string");const De=Te.get("default"),we=R.value.map(Le=>{if(!(Le instanceof Ne))throw new Error("items in map must be an object");return Le.value.get(Ce.value)??De??new ve});return new K(we)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${oe}`)}else if(R instanceof ue){switch(oe){case"indent":{const[Te,Ce]=this.evaluateArguments(te.args,Y),De=Te.at(0)??Ce.get("width")??new be(4);if(!(De instanceof be))throw new Error("width must be a number");const we=Te.at(1)??Ce.get("first")??new Ee(!1),Le=Te.at(2)??Ce.get("blank")??new Ee(!1),ot=R.value.split(`
`),lt=" ".repeat(De.value),Tt=ot.map((Mt,rr)=>!we.value&&rr===0||!Le.value&&Mt.length===0?Mt:lt+Mt);return new ue(Tt.join(`
`))}}throw new Error(`Unknown StringValue filter: ${oe}`)}else throw new Error(`Cannot apply filter "${oe}" to type: ${R.type}`)}throw new Error(`Unknown filter: ${D.filter.type}`)}evaluateTestExpression(D,Y){const R=this.evaluate(D.operand,Y),te=Y.tests.get(D.test.value);if(!te)throw new Error(`Unknown test: ${D.test.value}`);const oe=te(R);return new Ee(D.negate?!oe:oe)}evaluateUnaryExpression(D,Y){const R=this.evaluate(D.argument,Y);switch(D.operator.value){case"not":return new Ee(!R.value);default:throw new SyntaxError(`Unknown operator: ${D.operator.value}`)}}evalProgram(D,Y){return this.evaluateBlock(D.body,Y)}evaluateBlock(D,Y){let R="";for(const te of D){const oe=this.evaluate(te,Y);oe.type!=="NullValue"&&oe.type!=="UndefinedValue"&&(R+=oe.value)}return new ue(R)}evaluateIdentifier(D,Y){return Y.lookupVariable(D.value)}evaluateCallExpression(D,Y){const[R,te]=this.evaluateArguments(D.args,Y);te.size>0&&R.push(new ye(te));const oe=this.evaluate(D.callee,Y);if(oe.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${oe.type}`);return oe.value(R,Y)}evaluateSliceExpression(D,Y,R){if(!(D instanceof K||D instanceof ue))throw new Error("Slice object must be an array or string");const te=this.evaluate(Y.start,R),oe=this.evaluate(Y.stop,R),Te=this.evaluate(Y.step,R);if(!(te instanceof be||te instanceof ve))throw new Error("Slice start must be numeric or undefined");if(!(oe instanceof be||oe instanceof ve))throw new Error("Slice stop must be numeric or undefined");if(!(Te instanceof be||Te instanceof ve))throw new Error("Slice step must be numeric or undefined");return D instanceof K?new K(O(D.value,te.value,oe.value,Te.value)):new ue(O(Array.from(D.value),te.value,oe.value,Te.value).join(""))}evaluateMemberExpression(D,Y){const R=this.evaluate(D.object,Y);let te;if(D.computed){if(D.property.type==="SliceExpression")return this.evaluateSliceExpression(R,D.property,Y);te=this.evaluate(D.property,Y)}else te=new ue(D.property.value);let oe;if(R instanceof Ne){if(!(te instanceof ue))throw new Error(`Cannot access property with non-string: got ${te.type}`);oe=R.value.get(te.value)??R.builtins.get(te.value)}else if(R instanceof K||R instanceof ue)if(te instanceof be)oe=R.value.at(te.value),R instanceof ue&&(oe=new ue(R.value.at(te.value)));else if(te instanceof ue)oe=R.builtins.get(te.value);else throw new Error(`Cannot access property with non-string/non-number: got ${te.type}`);else{if(!(te instanceof ue))throw new Error(`Cannot access property with non-string: got ${te.type}`);oe=R.builtins.get(te.value)}return oe instanceof ce?oe:new ve}evaluateSet(D,Y){const R=this.evaluate(D.value,Y);if(D.assignee.type==="Identifier"){const te=D.assignee.value;Y.setVariable(te,R)}else if(D.assignee.type==="MemberExpression"){const te=D.assignee,oe=this.evaluate(te.object,Y);if(!(oe instanceof Ne))throw new Error("Cannot assign to member of non-object");if(te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");oe.value.set(te.property.value,R)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(D.assignee)}`);return new Pe}evaluateIf(D,Y){const R=this.evaluate(D.test,Y);return this.evaluateBlock(R.__bool__().value?D.body:D.alternate,Y)}evaluateFor(D,Y){const R=new ke(Y);let te,oe;if(D.iterable.type==="SelectExpression"){const Le=D.iterable;oe=this.evaluate(Le.iterable,R),te=Le.test}else oe=this.evaluate(D.iterable,R);if(!(oe instanceof K))throw new Error(`Expected iterable type in for loop: got ${oe.type}`);const Te=[],Ce=[];for(let Le=0;Le<oe.value.length;++Le){const ot=new ke(R),lt=oe.value[Le];let Tt;if(D.loopvar.type==="Identifier")Tt=Mt=>Mt.setVariable(D.loopvar.value,lt);else if(D.loopvar.type==="TupleLiteral"){const Mt=D.loopvar;if(lt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${lt.type}`);const rr=lt;if(Mt.value.length!==rr.value.length)throw new Error(`Too ${Mt.value.length>rr.value.length?"few":"many"} items to unpack`);Tt=Lt=>{for(let pr=0;pr<Mt.value.length;++pr){if(Mt.value[pr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Mt.value[pr].type}`);Lt.setVariable(Mt.value[pr].value,rr.value[pr])}}}else throw new Error(`Invalid loop variable(s): ${D.loopvar.type}`);te&&(Tt(ot),!this.evaluate(te,ot).__bool__().value)||(Te.push(lt),Ce.push(Tt))}let De="",we=!0;for(let Le=0;Le<Te.length;++Le){const ot=new Map([["index",new be(Le+1)],["index0",new be(Le)],["revindex",new be(Te.length-Le)],["revindex0",new be(Te.length-Le-1)],["first",new Ee(Le===0)],["last",new Ee(Le===Te.length-1)],["length",new be(Te.length)],["previtem",Le>0?Te[Le-1]:new ve],["nextitem",Le<Te.length-1?Te[Le+1]:new ve]]);R.setVariable("loop",new Ne(ot)),Ce[Le](R);const lt=this.evaluateBlock(D.body,R);De+=lt.value,we=!1}if(we){const Le=this.evaluateBlock(D.defaultBlock,R);De+=Le.value}return new ue(De)}evaluateMacro(D,Y){return Y.setVariable(D.name.value,new he((R,te)=>{const oe=new ke(te);R=R.slice();let Te;R.at(-1)?.type==="KeywordArgumentsValue"&&(Te=R.pop());for(let Ce=0;Ce<D.args.length;++Ce){const De=D.args[Ce],we=R[Ce];if(De.type==="Identifier"){const Le=De;if(!we)throw new Error(`Missing positional argument: ${Le.value}`);oe.setVariable(Le.value,we)}else if(De.type==="KeywordArgumentExpression"){const Le=De,ot=we??Te?.value.get(Le.key.value)??this.evaluate(Le.value,oe);oe.setVariable(Le.key.value,ot)}else throw new Error(`Unknown argument type: ${De.type}`)}return this.evaluateBlock(D.body,oe)})),new Pe}evaluate(D,Y){if(D===void 0)return new ve;switch(D.type){case"Program":return this.evalProgram(D,Y);case"Set":return this.evaluateSet(D,Y);case"If":return this.evaluateIf(D,Y);case"For":return this.evaluateFor(D,Y);case"Macro":return this.evaluateMacro(D,Y);case"NumericLiteral":return new be(Number(D.value));case"StringLiteral":return new ue(D.value);case"BooleanLiteral":return new Ee(D.value);case"NullLiteral":return new Pe(D.value);case"ArrayLiteral":return new K(D.value.map(R=>this.evaluate(R,Y)));case"TupleLiteral":return new W(D.value.map(R=>this.evaluate(R,Y)));case"ObjectLiteral":{const R=new Map;for(const[te,oe]of D.value){const Te=this.evaluate(te,Y);if(!(Te instanceof ue))throw new Error(`Object keys must be strings: got ${Te.type}`);R.set(Te.value,this.evaluate(oe,Y))}return new Ne(R)}case"Identifier":return this.evaluateIdentifier(D,Y);case"CallExpression":return this.evaluateCallExpression(D,Y);case"MemberExpression":return this.evaluateMemberExpression(D,Y);case"UnaryExpression":return this.evaluateUnaryExpression(D,Y);case"BinaryExpression":return this.evaluateBinaryExpression(D,Y);case"FilterExpression":return this.evaluateFilterExpression(D,Y);case"TestExpression":return this.evaluateTestExpression(D,Y);default:throw new SyntaxError(`Unknown node type: ${D.type}`)}}};function Oe(D){switch(typeof D){case"number":return new be(D);case"string":return new ue(D);case"boolean":return new Ee(D);case"undefined":return new ve;case"object":return D===null?new Pe:Array.isArray(D)?new K(D.map(Oe)):new Ne(new Map(Object.entries(D).map(([Y,R])=>[Y,Oe(R)])));case"function":return new he((Y,R)=>{const te=D(...Y.map(oe=>oe.value))??null;return Oe(te)});default:throw new Error(`Cannot convert to runtime value: ${D}`)}}function Ue(D,Y,R){const te=R??0;switch(D.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(D.value);case"ArrayValue":case"ObjectValue":{const oe=Y?" ".repeat(Y):"",Te=`
`+oe.repeat(te),Ce=Te+oe;if(D.type==="ArrayValue"){const De=D.value.map(we=>Ue(we,Y,te+1));return Y?`[${Ce}${De.join(`,${Ce}`)}${Te}]`:`[${De.join(", ")}]`}else{const De=Array.from(D.value.entries()).map(([we,Le])=>{const ot=`"${we}": ${Ue(Le,Y,te+1)}`;return Y?`${Ce}${ot}`:ot});return Y?`{${De.join(",")}${Te}}`:`{${De.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${D.type}`)}}var Ve=class{parsed;constructor(D){const Y=u(D,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=V(Y)}render(D){const Y=new ke;if(Y.set("false",!1),Y.set("true",!0),Y.set("raise_exception",oe=>{throw new Error(oe)}),Y.set("range",L),D)for(const[oe,Te]of Object.entries(D))Y.set(oe,Te);return new Ae(Y).run(this.parsed).value}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>F,deviceToExecutionProviders:()=>_,isONNXProxy:()=>$,isONNXTensor:()=>T});var n=t("./src/env.js"),o=t("?2ce3"),i=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,u;const h=Symbol.for("onnxruntime");if(h in globalThis)u=globalThis[h];else if(n.apis.IS_NODE_ENV){switch(u=o??(s||(s=t.t(o,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else u=i,n.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),n.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const w=u.InferenceSession;function _(P=null){if(!P)return p;switch(P){case"auto":return c;case"gpu":return c.filter(y=>["webgpu","cuda","dml","webnn-gpu"].includes(y))}if(c.includes(P))return[l[P]??P];throw new Error(`Unsupported device: "${P}". Should be one of: ${c.join(", ")}.`)}let C=null;async function F(P,y,M){C&&await C;const E=w.create(P,y);C??=E;const A=await E;return A.config=M,A}function T(P){return P instanceof u.Tensor}const g=u?.env;g?.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!g.wasm.wasmPaths&&(g.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${n.env.version}/dist/`),g.wasm.proxy=!1),g?.webgpu&&(g.webgpu.powerPreference="high-performance");function $(){return g?.wasm?.proxy}n.env.backends.onnx=g},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),o=t("./src/utils/hub.js");class i extends n.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p){const u=await(0,o.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(u)}}function a(l,c){if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${l?.constructor?.name??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>P,center_to_corners_format:()=>u,post_process_instance_segmentation:()=>$,post_process_object_detection:()=>h,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>w});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(y,M,E=0,A=null){const B=y/M;let N=(0,o.bankers_round)(B)*M;return A!==null&&N>A&&(N=Math.floor(B)*M),N<E&&(N=Math.ceil(B)*M),N}function p([y,M],E){return[Math.max(Math.floor(y/E),1)*E,Math.max(Math.floor(M/E),1)*E]}function u([y,M,E,A]){return[y-E/2,M-A/2,y+E/2,M+A/2]}function h(y,M=.5,E=null,A=!1){const B=y.logits,N=y.pred_boxes,[Q,H,z]=B.dims;if(E!==null&&E.length!==Q)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let q=0;q<Q;++q){let X=E!==null?E[q]:null,se={boxes:[],classes:[],scores:[]},ne=B[q],ae=N[q];for(let pe=0;pe<H;++pe){let V=ne[pe],L=[],O;if(A){O=V.sigmoid().data;for(let J=0;J<O.length;++J)O[J]>M&&L.push(J)}else{let J=(0,o.max)(V.data)[1];if(J===z-1||(O=(0,o.softmax)(V.data),O[J]<M))continue;L.push(J)}for(const J of L){let ce=ae[pe].data;ce=u(ce),X!==null&&(ce=ce.map((be,ue)=>be*X[(ue+1)%2])),se.boxes.push(ce),se.classes.push(J),se.scores.push(O[J])}}Z.push(se)}return Z}function w(y,M=null){const E=y.logits,A=E.dims[0];if(M!==null&&M.length!==A)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const B=[];for(let N=0;N<A;++N){const Q=M!==null?M[N]:null;let H=E[N];Q!==null&&(H=(0,n.interpolate)(H,Q,"bilinear",!1));const[z,Z]=Q??H.dims.slice(-2),q=new n.Tensor("int32",new Int32Array(z*Z),[z,Z]),X=H[0].data,se=q.data;for(let pe=1;pe<H.dims[0];++pe){const V=H[pe].data;for(let L=0;L<V.length;++L)V[L]>X[L]&&(X[L]=V[L],se[L]=pe)}const ne=new Array(H.dims[0]);for(let pe=0;pe<se.length;++pe){const V=se[pe];ne[V]=V}const ae=ne.filter(pe=>pe!==void 0);B.push({segmentation:q,labels:ae})}return B}function _(y,M,E,A){const B=[],N=[],Q=[];for(let H=0;H<y.dims[0];++H){const z=y[H],Z=M[H],q=(0,o.max)(z.data)[1];if(q===A)continue;const se=(0,o.softmax)(z.data)[q];se>E&&(B.push(Z),N.push(se),Q.push(q))}return[B,N,Q]}function C(y,M,E,A=.5,B=.8){const N=[];let Q=0,H=0;const z=M[E].data;for(let q=0;q<y.length;++q)y[q]===E&&(N.push(q),++Q),z[q]>=A&&++H;let Z=Q>0&&H>0;return Z&&(Z=Q/H>B),[Z,N]}function F(y,M,E,A,B,N=null,Q=null){const[H,z]=Q??y[0].dims,Z=new n.Tensor("int32",new Int32Array(H*z),[H,z]),q=[];if(Q!==null)for(let pe=0;pe<y.length;++pe)y[pe]=(0,n.interpolate)(y[pe],Q,"bilinear",!1);const X=new Int32Array(y[0].data.length),se=new Float32Array(y[0].data.length);for(let pe=0;pe<y.length;++pe){let V=M[pe];const L=y[pe].data;for(let O=0;O<L.length;++O)L[O]*=V,L[O]>se[O]&&(X[O]=pe,se[O]=L[O])}let ne=0;const ae=Z.data;for(let pe=0;pe<E.length;++pe){const V=E[pe],[L,O]=C(X,y,pe,A,B);if(L){++ne;for(const J of O)ae[J]=ne;q.push({id:ne,label_id:V,score:M[pe]})}}return[Z,q]}function T(y,M,E=28,A=56*56,B=14*14*4*1280){if(y<E||M<E)throw new Error(`height:${y} or width:${M} must be larger than factor:${E}`);if(Math.max(y,M)/Math.min(y,M)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(y,M)/Math.min(y,M)}`);let N=Math.round(y/E)*E,Q=Math.round(M/E)*E;if(N*Q>B){const H=Math.sqrt(y*M/B);N=Math.floor(y/H/E)*E,Q=Math.floor(M/H/E)*E}else if(N*Q<A){const H=Math.sqrt(A/(y*M));N=Math.ceil(y*H/E)*E,Q=Math.ceil(M*H/E)*E}return[N,Q]}function g(y,M=.5,E=.5,A=.8,B=null,N=null){B===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),B=new Set);const Q=y.class_queries_logits??y.logits,z=(y.masks_queries_logits??y.pred_masks).sigmoid();let[Z,q,X]=Q.dims;if(X-=1,N!==null&&N.length!==Z)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let se=[];for(let ne=0;ne<Z;++ne){let ae=N!==null?N[ne]:null,pe=Q[ne],V=z[ne],[L,O,J]=_(pe,V,M,X);if(J.length===0){let[ue,Ee]=ae??V.dims.slice(-2),Ne=new n.Tensor("int32",new Int32Array(ue*Ee).fill(-1),[ue,Ee]);se.push({segmentation:Ne,segments_info:[]});continue}let[ce,be]=F(L,O,J,E,A,B,ae);se.push({segmentation:ce,segments_info:be})}return se}function $(y,M=.5,E=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class P extends s.Callable{constructor(M){super(),this.image_mean=M.image_mean??M.mean,this.image_std=M.image_std??M.std,this.resample=M.resample??2,this.do_rescale=M.do_rescale??!0,this.rescale_factor=M.rescale_factor??1/255,this.do_normalize=M.do_normalize,this.do_thumbnail=M.do_thumbnail,this.size=M.size??M.image_size,this.do_resize=M.do_resize??this.size!==void 0,this.size_divisibility=M.size_divisibility??M.size_divisor,this.do_center_crop=M.do_center_crop,this.crop_size=M.crop_size,this.do_convert_rgb=M.do_convert_rgb??!0,this.do_crop_margin=M.do_crop_margin,this.pad_size=M.pad_size,this.do_pad=M.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=M.do_flip_channel_order??!1,this.config=M}async thumbnail(M,E,A=2){const B=M.height,N=M.width,Q=E.height,H=E.width;let z=Math.min(B,Q),Z=Math.min(N,H);return z===B&&Z===N?M:(B>N?Z=Math.floor(N*z/B):N>B&&(z=Math.floor(B*Z/N)),await M.resize(Z,z,{resample:A}))}async crop_margin(M,E=200){const A=M.clone().grayscale(),B=(0,o.min)(A.data)[0],Q=(0,o.max)(A.data)[0]-B;if(Q===0)return M;const H=E/255;let z=A.width,Z=A.height,q=0,X=0;const se=A.data;for(let ne=0;ne<A.height;++ne){const ae=ne*A.width;for(let pe=0;pe<A.width;++pe)(se[ae+pe]-B)/Q<H&&(z=Math.min(z,pe),Z=Math.min(Z,ne),q=Math.max(q,pe),X=Math.max(X,ne))}return M=await M.crop([z,Z,q,X]),M}pad_image(M,E,A,{mode:B="constant",center:N=!1,constant_values:Q=0}={}){const[H,z,Z]=E;let q,X;if(typeof A=="number"?(q=A,X=A):A==="square"?q=X=Math.max(H,z):(q=A.width,X=A.height),q!==z||X!==H){const se=new Float32Array(q*X*Z);if(Array.isArray(Q))for(let pe=0;pe<se.length;++pe)se[pe]=Q[pe%Z];else Q!==0&&se.fill(Q);const[ne,ae]=N?[Math.floor((q-z)/2),Math.floor((X-H)/2)]:[0,0];for(let pe=0;pe<H;++pe){const V=(pe+ae)*q,L=pe*z;for(let O=0;O<z;++O){const J=(V+O+ne)*Z,ce=(L+O)*Z;for(let be=0;be<Z;++be)se[J+be]=M[ce+be]}}if(B==="symmetric"){if(N)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const pe=H-1,V=z-1;for(let L=0;L<X;++L){const O=L*q,J=(0,i.calculateReflectOffset)(L,pe)*z;for(let ce=0;ce<q;++ce){if(L<H&&ce<z)continue;const be=(O+ce)*Z,ue=(J+(0,i.calculateReflectOffset)(ce,V))*Z;for(let Ee=0;Ee<Z;++Ee)se[be+Ee]=M[ue+Ee]}}}M=se,E=[X,q,Z]}return[M,E]}rescale(M){for(let E=0;E<M.length;++E)M[E]=this.rescale_factor*M[E]}get_resize_output_image_size(M,E){const[A,B]=M.size;let N,Q;if(this.do_thumbnail){const{height:H,width:z}=E;N=Math.min(H,z)}else Number.isInteger(E)?(N=E,Q=this.config.max_size??N):E!==void 0&&(N=E.shortest_edge,Q=E.longest_edge);if(N!==void 0||Q!==void 0){const H=N===void 0?1:Math.max(N/A,N/B),z=A*H,Z=B*H,q=Q===void 0?1:Math.min(Q/z,Q/Z);let X=Math.floor(Number((z*q).toFixed(2))),se=Math.floor(Number((Z*q).toFixed(2)));return this.size_divisibility!==void 0&&([X,se]=p([X,se],this.size_divisibility)),[X,se]}else if(E!==void 0&&E.width!==void 0&&E.height!==void 0){let H=E.width,z=E.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Z=z/B,q=H/A;Math.abs(1-q)<Math.abs(1-Z)?Z=q:q=Z,z=c(Z*B,this.config.ensure_multiple_of),H=c(q*A,this.config.ensure_multiple_of)}return[H,z]}else{if(this.size_divisibility!==void 0)return p([A,B],this.size_divisibility);if(E.min_pixels!==void 0&&E.max_pixels!==void 0){const{min_pixels:H,max_pixels:z}=E,Z=this.config.patch_size*this.config.merge_size;return T(B,A,Z,H,z)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(E)}`)}}async resize(M){const[E,A]=this.get_resize_output_image_size(M,this.size);return await M.resize(E,A,{resample:this.resample})}async preprocess(M,{do_normalize:E=null,do_pad:A=null,do_convert_rgb:B=null,do_convert_grayscale:N=null,do_flip_channel_order:Q=null}={}){this.do_crop_margin&&(M=await this.crop_margin(M));const[H,z]=M.size;if(B??this.do_convert_rgb?M=M.rgb():N&&(M=M.grayscale()),this.do_resize&&(M=await this.resize(M)),this.do_thumbnail&&(M=await this.thumbnail(M,this.size,this.resample)),this.do_center_crop){let ne,ae;Number.isInteger(this.crop_size)?(ne=this.crop_size,ae=this.crop_size):(ne=this.crop_size.width,ae=this.crop_size.height),M=await M.center_crop(ne,ae)}const Z=[M.height,M.width];let q=Float32Array.from(M.data),X=[M.height,M.width,M.channels];if(this.do_rescale&&this.rescale(q),E??this.do_normalize){let ne=this.image_mean;Array.isArray(this.image_mean)||(ne=new Array(M.channels).fill(ne));let ae=this.image_std;if(Array.isArray(this.image_std)||(ae=new Array(M.channels).fill(ne)),ne.length!==M.channels||ae.length!==M.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ne.length}) and \`image_std\` (${ae.length}) must match the number of channels in the image (${M.channels}).`);for(let pe=0;pe<q.length;pe+=M.channels)for(let V=0;V<M.channels;++V)q[pe+V]=(q[pe+V]-ne[V])/ae[V]}if(A??this.do_pad){if(this.pad_size)[q,X]=this.pad_image(q,[M.height,M.width,M.channels],this.pad_size);else if(this.size_divisibility){const[ne,ae]=p([X[1],X[0]],this.size_divisibility);[q,X]=this.pad_image(q,X,{width:ne,height:ae})}}if(Q??this.do_flip_channel_order){if(X[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ne=0;ne<q.length;ne+=3){const ae=q[ne];q[ne]=q[ne+2],q[ne+2]=ae}}const se=new n.Tensor("float32",q,X).permute(2,0,1);return{original_size:[z,H],reshaped_input_size:Z,pixel_values:se}}async _call(M,...E){Array.isArray(M)||(M=[M]);const A=await Promise.all(M.map(N=>this.preprocess(N)));return{pixel_values:(0,n.stack)(A.map(N=>N.pixel_values),0),original_sizes:A.map(N=>N.original_size),reshaped_input_sizes:A.map(N=>N.reshaped_input_size)}}static async from_pretrained(M,E){const A=await(0,a.getModelJSON)(M,l.IMAGE_PROCESSOR_NAME,!0,E);return new this(A)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>i});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),o=t("./src/utils/hub.js");class i extends n.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(l,c){super(),this.config=l,this.components=c}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c){const[p,u]=await Promise.all([this.uses_processor_config?(0,o.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(h=>h in this).map(async h=>{const w=await this[h].from_pretrained(l,c);return[h.replace(/_class$/,""),w]})).then(Object.fromEntries)]);return new this(p,u)}}},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>c,PretrainedConfig:()=>l,getKeyValueShapes:()=>a});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js");async function o(p,u){return await(0,n.getModelJSON)(p,"config.json",!0,u)}function i(p){const u={};let h={};switch(p.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":h=i(p.text_config);break;case"moondream1":h=i(p.phi_config);break;case"musicgen":h=i(p.decoder);break;case"multi_modality":h=i(p.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const _=i(p.decoder),C="num_decoder_layers"in _,F=(0,s.pick)(p,["model_type","is_encoder_decoder"]);return C?(F.num_decoder_layers=_.num_decoder_layers,F.num_decoder_heads=_.num_decoder_heads,F.decoder_hidden_size=_.decoder_hidden_size,F.num_encoder_layers=_.num_encoder_layers,F.num_encoder_heads=_.num_encoder_heads,F.encoder_hidden_size=_.encoder_hidden_size):(F.num_layers=_.num_layers,F.num_heads=_.num_heads,F.hidden_size=_.hidden_size),F}const w={...h,...(0,s.pick)(p,["model_type","multi_query","is_encoder_decoder"])};for(const _ in u)w[_]=p[u[_]];return w}function a(p,{prefix:u="past_key_values",batch_size:h=1}={}){const w={},_=p.normalized_config;if(_.is_encoder_decoder&&"num_encoder_heads"in _&&"num_decoder_heads"in _){const C=_.encoder_dim_kv??_.encoder_hidden_size/_.num_encoder_heads,F=_.decoder_dim_kv??_.decoder_hidden_size/_.num_decoder_heads,T=[h,_.num_encoder_heads,0,C],g=[h,_.num_decoder_heads,0,F];for(let $=0;$<_.num_decoder_layers;++$)w[`${u}.${$}.encoder.key`]=T,w[`${u}.${$}.encoder.value`]=T,w[`${u}.${$}.decoder.key`]=g,w[`${u}.${$}.decoder.value`]=g}else{const C=_.num_heads,F=_.num_layers,T=_.dim_kv??_.hidden_size/(_.num_attention_heads??C);if(_.model_type==="falcon"){const g=[h*C,0,T];for(let $=0;$<F;++$)w[`${u}.${$}.key`]=g,w[`${u}.${$}.value`]=g}else if(_.multi_query){const g=[h*C,0,2*T];for(let $=0;$<F;++$)w[`${u}.${$}.key_value`]=g}else if(_.model_type==="bloom"){const g=[h*C,T,0],$=[h*C,0,T];for(let P=0;P<F;++P)w[`${u}.${P}.key`]=g,w[`${u}.${P}.value`]=$}else if(_.model_type==="openelm")for(let g=0;g<F;++g){const $=[h,C[g],0,T];w[`${u}.${g}.key`]=$,w[`${u}.${g}.value`]=$}else{const g=[h,C,0,T];for(let $=0;$<F;++$)w[`${u}.${$}.key`]=g,w[`${u}.${$}.value`]=g}}return w}class l{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(u){Object.assign(this,u),this.normalized_config=i(this)}static async from_pretrained(u,{progress_callback:h=null,config:w=null,cache_dir:_=null,local_files_only:C=!1,revision:F="main"}={}){w&&!(w instanceof l)&&(w=new l(w));const T=w??await o(u,{progress_callback:h,config:w,cache_dir:_,local_files_only:C,revision:F});return new this(T)}}class c{static async from_pretrained(...u){return l.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{t.r(r),t.d(r,{apis:()=>F,env:()=>M});var s=t("?569f"),n=t("?3f59"),o=t("?154a");const i="3.4.1",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&self.constructor?.name==="DedicatedWorkerGlobalScope",c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,u=typeof navigator<"u"&&"ml"in navigator,h=typeof process<"u",w=h&&process?.release?.name==="node",_=!E(s),C=!E(n),F=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:h,IS_NODE_ENV:w,IS_FS_AVAILABLE:_,IS_PATH_AVAILABLE:C}),T=_&&C;let g="./";if(T){const A=Object(import.meta).url;A?g=n.dirname(n.dirname(o.fileURLToPath(A))):typeof __dirname<"u"&&(g=n.dirname(__dirname))}const $=T?n.join(g,"/.cache/"):null,P="/models/",y=T?n.join(g,P):P,M={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:y,useFS:_,useBrowserCache:c,useFSCache:_,cacheDir:$,useCustomCache:!1,customCache:null};function E(A){return Object.keys(A).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>n});var s=t("./src/utils/core.js");class n{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(i){Object.assign(this,(0,s.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>T,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>o,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>_,MinNewTokensLengthLogitsProcessor:()=>C,NoBadWordsLogitsProcessor:()=>F,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>w,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>g,TopKLogitsWarper:()=>P,TopPLogitsWarper:()=>$,WhisperTimeStampLogitsProcessor:()=>u});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var n=t("./src/utils/maths.js");class o extends s.Callable{_call(M,E){throw Error("`_call` should be implemented in a subclass")}}class i extends s.Callable{_call(M,E){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(M){this.processors.push(M)}extend(M){this.processors.push(...M)}_call(M,E){let A=E;for(const B of this.processors)A=B(M,A);return A}[Symbol.iterator](){return this.processors.values()}}class l extends o{constructor(M){super(),this.bos_token_id=M}_call(M,E){for(let A=0;A<M.length;++A)if(M[A].length===1){const B=E[A].data;B.fill(-1/0),B[this.bos_token_id]=0}return E}}class c extends o{constructor(M,E){super(),this.max_length=M,this.eos_token_id=Array.isArray(E)?E:[E]}_call(M,E){for(let A=0;A<M.length;++A)if(M[A].length===this.max_length-1){const B=E[A].data;B.fill(-1/0);for(const N of this.eos_token_id)B[N]=0}return E}}class p extends o{constructor(M,E){super(),this.begin_suppress_tokens=M,this.begin_index=E}_call(M,E){for(let A=0;A<M.length;++A)if(M[A].length===this.begin_index){const B=E[A].data;for(const N of this.begin_suppress_tokens)B[N]=-1/0}return E}}class u extends o{constructor(M,E){super(),this.eos_token_id=Array.isArray(M.eos_token_id)?M.eos_token_id[0]:M.eos_token_id,this.no_timestamps_token_id=M.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=E.length,E.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=M.max_initial_timestamp_index}_call(M,E){for(let A=0;A<M.length;++A){const B=E[A].data;if(B[this.no_timestamps_token_id]=-1/0,M[A].length===this.begin_index-1){B.fill(-1/0),B[this.timestamp_begin]=0;continue}const N=M[A].slice(this.begin_index),Q=N.length>=1&&N[N.length-1]>=this.timestamp_begin,H=N.length<2||N[N.length-2]>=this.timestamp_begin;if(Q&&(H?B.subarray(this.timestamp_begin).fill(-1/0):B.subarray(0,this.eos_token_id).fill(-1/0)),M[A].length===this.begin_index&&this.max_initial_timestamp_index!==null){const X=this.timestamp_begin+this.max_initial_timestamp_index;B.subarray(X+1).fill(-1/0)}const z=(0,n.log_softmax)(B),Z=Math.log(z.subarray(this.timestamp_begin).map(Math.exp).reduce((X,se)=>X+se)),q=(0,n.max)(z.subarray(0,this.timestamp_begin))[0];Z>q&&B.subarray(0,this.timestamp_begin).fill(-1/0)}return E}}class h extends o{constructor(M){super(),this.no_repeat_ngram_size=M}getNgrams(M){const E=M.length,A=[];for(let N=0;N<E+1-this.no_repeat_ngram_size;++N){const Q=[];for(let H=0;H<this.no_repeat_ngram_size;++H)Q.push(M[N+H]);A.push(Q.map(Number))}const B=new Map;for(const N of A){const Q=N.slice(0,N.length-1),H=JSON.stringify(Q),z=B.get(H)??[];z.push(N[N.length-1]),B.set(H,z)}return B}getGeneratedNgrams(M,E){const A=E.slice(E.length+1-this.no_repeat_ngram_size,E.length);return M.get(JSON.stringify(A.map(Number)))??[]}calcBannedNgramTokens(M){const E=[];if(M.length+1<this.no_repeat_ngram_size)return E;{const A=this.getNgrams(M);return this.getGeneratedNgrams(A,M)}}_call(M,E){for(let A=0;A<M.length;++A){const B=E[A].data,N=this.calcBannedNgramTokens(M[A]);for(const Q of N)B[Q]=-1/0}return E}}class w extends o{constructor(M){super(),this.penalty=M}_call(M,E){for(let A=0;A<M.length;++A){const B=E[A].data;for(const N of new Set(M[A])){const Q=Number(N);B[Q]<0?B[Q]*=this.penalty:B[Q]/=this.penalty}}return E}}class _ extends o{constructor(M,E){super(),this.min_length=M,this.eos_token_id=Array.isArray(E)?E:[E]}_call(M,E){for(let A=0;A<M.length;++A)if(M[A].length<this.min_length){const B=E[A].data;for(const N of this.eos_token_id)B[N]=-1/0}return E}}class C extends o{constructor(M,E,A){super(),this.prompt_length_to_skip=M,this.min_new_tokens=E,this.eos_token_id=Array.isArray(A)?A:[A]}_call(M,E){for(let A=0;A<M.length;++A)if(M[A].length-this.prompt_length_to_skip<this.min_new_tokens){const N=E[A].data;for(const Q of this.eos_token_id)N[Q]=-1/0}return E}}class F extends o{constructor(M,E){super(),this.bad_words_ids=M,this.eos_token_id=Array.isArray(E)?E:[E]}_call(M,E){for(let A=0;A<M.length;++A){const B=E[A].data,N=M[A];for(const Q of this.bad_words_ids){let H=!0;for(let z=1;z<=Q.length-1&&Q.length<N.length;++z)if(Q.at(-z-1)!=N.at(-z)){H=!1;break}H&&(B[Q.at(-1)]=-1/0)}}return E}}class T extends o{constructor(M){if(super(),M<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${M}.`);this.guidance_scale=M}_call(M,E){if(E.dims[0]!==2*M.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${E.dims[0]} for the logits and ${M.length} for the input ids.`);const A=M.length,B=E.slice([0,A],null),N=E.slice([A,E.dims[0]],null);for(let Q=0;Q<N.data.length;++Q)N.data[Q]+=(B.data[Q]-N.data[Q])*this.guidance_scale;return N}}class g extends i{constructor(M){super(),this.temperature=M}_call(M,E){const A=E.data;for(let B=0;B<A.length;++B)A[B]/=this.temperature;return E}}class $ extends i{constructor(M,{filter_value:E=-1/0,min_tokens_to_keep:A=1}={}){if(super(),M<0||M>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${M}`);if(!Number.isInteger(A)||A<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${A}`);this.top_p=M,this.filter_value=E,this.min_tokens_to_keep=A}}class P extends i{constructor(M,{filter_value:E=-1/0,min_tokens_to_keep:A=1}={}){if(super(),!Number.isInteger(M)||M<0)throw new Error(`\`top_k\` must be a positive integer, but is ${M}`);this.top_k=Math.max(M,A),this.filter_value=E}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>i});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends s.Callable{constructor(u){super(),this.generation_config=u}async _call(u){return this.sample(u)}async sample(u){throw Error("sample should be implemented in subclasses.")}getLogits(u,h){let w=u.dims.at(-1),_=u.data;if(h===-1)_=_.slice(-w);else{let C=h*w;_=_.slice(C,C+w)}return _}randomSelect(u){let h=0;for(let _=0;_<u.length;++_)h+=u[_];let w=Math.random()*h;for(let _=0;_<u.length;++_)if(w-=u[_],w<=0)return _;return 0}static getSampler(u){if(u.do_sample)return new l(u);if(u.num_beams>1)return new c(u);if(u.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${u.num_return_sequences}.`);return new a(u)}}class a extends i{async sample(u){const h=(0,o.max)(u.data)[1];return[[BigInt(h),0]]}}class l extends i{async sample(u){let h=u.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[w,_]=await(0,n.topk)(u,h),C=(0,o.softmax)(w.data);return Array.from({length:this.generation_config.num_beams},()=>{const F=this.randomSelect(C);return[_.data[F],Math.log(C[F])]})}}class c extends i{async sample(u){let h=u.dims.at(-1);this.generation_config.top_k>0&&(h=Math.min(this.generation_config.top_k,h));const[w,_]=await(0,n.topk)(u,h),C=(0,o.softmax)(w.data);return Array.from({length:this.generation_config.num_beams},(F,T)=>[_.data[T],Math.log(C[T])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>n,StoppingCriteriaList:()=>o});var s=t("./src/utils/generic.js");class n extends s.Callable{_call(p,u){throw Error("StoppingCriteria needs to be subclassed")}}class o extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof o?p=p.criteria:p instanceof n&&(p=[p]),this.criteria.push(...p)}_call(p,u){const h=new Array(p.length).fill(!1);for(const w of this.criteria){const _=w(p,u);for(let C=0;C<h.length;++C)h[C]||=_[C]}return h}[Symbol.iterator](){return this.criteria.values()}}class i extends n{constructor(p,u=null){super(),this.max_length=p,this.max_position_embeddings=u}_call(p){return p.map(u=>u.length>=this.max_length)}}class a extends n{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,u){return p.map(h=>{const w=h.at(-1);return this.eos_token_id.some(_=>w==_)})}}class l extends n{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,u){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),n=t("./src/tokenizers.js"),o=t("./src/env.js");class i{put(u){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=o.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends i{constructor(u,{skip_prompt:h=!1,callback_function:w=null,token_callback_function:_=null,skip_special_tokens:C=!0,decode_kwargs:F={},...T}={}){super(),this.tokenizer=u,this.skip_prompt=h,this.callback_function=w??a,this.token_callback_function=_,this.decode_kwargs={skip_special_tokens:C,...F,...T},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(u){if(u.length>1)throw Error("TextStreamer only supports batch size of 1");const h=this.next_tokens_are_prompt;if(h&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const w=u[0];this.token_callback_function?.(w),this.token_cache=(0,s.mergeArrays)(this.token_cache,w);const _=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let C;h||_.endsWith(`
`)?(C=_.slice(this.print_len),this.token_cache=[],this.print_len=0):_.length>0&&(0,n.is_chinese_char)(_.charCodeAt(_.length-1))?(C=_.slice(this.print_len),this.print_len+=C.length):(C=_.slice(this.print_len,_.lastIndexOf(" ")+1),this.print_len+=C.length),this.on_finalized_text(C,!1)}end(){let u;this.token_cache.length>0?(u=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):u="",this.next_tokens_are_prompt=!0,this.on_finalized_text(u,!0)}on_finalized_text(u,h){u.length>0&&this.callback_function?.(u),h&&this.callback_function===a&&o.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class c extends l{constructor(u,{skip_prompt:h=!1,callback_function:w=null,token_callback_function:_=null,on_chunk_start:C=null,on_chunk_end:F=null,on_finalize:T=null,time_precision:g=.02,skip_special_tokens:$=!0,decode_kwargs:P={}}={}){super(u,{skip_prompt:h,skip_special_tokens:$,callback_function:w,token_callback_function:_,decode_kwargs:P}),this.timestamp_begin=u.timestamp_begin,this.on_chunk_start=C,this.on_chunk_end=F,this.on_finalize=T,this.time_precision=g,this.waiting_for_timestamp=!1}put(u){if(u.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const h=u[0];if(h.length===1){const w=Number(h[0])-this.timestamp_begin;if(w>=0){const _=w*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(_):this.on_chunk_start?.(_),this.waiting_for_timestamp=!this.waiting_for_timestamp,u=[[]]}}return super.put(u)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>ca,ASTModel:()=>xo,ASTPreTrainedModel:()=>To,AlbertForMaskedLM:()=>G,AlbertForQuestionAnswering:()=>k,AlbertForSequenceClassification:()=>de,AlbertModel:()=>Dn,AlbertPreTrainedModel:()=>ws,AutoModel:()=>Z0,AutoModelForAudioClassification:()=>wb,AutoModelForAudioFrameClassification:()=>Mb,AutoModelForAudioTextToText:()=>$b,AutoModelForCTC:()=>gb,AutoModelForCausalLM:()=>ib,AutoModelForDepthEstimation:()=>xb,AutoModelForDocumentQuestionAnswering:()=>bb,AutoModelForImageClassification:()=>cb,AutoModelForImageFeatureExtraction:()=>Cb,AutoModelForImageMatting:()=>vb,AutoModelForImageSegmentation:()=>ub,AutoModelForImageTextToText:()=>Sb,AutoModelForImageToImage:()=>Tb,AutoModelForMaskGeneration:()=>_b,AutoModelForMaskedLM:()=>ab,AutoModelForNormalEstimation:()=>Eb,AutoModelForObjectDetection:()=>mb,AutoModelForPoseEstimation:()=>Pb,AutoModelForQuestionAnswering:()=>lb,AutoModelForSemanticSegmentation:()=>pb,AutoModelForSeq2SeqLM:()=>rb,AutoModelForSequenceClassification:()=>eb,AutoModelForSpeechSeq2Seq:()=>sb,AutoModelForTextToSpectrogram:()=>nb,AutoModelForTextToWaveform:()=>ob,AutoModelForTokenClassification:()=>tb,AutoModelForUniversalSegmentation:()=>hb,AutoModelForVision2Seq:()=>db,AutoModelForXVector:()=>yb,AutoModelForZeroShotObjectDetection:()=>fb,BartForConditionalGeneration:()=>Kt,BartForSequenceClassification:()=>Ut,BartModel:()=>Bt,BartPretrainedModel:()=>mt,BaseModelOutput:()=>Pe,BeitForImageClassification:()=>rl,BeitModel:()=>tl,BeitPreTrainedModel:()=>Oi,BertForMaskedLM:()=>Ae,BertForQuestionAnswering:()=>Ve,BertForSequenceClassification:()=>Oe,BertForTokenClassification:()=>Ue,BertModel:()=>ke,BertPreTrainedModel:()=>ve,BlenderbotForConditionalGeneration:()=>nr,BlenderbotModel:()=>Rt,BlenderbotPreTrainedModel:()=>Ir,BlenderbotSmallForConditionalGeneration:()=>mr,BlenderbotSmallModel:()=>Sr,BlenderbotSmallPreTrainedModel:()=>wr,BloomForCausalLM:()=>wi,BloomModel:()=>gi,BloomPreTrainedModel:()=>io,CLIPModel:()=>ya,CLIPPreTrainedModel:()=>Ss,CLIPSegForImageSegmentation:()=>$a,CLIPSegModel:()=>Sa,CLIPSegPreTrainedModel:()=>Nn,CLIPTextModel:()=>td,CLIPTextModelWithProjection:()=>Bn,CLIPVisionModel:()=>Ma,CLIPVisionModelWithProjection:()=>ba,CamembertForMaskedLM:()=>ps,CamembertForQuestionAnswering:()=>fs,CamembertForSequenceClassification:()=>hs,CamembertForTokenClassification:()=>ms,CamembertModel:()=>bs,CamembertPreTrainedModel:()=>Lr,CausalLMOutput:()=>wn,CausalLMOutputWithPast:()=>Ab,ChineseCLIPModel:()=>Pa,ChineseCLIPPreTrainedModel:()=>Ea,ClapAudioModelWithProjection:()=>Jp,ClapModel:()=>Qp,ClapPreTrainedModel:()=>fl,ClapTextModelWithProjection:()=>Xp,CodeGenForCausalLM:()=>Kn,CodeGenModel:()=>fn,CodeGenPreTrainedModel:()=>Fr,CohereForCausalLM:()=>ei,CohereModel:()=>Zo,CoherePreTrainedModel:()=>Yn,ConvBertForMaskedLM:()=>Lt,ConvBertForQuestionAnswering:()=>Vr,ConvBertForSequenceClassification:()=>pr,ConvBertForTokenClassification:()=>cs,ConvBertModel:()=>rr,ConvBertPreTrainedModel:()=>Mt,ConvNextForImageClassification:()=>Gu,ConvNextModel:()=>Wu,ConvNextPreTrainedModel:()=>od,ConvNextV2ForImageClassification:()=>Hu,ConvNextV2Model:()=>Ku,ConvNextV2PreTrainedModel:()=>id,DPTForDepthEstimation:()=>Pu,DPTModel:()=>Eu,DPTPreTrainedModel:()=>rd,DacDecoderModel:()=>Rh,DacDecoderOutput:()=>Lh,DacEncoderModel:()=>Bh,DacEncoderOutput:()=>Dh,DacModel:()=>zh,DacPreTrainedModel:()=>vl,DebertaForMaskedLM:()=>Je,DebertaForQuestionAnswering:()=>Is,DebertaForSequenceClassification:()=>Qe,DebertaForTokenClassification:()=>ar,DebertaModel:()=>Re,DebertaPreTrainedModel:()=>ir,DebertaV2ForMaskedLM:()=>Fs,DebertaV2ForQuestionAnswering:()=>Ds,DebertaV2ForSequenceClassification:()=>vs,DebertaV2ForTokenClassification:()=>Os,DebertaV2Model:()=>Gr,DebertaV2PreTrainedModel:()=>Wr,DecisionTransformerModel:()=>wh,DecisionTransformerPreTrainedModel:()=>gh,DeiTForImageClassification:()=>S,DeiTModel:()=>b,DeiTPreTrainedModel:()=>m,DepthAnythingForDepthEstimation:()=>Su,DepthAnythingPreTrainedModel:()=>Cu,DepthProForDepthEstimation:()=>Fu,DepthProPreTrainedModel:()=>Iu,DetrForObjectDetection:()=>nl,DetrForSegmentation:()=>Di,DetrModel:()=>sl,DetrObjectDetectionOutput:()=>Li,DetrPreTrainedModel:()=>po,DetrSegmentationOutput:()=>ol,Dinov2ForImageClassification:()=>Qu,Dinov2Model:()=>qu,Dinov2PreTrainedModel:()=>ad,Dinov2WithRegistersForImageClassification:()=>Ju,Dinov2WithRegistersModel:()=>Xu,Dinov2WithRegistersPreTrainedModel:()=>ld,DistilBertForMaskedLM:()=>Rs,DistilBertForQuestionAnswering:()=>Bs,DistilBertForSequenceClassification:()=>Ls,DistilBertForTokenClassification:()=>zs,DistilBertModel:()=>_s,DistilBertPreTrainedModel:()=>Kr,DonutSwinModel:()=>Uu,DonutSwinPreTrainedModel:()=>Vu,EfficientNetForImageClassification:()=>nh,EfficientNetModel:()=>sh,EfficientNetPreTrainedModel:()=>wd,ElectraForMaskedLM:()=>Ms,ElectraForQuestionAnswering:()=>Ur,ElectraForSequenceClassification:()=>us,ElectraForTokenClassification:()=>it,ElectraModel:()=>Dr,ElectraPreTrainedModel:()=>kr,EsmForMaskedLM:()=>Ar,EsmForSequenceClassification:()=>tn,EsmForTokenClassification:()=>br,EsmModel:()=>Ns,EsmPreTrainedModel:()=>Yr,ExaoneForCausalLM:()=>ht,ExaoneModel:()=>qn,ExaonePreTrainedModel:()=>ct,FalconForCausalLM:()=>qp,FalconModel:()=>Hp,FalconPreTrainedModel:()=>fd,FastViTForImageClassification:()=>Wa,FastViTModel:()=>Ua,FastViTPreTrainedModel:()=>$i,Florence2ForConditionalGeneration:()=>Ao,Florence2PreTrainedModel:()=>ko,GLPNForDepthEstimation:()=>ju,GLPNModel:()=>Nu,GLPNPreTrainedModel:()=>nd,GPT2LMHeadModel:()=>Oo,GPT2Model:()=>jn,GPT2PreTrainedModel:()=>hn,GPTBigCodeForCausalLM:()=>mn,GPTBigCodeModel:()=>Ro,GPTBigCodePreTrainedModel:()=>Gn,GPTJForCausalLM:()=>Ia,GPTJModel:()=>Fe,GPTJPreTrainedModel:()=>Gs,GPTNeoForCausalLM:()=>ka,GPTNeoModel:()=>zo,GPTNeoPreTrainedModel:()=>Un,GPTNeoXForCausalLM:()=>Bo,GPTNeoXModel:()=>Aa,GPTNeoXPreTrainedModel:()=>Wn,Gemma2ForCausalLM:()=>ni,Gemma2Model:()=>si,Gemma2PreTrainedModel:()=>eo,Gemma3ForCausalLM:()=>ii,Gemma3Model:()=>oi,Gemma3PreTrainedModel:()=>to,GemmaForCausalLM:()=>ri,GemmaModel:()=>ti,GemmaPreTrainedModel:()=>Zn,GlmForCausalLM:()=>Wo,GlmModel:()=>Ks,GlmPreTrainedModel:()=>pt,GraniteForCausalLM:()=>Yo,GraniteModel:()=>Jo,GranitePreTrainedModel:()=>Jn,GroundingDinoForObjectDetection:()=>Zu,GroundingDinoPreTrainedModel:()=>Yu,GroupViTModel:()=>Va,GroupViTPreTrainedModel:()=>ja,HeliumForCausalLM:()=>Uo,HeliumModel:()=>Vo,HeliumPreTrainedModel:()=>_n,HieraForImageClassification:()=>re,HieraModel:()=>U,HieraPreTrainedModel:()=>I,HubertForCTC:()=>$p,HubertForSequenceClassification:()=>kp,HubertModel:()=>Sp,HubertPreTrainedModel:()=>N0,IJepaForImageClassification:()=>Pi,IJepaModel:()=>Ei,IJepaPreTrainedModel:()=>uo,Idefics3ForConditionalGeneration:()=>un,Idefics3PreTrainedModel:()=>Io,ImageMattingOutput:()=>_m,JAISLMHeadModel:()=>Lo,JAISModel:()=>Do,JAISPreTrainedModel:()=>Vn,JinaCLIPModel:()=>Ca,JinaCLIPPreTrainedModel:()=>Rn,JinaCLIPTextModel:()=>pn,JinaCLIPVisionModel:()=>Ws,LiteWhisperForConditionalGeneration:()=>pa,LlamaForCausalLM:()=>jo,LlamaModel:()=>No,LlamaPreTrainedModel:()=>Hn,LlavaForConditionalGeneration:()=>Ln,LlavaOnevisionForConditionalGeneration:()=>fa,LlavaPreTrainedModel:()=>ma,LongT5ForConditionalGeneration:()=>He,LongT5Model:()=>Ke,LongT5PreTrainedModel:()=>$e,M2M100ForConditionalGeneration:()=>dp,M2M100Model:()=>lp,M2M100PreTrainedModel:()=>ud,MBartForCausalLM:()=>gr,MBartForConditionalGeneration:()=>zr,MBartForSequenceClassification:()=>Ps,MBartModel:()=>sr,MBartPreTrainedModel:()=>Ht,MPNetForMaskedLM:()=>Ts,MPNetForQuestionAnswering:()=>lr,MPNetForSequenceClassification:()=>Cr,MPNetForTokenClassification:()=>xs,MPNetModel:()=>sn,MPNetPreTrainedModel:()=>hr,MT5ForConditionalGeneration:()=>vt,MT5Model:()=>We,MT5PreTrainedModel:()=>qe,MarianMTModel:()=>ap,MarianModel:()=>ip,MarianPreTrainedModel:()=>cd,MaskFormerForInstanceSegmentation:()=>Ru,MaskFormerModel:()=>Bu,MaskFormerPreTrainedModel:()=>sd,MaskedLMOutput:()=>fr,Metric3DForDepthEstimation:()=>Du,Metric3DPreTrainedModel:()=>Ou,Metric3Dv2ForDepthEstimation:()=>zu,Metric3Dv2PreTrainedModel:()=>Lu,MgpstrForSceneTextRecognition:()=>Th,MgpstrModelOutput:()=>bh,MgpstrPreTrainedModel:()=>vh,MimiDecoderModel:()=>Oh,MimiDecoderOutput:()=>Ah,MimiEncoderModel:()=>Fh,MimiEncoderOutput:()=>kh,MimiModel:()=>Ih,MimiPreTrainedModel:()=>bl,MistralForCausalLM:()=>Wp,MistralModel:()=>Up,MistralPreTrainedModel:()=>hd,MobileBertForMaskedLM:()=>Pr,MobileBertForQuestionAnswering:()=>rn,MobileBertForSequenceClassification:()=>js,MobileBertModel:()=>gs,MobileBertPreTrainedModel:()=>Hr,MobileLLMForCausalLM:()=>Ko,MobileLLMModel:()=>Go,MobileLLMPreTrainedModel:()=>Qn,MobileNetV1ForImageClassification:()=>ih,MobileNetV1ForSemanticSegmentation:()=>ah,MobileNetV1Model:()=>oh,MobileNetV1PreTrainedModel:()=>gl,MobileNetV2ForImageClassification:()=>dh,MobileNetV2ForSemanticSegmentation:()=>ch,MobileNetV2Model:()=>lh,MobileNetV2PreTrainedModel:()=>wl,MobileNetV3ForImageClassification:()=>ph,MobileNetV3ForSemanticSegmentation:()=>hh,MobileNetV3Model:()=>uh,MobileNetV3PreTrainedModel:()=>yl,MobileNetV4ForImageClassification:()=>fh,MobileNetV4ForSemanticSegmentation:()=>_h,MobileNetV4Model:()=>mh,MobileNetV4PreTrainedModel:()=>Ml,MobileViTForImageClassification:()=>qa,MobileViTModel:()=>Ha,MobileViTPreTrainedModel:()=>ki,MobileViTV2ForImageClassification:()=>Xa,MobileViTV2Model:()=>Qa,MobileViTV2PreTrainedModel:()=>Ai,ModelOutput:()=>he,ModernBertForMaskedLM:()=>R,ModernBertForSequenceClassification:()=>te,ModernBertForTokenClassification:()=>oe,ModernBertModel:()=>Y,ModernBertPreTrainedModel:()=>D,Moondream1ForConditionalGeneration:()=>$o,MoonshineForConditionalGeneration:()=>ha,MoonshineModel:()=>ed,MoonshinePreTrainedModel:()=>Co,MptForCausalLM:()=>Mi,MptModel:()=>yi,MptPreTrainedModel:()=>ao,MultiModalityCausalLM:()=>Mh,MultiModalityPreTrainedModel:()=>yh,MusicgenForCausalLM:()=>W0,MusicgenForConditionalGeneration:()=>Md,MusicgenModel:()=>U0,MusicgenPreTrainedModel:()=>yd,NomicBertModel:()=>Ce,NomicBertPreTrainedModel:()=>Te,OPTForCausalLM:()=>vi,OPTModel:()=>bi,OPTPreTrainedModel:()=>lo,Olmo2ForCausalLM:()=>Xo,Olmo2Model:()=>Qo,Olmo2PreTrainedModel:()=>gn,OlmoForCausalLM:()=>qo,OlmoModel:()=>Ho,OlmoPreTrainedModel:()=>Xn,OpenELMForCausalLM:()=>li,OpenELMModel:()=>ai,OpenELMPreTrainedModel:()=>ro,OwlViTForObjectDetection:()=>Ya,OwlViTModel:()=>Ja,OwlViTPreTrainedModel:()=>Ii,Owlv2ForObjectDetection:()=>el,Owlv2Model:()=>Za,Owlv2PreTrainedModel:()=>Fi,PaliGemmaForConditionalGeneration:()=>ga,PaliGemmaPreTrainedModel:()=>_a,PatchTSMixerForPrediction:()=>Ch,PatchTSMixerModel:()=>Ph,PatchTSMixerPreTrainedModel:()=>vd,PatchTSTForPrediction:()=>Eh,PatchTSTModel:()=>xh,PatchTSTPreTrainedModel:()=>bd,Phi3ForCausalLM:()=>_i,Phi3Model:()=>fi,Phi3PreTrainedModel:()=>oo,Phi3VForCausalLM:()=>zn,Phi3VPreTrainedModel:()=>wa,PhiForCausalLM:()=>mi,PhiModel:()=>hi,PhiPreTrainedModel:()=>no,PreTrainedModel:()=>W,PretrainedMixin:()=>At,PvtForImageClassification:()=>La,PvtModel:()=>Da,PvtPreTrainedModel:()=>Ci,PyAnnoteForAudioFrameClassification:()=>fp,PyAnnoteModel:()=>mp,PyAnnotePreTrainedModel:()=>pd,QuestionAnsweringModelOutput:()=>Tr,Qwen2ForCausalLM:()=>ci,Qwen2Model:()=>di,Qwen2PreTrainedModel:()=>so,Qwen2VLForConditionalGeneration:()=>pi,Qwen2VLPreTrainedModel:()=>ui,RTDetrForObjectDetection:()=>al,RTDetrModel:()=>il,RTDetrObjectDetectionOutput:()=>ll,RTDetrPreTrainedModel:()=>zi,ResNetForImageClassification:()=>Be,ResNetModel:()=>xe,ResNetPreTrainedModel:()=>fe,RoFormerForMaskedLM:()=>Le,RoFormerForQuestionAnswering:()=>Tt,RoFormerForSequenceClassification:()=>ot,RoFormerForTokenClassification:()=>lt,RoFormerModel:()=>we,RoFormerPreTrainedModel:()=>De,RobertaForMaskedLM:()=>qt,RobertaForQuestionAnswering:()=>Yt,RobertaForSequenceClassification:()=>Wt,RobertaForTokenClassification:()=>Qt,RobertaModel:()=>Br,RobertaPreTrainedModel:()=>It,SamImageSegmentationOutput:()=>op,SamModel:()=>np,SamPreTrainedModel:()=>sp,SapiensForDepthEstimation:()=>ku,SapiensForNormalEstimation:()=>Au,SapiensForSemanticSegmentation:()=>$u,SapiensPreTrainedModel:()=>ul,SegformerForImageClassification:()=>Zp,SegformerForSemanticSegmentation:()=>eh,SegformerModel:()=>V0,SegformerPreTrainedModel:()=>_l,Seq2SeqLMOutput:()=>kb,SequenceClassifierOutput:()=>_t,SiglipModel:()=>va,SiglipPreTrainedModel:()=>Fo,SiglipTextModel:()=>Ta,SiglipVisionModel:()=>xa,SmolVLMForConditionalGeneration:()=>Cs,SnacDecoderModel:()=>Vh,SnacEncoderModel:()=>jh,SnacModel:()=>Nh,SnacPreTrainedModel:()=>Tl,SpeechT5ForSpeechToText:()=>Bp,SpeechT5ForTextToSpeech:()=>Rp,SpeechT5HifiGan:()=>Np,SpeechT5Model:()=>j0,SpeechT5PreTrainedModel:()=>ml,SqueezeBertForMaskedLM:()=>nn,SqueezeBertForQuestionAnswering:()=>an,SqueezeBertForSequenceClassification:()=>on,SqueezeBertModel:()=>Es,SqueezeBertPreTrainedModel:()=>er,StableLmForCausalLM:()=>rh,StableLmModel:()=>th,StableLmPreTrainedModel:()=>gd,Starcoder2ForCausalLM:()=>Kp,Starcoder2Model:()=>Gp,Starcoder2PreTrainedModel:()=>md,StyleTextToSpeech2Model:()=>zp,StyleTextToSpeech2PreTrainedModel:()=>Lp,Swin2SRForImageSuperResolution:()=>xu,Swin2SRModel:()=>Hs,Swin2SRPreTrainedModel:()=>vr,SwinForImageClassification:()=>ft,SwinForSemanticSegmentation:()=>Ot,SwinModel:()=>rt,SwinPreTrainedModel:()=>Xe,T5ForConditionalGeneration:()=>_e,T5Model:()=>ie,T5PreTrainedModel:()=>ee,TableTransformerForObjectDetection:()=>cl,TableTransformerModel:()=>dl,TableTransformerObjectDetectionOutput:()=>d,TableTransformerPreTrainedModel:()=>Bi,TokenClassifierOutput:()=>dr,TrOCRForCausalLM:()=>Vp,TrOCRPreTrainedModel:()=>jp,UltravoxModel:()=>$h,UltravoxPreTrainedModel:()=>Sh,UniSpeechForCTC:()=>yp,UniSpeechForSequenceClassification:()=>Mp,UniSpeechModel:()=>wp,UniSpeechPreTrainedModel:()=>pl,UniSpeechSatForAudioFrameClassification:()=>xp,UniSpeechSatForCTC:()=>vp,UniSpeechSatForSequenceClassification:()=>Tp,UniSpeechSatModel:()=>bp,UniSpeechSatPreTrainedModel:()=>Ri,ViTForImageClassification:()=>xi,ViTMAEModel:()=>Ba,ViTMAEPreTrainedModel:()=>za,ViTMSNForImageClassification:()=>Na,ViTMSNModel:()=>Ra,ViTMSNPreTrainedModel:()=>Si,ViTModel:()=>Ti,ViTPreTrainedModel:()=>co,VisionEncoderDecoderModel:()=>So,VitMatteForImageMatting:()=>Ka,VitMattePreTrainedModel:()=>Ga,VitPoseForPoseEstimation:()=>Oa,VitPosePreTrainedModel:()=>Fa,VitsModel:()=>_d,VitsModelOutput:()=>gm,VitsPreTrainedModel:()=>Yp,Wav2Vec2BertForCTC:()=>Pp,Wav2Vec2BertForSequenceClassification:()=>Cp,Wav2Vec2BertModel:()=>Ep,Wav2Vec2BertPreTrainedModel:()=>hl,Wav2Vec2ForAudioFrameClassification:()=>hp,Wav2Vec2ForCTC:()=>up,Wav2Vec2ForSequenceClassification:()=>pp,Wav2Vec2Model:()=>cp,Wav2Vec2PreTrainedModel:()=>qs,WavLMForAudioFrameClassification:()=>Dp,WavLMForCTC:()=>Ip,WavLMForSequenceClassification:()=>Fp,WavLMForXVector:()=>Op,WavLMModel:()=>Ap,WavLMPreTrainedModel:()=>ho,WeSpeakerResNetModel:()=>gp,WeSpeakerResNetPreTrainedModel:()=>_p,WhisperForConditionalGeneration:()=>Po,WhisperModel:()=>ua,WhisperPreTrainedModel:()=>Eo,XLMForQuestionAnswering:()=>ia,XLMForSequenceClassification:()=>oa,XLMForTokenClassification:()=>dn,XLMModel:()=>Vs,XLMPreTrainedModel:()=>tr,XLMRobertaForMaskedLM:()=>aa,XLMRobertaForQuestionAnswering:()=>da,XLMRobertaForSequenceClassification:()=>vo,XLMRobertaForTokenClassification:()=>la,XLMRobertaModel:()=>cn,XLMRobertaPreTrainedModel:()=>Us,XLMWithLMHeadModel:()=>ln,XVectorOutput:()=>fm,YolosForObjectDetection:()=>tp,YolosModel:()=>ep,YolosObjectDetectionOutput:()=>rp,YolosPreTrainedModel:()=>dd});var s=t("./src/configs.js"),n=t("./src/backends/onnx.js"),o=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),u=t("./src/generation/configuration_utils.js"),h=t("./src/utils/tensor.js"),w=t("./src/utils/image.js"),_=t("./src/utils/maths.js"),C=t("./src/generation/stopping_criteria.js"),F=t("./src/generation/logits_sampler.js"),T=t("./src/env.js"),g=t("./src/models/whisper/generation_whisper.js"),$=t("./src/models/whisper/common_whisper.js");const P={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},y=new Map,M=new Map,E=new Map;async function A(v,x,j){const le=j.config?.["transformers.js_config"]??{};let me=j.device??le.device;me&&typeof me!="string"&&(me.hasOwnProperty(x)?me=me[x]:(console.warn(`device not specified for "${x}". Using the default device.`),me=null));const ge=me??(T.apis.IS_NODE_ENV?"cpu":"wasm"),Ie=(0,n.deviceToExecutionProviders)(ge);let ze=j.dtype??le.dtype;if(typeof ze!="string"&&(ze&&ze.hasOwnProperty(x)?ze=ze[x]:(ze=o.DEFAULT_DEVICE_DTYPE_MAPPING[ge]??o.DATA_TYPES.fp32,console.warn(`dtype not specified for "${x}". Using the default dtype (${ze}) for this device (${ge}).`))),ze===o.DATA_TYPES.auto){let Et=le.dtype;typeof Et!="string"&&(Et=Et[x]),Et&&Et!==o.DATA_TYPES.auto&&o.DATA_TYPES.hasOwnProperty(Et)?ze=Et:ze=o.DEFAULT_DEVICE_DTYPE_MAPPING[ge]??o.DATA_TYPES.fp32}const Ge=ze;if(o.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Ge)){if(Ge===o.DATA_TYPES.fp16&&ge==="webgpu"&&!await(0,o.isWebGpuFp16Supported)())throw new Error(`The device (${ge}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Ge}. Should be one of: ${Object.keys(o.DATA_TYPES).join(", ")}`);const Ye=le.kv_cache_dtype?typeof le.kv_cache_dtype=="string"?le.kv_cache_dtype:le.kv_cache_dtype[Ge]??"float32":void 0;if(Ye&&!["float32","float16"].includes(Ye))throw new Error(`Invalid kv_cache_dtype: ${Ye}. Should be one of: float32, float16`);const yt={dtype:Ge,kv_cache_dtype:Ye},bt=o.DEFAULT_DTYPE_SUFFIX_MAPPING[Ge],st=`${x}${bt}.onnx`,nt=`${j.subfolder??""}/${st}`,Pt={...j.session_options};Pt.executionProviders??=Ie;const at=le.free_dimension_overrides;at?Pt.freeDimensionOverrides??=at:ge.startsWith("webnn")&&!Pt.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const dt=(0,l.getModelFile)(v,nt,!0,j,T.apis.IS_NODE_ENV),xt=j.use_external_data_format??le.use_external_data_format;let Dt=[];if(xt){let Et;typeof xt=="object"?xt.hasOwnProperty(st)?Et=xt[st]:xt.hasOwnProperty(x)?Et=xt[x]:Et=!1:Et=xt;const Vt=+Et;if(Vt>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Vt}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let zt=0;zt<Vt;++zt){const Zt=`${st}_data${zt===0?"":"_"+zt}`,yr=`${j.subfolder??""}/${Zt}`;Dt.push(new Promise(async(Or,xl)=>{const xr=await(0,l.getModelFile)(v,yr,!0,j,T.apis.IS_NODE_ENV);Or(xr instanceof Uint8Array?{path:Zt,data:xr}:Zt)}))}}else Pt.externalData!==void 0&&(Dt=Pt.externalData.map(async Et=>{if(typeof Et.data=="string"){const Vt=await(0,l.getModelFile)(v,Et.data,!0,j);return{...Et,data:Vt}}return Et}));if(Dt.length>0){const Et=await Promise.all(Dt);T.apis.IS_NODE_ENV||(Pt.externalData=Et)}if(ge==="webgpu"){const Et=(0,s.getKeyValueShapes)(j.config,{prefix:"present"});if(Object.keys(Et).length>0&&!(0,n.isONNXProxy)()){const Vt={};for(const zt in Et)Vt[zt]="gpu-buffer";Pt.preferredOutputLocation=Vt}}return{buffer_or_path:await dt,session_options:Pt,session_config:yt}}async function B(v,x,j){return Object.fromEntries(await Promise.all(Object.keys(x).map(async le=>{const{buffer_or_path:me,session_options:ge,session_config:Ie}=await A(v,x[le],j),ze=await(0,n.createInferenceSession)(me,ge,Ie);return[le,ze]})))}async function N(v,x,j){return Object.fromEntries(await Promise.all(Object.keys(x).map(async le=>{const me=await(0,l.getModelJSON)(v,x[le],!1,j);return[le,me]})))}function Q(v,x){const j=Object.create(null),le=[];for(const Ie of v.inputNames){const ze=x[Ie];if(!(ze instanceof h.Tensor)){le.push(Ie);continue}j[Ie]=(0,n.isONNXProxy)()?ze.clone():ze}if(le.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${le.join(", ")}.`);const me=Object.keys(x).length,ge=v.inputNames.length;if(me>ge){let Ie=Object.keys(x).filter(ze=>!v.inputNames.includes(ze));console.warn(`WARNING: Too many inputs were provided (${me} > ${ge}). The following inputs will be ignored: "${Ie.join(", ")}".`)}return j}async function H(v,x){const j=Q(v,x);try{const le=Object.fromEntries(Object.entries(j).map(([ge,Ie])=>[ge,Ie.ort_tensor]));let me=await v.run(le);return me=z(me),me}catch(le){const me=Object.fromEntries(Object.entries(j).map(([ge,{type:Ie,dims:ze,data:Ge}])=>[ge,{type:Ie,dims:ze,data:Ge}]));throw console.error(`An error occurred during model execution: "${le}".`),console.error("Inputs given to model:",me),le}}function z(v){for(let x in v)(0,n.isONNXTensor)(v[x])?v[x]=new h.Tensor(v[x]):typeof v[x]=="object"&&z(v[x]);return v}function Z(v){if(v instanceof h.Tensor)return v;if(v.length===0)throw Error("items must be non-empty");if(Array.isArray(v[0])){if(v.some(x=>x.length!==v[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new h.Tensor("int64",BigInt64Array.from(v.flat().map(x=>BigInt(x))),[v.length,v[0].length])}else return new h.Tensor("int64",BigInt64Array.from(v.map(x=>BigInt(x))),[1,v.length])}function q(v){return new h.Tensor("bool",[v],[1])}async function X(v,x){let{encoder_outputs:j,input_ids:le,decoder_input_ids:me,...ge}=x;if(!j){const ze=(0,a.pick)(x,v.sessions.model.inputNames);j=(await se(v,ze)).last_hidden_state}return ge.input_ids=me,ge.encoder_hidden_states=j,v.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(ge.encoder_attention_mask=x.attention_mask),await ae(v,ge,!0)}async function se(v,x){const j=v.sessions.model,le=(0,a.pick)(x,j.inputNames);if(j.inputNames.includes("inputs_embeds")&&!le.inputs_embeds){if(!x.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");le.inputs_embeds=await v.encode_text({input_ids:x.input_ids})}if(j.inputNames.includes("token_type_ids")&&!le.token_type_ids){if(!le.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");le.token_type_ids=(0,h.zeros_like)(le.input_ids)}if(j.inputNames.includes("pixel_mask")&&!le.pixel_mask){if(!le.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const me=le.pixel_values.dims;le.pixel_mask=(0,h.ones)([me[0],me[2],me[3]])}return await H(j,le)}async function ne(v,x){const j=await v.encode(x);return await v.decode(j)}async function ae(v,x,j=!1){const le=v.sessions[j?"decoder_model_merged":"model"],{past_key_values:me,...ge}=x;if(le.inputNames.includes("use_cache_branch")&&(ge.use_cache_branch=q(!!me)),le.inputNames.includes("position_ids")&&ge.attention_mask&&!ge.position_ids){const ze=["paligemma","gemma3_text","gemma3"].includes(v.config.model_type)?1:0;ge.position_ids=ue(ge,me,ze)}v.addPastKeyValues(ge,me);const Ie=(0,a.pick)(ge,le.inputNames);return await H(le,Ie)}function pe({modality_token_id:v,inputs_embeds:x,modality_features:j,input_ids:le,attention_mask:me}){const ge=le.tolist().map(Ye=>Ye.reduce((yt,bt,st)=>(bt==v&&yt.push(st),yt),[])),Ie=ge.reduce((Ye,yt)=>Ye+yt.length,0),ze=j.dims[0];if(Ie!==ze)throw new Error(`Number of tokens and features do not match: tokens: ${Ie}, features ${ze}`);let Ge=0;for(let Ye=0;Ye<ge.length;++Ye){const yt=ge[Ye],bt=x[Ye];for(let st=0;st<yt.length;++st)bt[yt[st]].data.set(j[Ge++].data)}return{inputs_embeds:x,attention_mask:me}}function V({image_token_id:v,inputs_embeds:x,image_features:j,input_ids:le,attention_mask:me}){return pe({modality_token_id:v,inputs_embeds:x,modality_features:j,input_ids:le,attention_mask:me})}function L({audio_token_id:v,inputs_embeds:x,audio_features:j,input_ids:le,attention_mask:me}){return pe({modality_token_id:v,inputs_embeds:x,modality_features:j,input_ids:le,attention_mask:me})}async function O(v,{encode_function:x,merge_function:j,modality_input_name:le,modality_output_name:me,input_ids:ge=null,attention_mask:Ie=null,position_ids:ze=null,inputs_embeds:Ge=null,past_key_values:Ye=null,generation_config:yt=null,logits_processor:bt=null,...st}){const nt=st[le];if(!Ge){if(Ge=await v.encode_text({input_ids:ge,...st}),nt&&ge.dims[1]!==1){const at=await x({[le]:nt,...st});({inputs_embeds:Ge,attention_mask:Ie}=j({[me]:at,inputs_embeds:Ge,input_ids:ge,attention_mask:Ie}))}else if(Ye&&nt&&ge.dims[1]===1){const at=ge.dims[1],dt=Object.values(Ye)[0].dims.at(-2);Ie=(0,h.cat)([(0,h.ones)([ge.dims[0],dt]),Ie.slice(null,[Ie.dims[1]-at,Ie.dims[1]])],1)}}if(!ze&&v.config.model_type==="qwen2_vl"){const{image_grid_thw:at,video_grid_thw:dt}=st;[ze]=v.get_rope_index(ge,at,dt,Ie)}return await ae(v,{inputs_embeds:Ge,past_key_values:Ye,attention_mask:Ie,position_ids:ze,generation_config:yt,logits_processor:bt},!0)}async function J(v,x){return await O(v,{...x,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:v.encode_audio.bind(v),merge_function:v._merge_input_ids_with_audio_features.bind(v)})}async function ce(v,x){return await O(v,{...x,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:v.encode_image.bind(v),merge_function:v._merge_input_ids_with_image_features.bind(v)})}function be(v,x=0){const[j,le]=v.dims,me=v.data,ge=new BigInt64Array(me.length);for(let Ie=0;Ie<j;++Ie){const ze=Ie*le;let Ge=BigInt(x);for(let Ye=0;Ye<le;++Ye){const yt=ze+Ye;me[yt]===0n?ge[yt]=BigInt(1):(ge[yt]=Ge,Ge+=me[yt])}}return{data:ge,dims:v.dims}}function ue(v,x=null,j=0){const{input_ids:le,inputs_embeds:me,attention_mask:ge}=v,{data:Ie,dims:ze}=be(ge,j);let Ge=new h.Tensor("int64",Ie,ze);if(x){const Ye=-(le??me).dims.at(1);Ge=Ge.slice(null,[Ye,null])}return Ge}function Ee(v,x,j,le){if(j.past_key_values){const me=Object.values(j.past_key_values)[0].dims.at(-2),{input_ids:ge,attention_mask:Ie}=j;if(!(Ie&&Ie.dims[1]>ge.dims[1])){if(me<ge.dims[1])j.input_ids=ge.slice(null,[me,null]);else if(v.config.image_token_index!=null&&ge.data.some(ze=>ze==v.config.image_token_index)){const ze=v.config.num_image_tokens;if(!ze)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ge=ge.dims[1]-(me-ze);j.input_ids=ge.slice(null,[-Ge,null]),j.attention_mask=(0,h.ones)([1,me+Ge])}}}return j}function Ne(v,x,j,le){return j.past_key_values&&(x=x.map(me=>[me.at(-1)])),{...j,decoder_input_ids:Z(x)}}function ye(v,...x){return v.config.is_encoder_decoder?Ne(v,...x):Ee(v,...x)}function K(v,x,j,le){const me=!!j.past_key_values;return le.guidance_scale!==null&&le.guidance_scale>1&&(me?j.input_ids=(0,h.cat)([j.input_ids,j.input_ids],0):(j.input_ids=(0,h.cat)([j.input_ids,(0,h.full_like)(j.input_ids,BigInt(le.pad_token_id))],0),j.attention_mask=(0,h.cat)([j.attention_mask,(0,h.full_like)(j.attention_mask,0n)],0))),(me||!j.pixel_values)&&(j.pixel_values=(0,h.full)([0,0,3,384,384],1)),me&&(j.images_seq_mask=new h.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),j.images_emb_mask=new h.Tensor("bool",new Array(0).fill(!1),[1,1,0])),j}class W extends i.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(x,j,le){super(),this.config=x,this.sessions=j,this.configs=le;const me=E.get(this.constructor),ge=y.get(me);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ge){case P.DecoderOnly:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=Ee;break;case P.Seq2Seq:case P.Vision2Seq:case P.Musicgen:this.can_generate=!0,this._forward=X,this._prepare_inputs_for_generation=Ne;break;case P.EncoderDecoder:this._forward=X;break;case P.ImageTextToText:this.can_generate=!0,this._forward=ce,this._prepare_inputs_for_generation=ye;break;case P.AudioTextToText:this.can_generate=!0,this._forward=J,this._prepare_inputs_for_generation=ye;break;case P.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=ye;break;case P.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=K;break;case P.AutoEncoder:this._forward=ne;break;default:this._forward=se;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const x=[];for(const j of Object.values(this.sessions))j?.handler?.dispose&&x.push(j.handler.dispose());return await Promise.all(x)}static async from_pretrained(x,{progress_callback:j=null,config:le=null,cache_dir:me=null,local_files_only:ge=!1,revision:Ie="main",model_file_name:ze=null,subfolder:Ge="onnx",device:Ye=null,dtype:yt=null,use_external_data_format:bt=null,session_options:st={}}={}){let nt={progress_callback:j,config:le,cache_dir:me,local_files_only:ge,revision:Ie,model_file_name:ze,subfolder:Ge,device:Ye,dtype:yt,use_external_data_format:bt,session_options:st};const Pt=E.get(this),at=y.get(Pt);le=nt.config=await s.AutoConfig.from_pretrained(x,nt);let dt;if(at===P.DecoderOnly)dt=await Promise.all([B(x,{model:nt.model_file_name??"model"},nt),N(x,{generation_config:"generation_config.json"},nt)]);else if(at===P.Seq2Seq||at===P.Vision2Seq)dt=await Promise.all([B(x,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},nt),N(x,{generation_config:"generation_config.json"},nt)]);else if(at===P.MaskGeneration)dt=await Promise.all([B(x,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},nt)]);else if(at===P.EncoderDecoder)dt=await Promise.all([B(x,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},nt)]);else if(at===P.ImageTextToText){const xt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};le.is_encoder_decoder&&(xt.model="encoder_model"),dt=await Promise.all([B(x,xt,nt),N(x,{generation_config:"generation_config.json"},nt)])}else if(at===P.AudioTextToText){const xt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};dt=await Promise.all([B(x,xt,nt),N(x,{generation_config:"generation_config.json"},nt)])}else if(at===P.Musicgen)dt=await Promise.all([B(x,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},nt),N(x,{generation_config:"generation_config.json"},nt)]);else if(at===P.MultiModality)dt=await Promise.all([B(x,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},nt),N(x,{generation_config:"generation_config.json"},nt)]);else if(at===P.Phi3V)dt=await Promise.all([B(x,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},nt),N(x,{generation_config:"generation_config.json"},nt)]);else if(at===P.AutoEncoder)dt=await Promise.all([B(x,{encoder_model:"encoder_model",decoder_model:"decoder_model"},nt)]);else{if(at!==P.EncoderOnly){const xt=Pt??le?.model_type;xt!=="custom"&&console.warn(`Model type for '${xt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}dt=await Promise.all([B(x,{model:nt.model_file_name??"model"},nt)])}return new this(le,...dt)}async _call(x){return await this.forward(x)}async forward(x){return await this._forward(this,x)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(x){const j=new p.LogitsProcessorList;return x.temperature!==null&&x.temperature!==1&&j.push(new p.TemperatureLogitsWarper(x.temperature)),x.top_k!==null&&x.top_k!==0&&j.push(new p.TopKLogitsWarper(x.top_k)),x.top_p!==null&&x.top_p<1&&j.push(new p.TopPLogitsWarper(x.top_p)),j}_get_logits_processor(x,j,le=null){const me=new p.LogitsProcessorList;if(x.repetition_penalty!==null&&x.repetition_penalty!==1&&me.push(new p.RepetitionPenaltyLogitsProcessor(x.repetition_penalty)),x.no_repeat_ngram_size!==null&&x.no_repeat_ngram_size>0&&me.push(new p.NoRepeatNGramLogitsProcessor(x.no_repeat_ngram_size)),x.bad_words_ids!==null&&me.push(new p.NoBadWordsLogitsProcessor(x.bad_words_ids,x.eos_token_id)),x.min_length!==null&&x.eos_token_id!==null&&x.min_length>0&&me.push(new p.MinLengthLogitsProcessor(x.min_length,x.eos_token_id)),x.min_new_tokens!==null&&x.eos_token_id!==null&&x.min_new_tokens>0&&me.push(new p.MinNewTokensLengthLogitsProcessor(j,x.min_new_tokens,x.eos_token_id)),x.forced_bos_token_id!==null&&me.push(new p.ForcedBOSTokenLogitsProcessor(x.forced_bos_token_id)),x.forced_eos_token_id!==null&&me.push(new p.ForcedEOSTokenLogitsProcessor(x.max_length,x.forced_eos_token_id)),x.begin_suppress_tokens!==null){const ge=j>1||x.forced_bos_token_id===null?j:j+1;me.push(new p.SuppressTokensAtBeginLogitsProcessor(x.begin_suppress_tokens,ge))}return x.guidance_scale!==null&&x.guidance_scale>1&&me.push(new p.ClassifierFreeGuidanceLogitsProcessor(x.guidance_scale)),le!==null&&me.extend(le),me}_prepare_generation_config(x,j,le=u.GenerationConfig){const me={...this.config};for(const Ie of["decoder","generator","text_config"])Ie in me&&Object.assign(me,me[Ie]);const ge=new le(me);return Object.assign(ge,this.generation_config??{}),x&&Object.assign(ge,x),j&&Object.assign(ge,(0,a.pick)(j,Object.getOwnPropertyNames(ge))),ge}_get_stopping_criteria(x,j=null){const le=new C.StoppingCriteriaList;return x.max_length!==null&&le.push(new C.MaxLengthCriteria(x.max_length,this.config.max_position_embeddings??null)),x.eos_token_id!==null&&le.push(new C.EosTokenCriteria(x.eos_token_id)),j&&le.extend(j),le}_validate_model_class(){if(!this.can_generate){const x=[Ed,Pd,xd,Td],j=E.get(this.constructor),le=new Set,me=this.config.model_type;for(const Ie of x){const ze=Ie.get(me);ze&&le.add(ze[0])}let ge=`The current model class (${j}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw le.size>0&&(ge+=` Please use the following class instead: ${[...le].join(", ")}`),Error(ge)}}prepare_inputs_for_generation(...x){return this._prepare_inputs_for_generation(this,...x)}_update_model_kwargs_for_generation({generated_input_ids:x,outputs:j,model_inputs:le,is_encoder_decoder:me}){return le.past_key_values=this.getPastKeyValues(j,le.past_key_values),le.input_ids=new h.Tensor("int64",x.flat(),[x.length,1]),me||(le.attention_mask=(0,h.cat)([le.attention_mask,(0,h.ones)([le.attention_mask.dims[0],1])],1)),le.position_ids=null,le}_prepare_model_inputs({inputs:x,bos_token_id:j,model_kwargs:le}){const me=(0,a.pick)(le,this.forward_params),ge=this.main_input_name;if(ge in me){if(x)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else me[ge]=x;return{inputs_tensor:me[ge],model_inputs:me,model_input_name:ge}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:x,model_inputs:j,model_input_name:le,generation_config:me}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!j.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Ie,pixel_values:ze,attention_mask:Ge,...Ye}=j,yt=await this._prepare_inputs_embeds(j);j={...Ye,...(0,a.pick)(yt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ge}=await se(this,j);if(me.guidance_scale!==null&&me.guidance_scale>1)ge=(0,h.cat)([ge,(0,h.full_like)(ge,0)],0),"attention_mask"in j&&(j.attention_mask=(0,h.cat)([j.attention_mask,(0,h.zeros_like)(j.attention_mask)],0));else if(j.decoder_input_ids){const Ie=Z(j.decoder_input_ids).dims[0];if(Ie!==ge.dims[0]){if(ge.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ge.dims[0]}) than the decoder inputs (${Ie}).`);ge=(0,h.cat)(Array.from({length:Ie},()=>ge),0)}}return j.encoder_outputs=ge,j}_prepare_decoder_input_ids_for_generation({batch_size:x,model_input_name:j,model_kwargs:le,decoder_start_token_id:me,bos_token_id:ge,generation_config:Ie}){let{decoder_input_ids:ze,...Ge}=le;if(!(ze instanceof h.Tensor)){if(ze)Array.isArray(ze[0])||(ze=Array.from({length:x},()=>ze));else if(me??=ge,this.config.model_type==="musicgen")ze=Array.from({length:x*this.config.decoder.num_codebooks},()=>[me]);else if(Array.isArray(me)){if(me.length!==x)throw new Error(`\`decoder_start_token_id\` expcted to have length ${x} but got ${me.length}`);ze=me}else ze=Array.from({length:x},()=>[me]);ze=Z(ze)}return le.decoder_attention_mask=(0,h.ones_like)(ze),{input_ids:ze,model_inputs:Ge}}async generate({inputs:x=null,generation_config:j=null,logits_processor:le=null,stopping_criteria:me=null,streamer:ge=null,...Ie}){this._validate_model_class(),j=this._prepare_generation_config(j,Ie);let{inputs_tensor:ze,model_inputs:Ge,model_input_name:Ye}=this._prepare_model_inputs({inputs:x,model_kwargs:Ie});const yt=this.config.is_encoder_decoder;yt&&("encoder_outputs"in Ge||(Ge=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ze,model_inputs:Ge,model_input_name:Ye,generation_config:j})));let bt;yt?{input_ids:bt,model_inputs:Ge}=this._prepare_decoder_input_ids_for_generation({batch_size:Ge[Ye].dims.at(0),model_input_name:Ye,model_kwargs:Ge,decoder_start_token_id:j.decoder_start_token_id,bos_token_id:j.bos_token_id,generation_config:j}):bt=Ge[Ye];let st=bt.dims.at(-1);j.max_new_tokens!==null&&(j.max_length=st+j.max_new_tokens);const nt=this._get_logits_processor(j,st,le),Pt=this._get_stopping_criteria(j,me),at=Ge[Ye].dims.at(0),dt=F.LogitsSampler.getSampler(j),xt=new Array(at).fill(0),Dt=bt.tolist();ge&&ge.put(Dt);let Xt,Et={};for(;;){if(Ge=this.prepare_inputs_for_generation(Dt,Ge,j),Xt=await this.forward(Ge),j.output_attentions&&j.return_dict_in_generate){const xr=this.getAttentions(Xt);for(const $s in xr)$s in Et||(Et[$s]=[]),Et[$s].push(xr[$s])}const Zt=Xt.logits.slice(null,-1,null),yr=nt(Dt,Zt),Or=[];for(let xr=0;xr<yr.dims.at(0);++xr){const $s=yr[xr],Ni=await dt($s);for(const[Cd,El]of Ni){const ji=BigInt(Cd);xt[xr]+=El,Dt[xr].push(ji),Or.push([ji]);break}}if(ge&&ge.put(Or),Pt(Dt).every(xr=>xr))break;Ge=this._update_model_kwargs_for_generation({generated_input_ids:Or,outputs:Xt,model_inputs:Ge,is_encoder_decoder:yt})}ge&&ge.end();const Vt=this.getPastKeyValues(Xt,Ge.past_key_values,!0),zt=new h.Tensor("int64",Dt.flat(),[Dt.length,Dt[0].length]);if(j.return_dict_in_generate)return{sequences:zt,past_key_values:Vt,...Et};for(const Zt of Object.values(Xt))Zt.location==="gpu-buffer"&&Zt.dispose();return zt}getPastKeyValues(x,j,le=!1){const me=Object.create(null);for(const ge in x)if(ge.startsWith("present")){const Ie=ge.replace("present","past_key_values"),ze=ge.includes("encoder");if(ze&&j?me[Ie]=j[Ie]:me[Ie]=x[ge],j&&(!ze||le)){const Ge=j[Ie];Ge.location==="gpu-buffer"&&Ge.dispose()}}return me}getAttentions(x){const j={};for(const le of["cross_attentions","encoder_attentions","decoder_attentions"])for(const me in x)me.startsWith(le)&&(le in j||(j[le]=[]),j[le].push(x[me]));return j}addPastKeyValues(x,j){if(j)Object.assign(x,j);else{const me=(this.sessions.decoder_model_merged??this.sessions.model)?.config?.kv_cache_dtype??"float32",ge=me==="float16"?new h.DataTypeMap.float16:[],Ie=(x[this.main_input_name]??x.attention_mask)?.dims?.[0]??1,ze=(0,s.getKeyValueShapes)(this.config,{batch_size:Ie});for(const Ge in ze)x[Ge]=new h.Tensor(me,ge,ze[Ge])}}async encode_image({pixel_values:x}){const j=(await H(this.sessions.vision_encoder,{pixel_values:x})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${j.dims[1]}).`),this.config.num_image_tokens=j.dims[1]),j}async encode_text({input_ids:x}){return(await H(this.sessions.embed_tokens,{input_ids:x})).inputs_embeds}async encode_audio({audio_values:x}){return(await H(this.sessions.audio_encoder,{audio_values:x})).audio_features}}class he{}class Pe extends he{constructor({last_hidden_state:x,hidden_states:j=null,attentions:le=null}){super(),this.last_hidden_state=x,this.hidden_states=j,this.attentions=le}}class ve extends W{}class ke extends ve{}class Ae extends ve{async _call(x){return new fr(await super._call(x))}}class Oe extends ve{async _call(x){return new _t(await super._call(x))}}class Ue extends ve{async _call(x){return new dr(await super._call(x))}}class Ve extends ve{async _call(x){return new Tr(await super._call(x))}}class D extends W{}class Y extends D{}class R extends D{async _call(x){return new fr(await super._call(x))}}class te extends D{async _call(x){return new _t(await super._call(x))}}class oe extends D{async _call(x){return new dr(await super._call(x))}}class Te extends W{}class Ce extends Te{}class De extends W{}class we extends De{}class Le extends De{async _call(x){return new fr(await super._call(x))}}class ot extends De{async _call(x){return new _t(await super._call(x))}}class lt extends De{async _call(x){return new dr(await super._call(x))}}class Tt extends De{async _call(x){return new Tr(await super._call(x))}}class Mt extends W{}class rr extends Mt{}class Lt extends Mt{async _call(x){return new fr(await super._call(x))}}class pr extends Mt{async _call(x){return new _t(await super._call(x))}}class cs extends Mt{async _call(x){return new dr(await super._call(x))}}class Vr extends Mt{async _call(x){return new Tr(await super._call(x))}}class kr extends W{}class Dr extends kr{}class Ms extends kr{async _call(x){return new fr(await super._call(x))}}class us extends kr{async _call(x){return new _t(await super._call(x))}}class it extends kr{async _call(x){return new dr(await super._call(x))}}class Ur extends kr{async _call(x){return new Tr(await super._call(x))}}class Lr extends W{}class bs extends Lr{}class ps extends Lr{async _call(x){return new fr(await super._call(x))}}class hs extends Lr{async _call(x){return new _t(await super._call(x))}}class ms extends Lr{async _call(x){return new dr(await super._call(x))}}class fs extends Lr{async _call(x){return new Tr(await super._call(x))}}class ir extends W{}class Re extends ir{}class Je extends ir{async _call(x){return new fr(await super._call(x))}}class Qe extends ir{async _call(x){return new _t(await super._call(x))}}class ar extends ir{async _call(x){return new dr(await super._call(x))}}class Is extends ir{async _call(x){return new Tr(await super._call(x))}}class Wr extends W{}class Gr extends Wr{}class Fs extends Wr{async _call(x){return new fr(await super._call(x))}}class vs extends Wr{async _call(x){return new _t(await super._call(x))}}class Os extends Wr{async _call(x){return new dr(await super._call(x))}}class Ds extends Wr{async _call(x){return new Tr(await super._call(x))}}class Kr extends W{}class _s extends Kr{}class Ls extends Kr{async _call(x){return new _t(await super._call(x))}}class zs extends Kr{async _call(x){return new dr(await super._call(x))}}class Bs extends Kr{async _call(x){return new Tr(await super._call(x))}}class Rs extends Kr{async _call(x){return new fr(await super._call(x))}}class Yr extends W{}class Ns extends Yr{}class Ar extends Yr{async _call(x){return new fr(await super._call(x))}}class tn extends Yr{async _call(x){return new _t(await super._call(x))}}class br extends Yr{async _call(x){return new dr(await super._call(x))}}class Hr extends W{}class gs extends Hr{}class Pr extends Hr{async _call(x){return new fr(await super._call(x))}}class js extends Hr{async _call(x){return new _t(await super._call(x))}}class rn extends Hr{async _call(x){return new Tr(await super._call(x))}}class hr extends W{}class sn extends hr{}class Ts extends hr{async _call(x){return new fr(await super._call(x))}}class Cr extends hr{async _call(x){return new _t(await super._call(x))}}class xs extends hr{async _call(x){return new dr(await super._call(x))}}class lr extends hr{async _call(x){return new Tr(await super._call(x))}}class er extends W{}class Es extends er{}class nn extends er{async _call(x){return new fr(await super._call(x))}}class on extends er{async _call(x){return new _t(await super._call(x))}}class an extends er{async _call(x){return new Tr(await super._call(x))}}class ws extends W{}class Dn extends ws{}class de extends ws{async _call(x){return new _t(await super._call(x))}}class k extends ws{async _call(x){return new Tr(await super._call(x))}}class G extends ws{async _call(x){return new fr(await super._call(x))}}class ee extends W{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class ie extends ee{}class _e extends ee{}class $e extends W{}class Ke extends $e{}class He extends $e{}class qe extends W{}class We extends qe{}class vt extends qe{}class mt extends W{}class Bt extends mt{}class Kt extends mt{}class Ut extends mt{async _call(x){return new _t(await super._call(x))}}class Ht extends W{}class sr extends Ht{}class zr extends Ht{}class Ps extends Ht{async _call(x){return new _t(await super._call(x))}}class gr extends Ht{}class Ir extends W{}class Rt extends Ir{}class nr extends Ir{}class wr extends W{}class Sr extends wr{}class mr extends wr{}class It extends W{}class Br extends It{}class qt extends It{async _call(x){return new fr(await super._call(x))}}class Wt extends It{async _call(x){return new _t(await super._call(x))}}class Qt extends It{async _call(x){return new dr(await super._call(x))}}class Yt extends It{async _call(x){return new Tr(await super._call(x))}}class tr extends W{}class Vs extends tr{}class ln extends tr{async _call(x){return new fr(await super._call(x))}}class oa extends tr{async _call(x){return new _t(await super._call(x))}}class dn extends tr{async _call(x){return new dr(await super._call(x))}}class ia extends tr{async _call(x){return new Tr(await super._call(x))}}class Us extends W{}class cn extends Us{}class aa extends Us{async _call(x){return new fr(await super._call(x))}}class vo extends Us{async _call(x){return new _t(await super._call(x))}}class la extends Us{async _call(x){return new dr(await super._call(x))}}class da extends Us{async _call(x){return new Tr(await super._call(x))}}class To extends W{}class xo extends To{}class ca extends To{}class Eo extends W{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class ua extends Eo{}class Po extends Eo{_prepare_generation_config(x,j){return super._prepare_generation_config(x,j,g.WhisperGenerationConfig)}_retrieve_init_tokens(x){const j=[x.decoder_start_token_id];let le=x.language;const me=x.task;if(x.is_multilingual){le||(console.warn("No language specified - defaulting to English (en)."),le="en");const Ie=`<|${(0,$.whisper_language_to_code)(le)}|>`;j.push(x.lang_to_id[Ie]),j.push(x.task_to_id[me??"transcribe"])}else if(le||me)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!x.return_timestamps&&x.no_timestamps_token_id&&j.at(-1)!==x.no_timestamps_token_id?j.push(x.no_timestamps_token_id):x.return_timestamps&&j.at(-1)===x.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),j.pop()),j.filter(ge=>ge!=null)}async generate({inputs:x=null,generation_config:j=null,logits_processor:le=null,stopping_criteria:me=null,...ge}){j=this._prepare_generation_config(j,ge);const Ie=ge.decoder_input_ids??this._retrieve_init_tokens(j);if(j.return_timestamps&&(le??=new p.LogitsProcessorList,le.push(new p.WhisperTimeStampLogitsProcessor(j,Ie))),j.begin_suppress_tokens&&(le??=new p.LogitsProcessorList,le.push(new p.SuppressTokensAtBeginLogitsProcessor(j.begin_suppress_tokens,Ie.length))),j.return_token_timestamps){if(!j.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");j.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),j.output_attentions=!0,j.return_dict_in_generate=!0}const ze=await super.generate({inputs:x,generation_config:j,logits_processor:le,decoder_input_ids:Ie,...ge});return j.return_token_timestamps&&(ze.token_timestamps=this._extract_token_timestamps(ze,j.alignment_heads,j.num_frames)),ze}_extract_token_timestamps(x,j,le=null,me=.02){if(!x.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");le==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let ge=this.config.median_filter_width;ge===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),ge=7);const Ie=x.cross_attentions,ze=Array.from({length:this.config.decoder_layers},(at,dt)=>(0,h.cat)(Ie.map(xt=>xt[dt]),2)),Ge=(0,h.stack)(j.map(([at,dt])=>{if(at>=ze.length)throw new Error(`Layer index ${at} is out of bounds for cross attentions (length ${ze.length}).`);return le?ze[at].slice(null,dt,null,[0,le]):ze[at].slice(null,dt)})).transpose(1,0,2,3),[Ye,yt]=(0,h.std_mean)(Ge,-2,0,!0),bt=Ge.clone();for(let at=0;at<bt.dims[0];++at){const dt=bt[at];for(let xt=0;xt<dt.dims[0];++xt){const Dt=dt[xt],Xt=Ye[at][xt][0].data,Et=yt[at][xt][0].data;for(let Vt=0;Vt<Dt.dims[0];++Vt){let zt=Dt[Vt].data;for(let Zt=0;Zt<zt.length;++Zt)zt[Zt]=(zt[Zt]-Et[Zt])/Xt[Zt];zt.set((0,_.medianFilter)(zt,ge))}}}const st=[(0,h.mean)(bt,1)],nt=x.sequences.dims,Pt=new h.Tensor("float32",new Float32Array(nt[0]*nt[1]),nt);for(let at=0;at<nt[0];++at){const dt=st[at].neg().squeeze_(0),[xt,Dt]=(0,_.dynamic_time_warping)(dt.tolist()),Xt=Array.from({length:xt.length-1},(zt,Zt)=>xt[Zt+1]-xt[Zt]),Et=(0,a.mergeArrays)([1],Xt).map(zt=>!!zt),Vt=[];for(let zt=0;zt<Et.length;++zt)Et[zt]&&Vt.push(Dt[zt]*me);Pt[at].data.set(Vt,1)}return Pt}}class pa extends Po{}class Co extends W{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class ed extends Co{}class ha extends Co{}class So extends W{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class ma extends W{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Ln extends ma{_merge_input_ids_with_image_features({inputs_embeds:x,image_features:j,input_ids:le,attention_mask:me}){const ge=this.config.image_token_index,ze=le.tolist().map(st=>st.findIndex(nt=>nt==ge)),Ge=ze.every(st=>st===-1),Ye=ze.every(st=>st!==-1);if(!Ge&&!Ye)throw new Error("Every input should contain either 0 or 1 image token.");if(Ge)return{inputs_embeds:x,attention_mask:me};const yt=[],bt=[];for(let st=0;st<ze.length;++st){const nt=ze[st],Pt=x[st],at=j[st],dt=me[st];yt.push((0,h.cat)([Pt.slice([0,nt]),at,Pt.slice([nt+1,Pt.dims[0]])],0)),bt.push((0,h.cat)([dt.slice([0,nt]),(0,h.ones)([at.dims[0]]),dt.slice([nt+1,dt.dims[0]])],0))}return{inputs_embeds:(0,h.stack)(yt,0),attention_mask:(0,h.stack)(bt,0)}}}class fa extends Ln{}class $o extends Ln{}class ko extends W{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Ao extends ko{_merge_input_ids_with_image_features({inputs_embeds:x,image_features:j,input_ids:le,attention_mask:me}){return{inputs_embeds:(0,h.cat)([j,x],1),attention_mask:(0,h.cat)([(0,h.ones)(j.dims.slice(0,2)),me],1)}}async _prepare_inputs_embeds({input_ids:x,pixel_values:j,inputs_embeds:le,attention_mask:me}){if(!x&&!j)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let ge,Ie;return x&&(ge=await this.encode_text({input_ids:x})),j&&(Ie=await this.encode_image({pixel_values:j})),ge&&Ie?{inputs_embeds:le,attention_mask:me}=this._merge_input_ids_with_image_features({inputs_embeds:ge,image_features:Ie,input_ids:x,attention_mask:me}):le=ge||Ie,{inputs_embeds:le,attention_mask:me}}async forward({input_ids:x,pixel_values:j,attention_mask:le,decoder_input_ids:me,decoder_attention_mask:ge,encoder_outputs:Ie,past_key_values:ze,inputs_embeds:Ge,decoder_inputs_embeds:Ye}){if(Ge||({inputs_embeds:Ge,attention_mask:le}=await this._prepare_inputs_embeds({input_ids:x,pixel_values:j,inputs_embeds:Ge,attention_mask:le})),!Ie){let{last_hidden_state:st}=await se(this,{inputs_embeds:Ge,attention_mask:le});Ie=st}if(!Ye){if(!me)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Ye=await this.encode_text({input_ids:me})}return await ae(this,{inputs_embeds:Ye,attention_mask:ge,encoder_attention_mask:le,encoder_hidden_states:Ie,past_key_values:ze},!0)}}class _a extends W{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class ga extends _a{_merge_input_ids_with_image_features(x){const j=x.image_features.dims.at(-1),le=x.image_features.view(-1,j);return V({image_token_id:this.config.image_token_index,...x,image_features:le})}}class Io extends W{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class un extends Io{async encode_image({pixel_values:x,pixel_attention_mask:j}){return(await H(this.sessions.vision_encoder,{pixel_values:x,pixel_attention_mask:j})).image_features}_merge_input_ids_with_image_features(x){const j=x.image_features.dims.at(-1),le=x.image_features.view(-1,j);return V({image_token_id:this.config.image_token_id,...x,image_features:le})}}class Cs extends un{}class wa extends W{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class zn extends wa{async forward({input_ids:x=null,attention_mask:j=null,pixel_values:le=null,image_sizes:me=null,position_ids:ge=null,inputs_embeds:Ie=null,past_key_values:ze=null,generation_config:Ge=null,logits_processor:Ye=null,...yt}){if(!Ie){let st;if(le&&x.dims[1]!==1){if(!me)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:st}=await H(this.sessions.vision_encoder,{pixel_values:le,image_sizes:me}))}else{const nt=this.config.normalized_config.hidden_size;st=new h.Tensor("float32",[],[0,nt])}({inputs_embeds:Ie}=await H(this.sessions.prepare_inputs_embeds,{input_ids:x,image_features:st}))}return await ae(this,{inputs_embeds:Ie,past_key_values:ze,attention_mask:j,position_ids:ge,generation_config:Ge,logits_processor:Ye},!1)}}class Ss extends W{}class ya extends Ss{}class td extends Ss{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"text_model"})}}class Bn extends Ss{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"text_model"})}}class Ma extends Ss{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"vision_model"})}}class ba extends Ss{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"vision_model"})}}class Fo extends W{}class va extends Fo{}class Ta extends Fo{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"text_model"})}}class xa extends Ss{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"vision_model"})}}class Ea extends W{}class Pa extends Ea{}class Rn extends W{}class Ca extends Rn{async forward(x){const j=!x.input_ids,le=!x.pixel_values;if(j&&le)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(j&&(x.input_ids=(0,h.ones)([x.pixel_values.dims[0],1])),le){const{image_size:Ye}=this.config.vision_config;x.pixel_values=(0,h.full)([0,3,Ye,Ye],0)}const{text_embeddings:me,image_embeddings:ge,l2norm_text_embeddings:Ie,l2norm_image_embeddings:ze}=await super.forward(x),Ge={};return j||(Ge.text_embeddings=me,Ge.l2norm_text_embeddings=Ie),le||(Ge.image_embeddings=ge,Ge.l2norm_image_embeddings=ze),Ge}}class pn extends Rn{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"text_model"})}}class Ws extends Rn{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"vision_model"})}}class Nn extends W{}class Sa extends Nn{}class $a extends Nn{}class hn extends W{}class jn extends hn{}class Oo extends hn{}class Vn extends W{}class Do extends Vn{}class Lo extends Vn{}class Un extends W{}class zo extends Un{}class ka extends Un{}class Wn extends W{}class Aa extends Wn{}class Bo extends Wn{}class Gs extends W{}class Fe extends Gs{}class Ia extends Gs{}class Gn extends W{}class Ro extends Gn{}class mn extends Gn{}class Fr extends W{}class fn extends Fr{}class Kn extends Fr{}class Hn extends W{}class No extends Hn{}class jo extends Hn{}class _n extends W{}class Vo extends _n{}class Uo extends _n{}class pt extends W{}class Ks extends pt{}class Wo extends pt{}class ct extends W{}class qn extends ct{}class ht extends ct{}class Qn extends W{}class Go extends Qn{}class Ko extends Qn{}class Xn extends W{}class Ho extends Xn{}class qo extends Xn{}class gn extends W{}class Qo extends gn{}class Xo extends gn{}class Jn extends W{}class Jo extends Jn{}class Yo extends Jn{}class Yn extends W{}class Zo extends Yn{}class ei extends Yn{}class Zn extends W{}class ti extends Zn{}class ri extends Zn{}class eo extends W{}class si extends eo{}class ni extends eo{}class to extends W{}class oi extends to{}class ii extends to{}class ro extends W{}class ai extends ro{}class li extends ro{}class so extends W{}class di extends so{}class ci extends so{}class ui extends W{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class pi extends ui{get_rope_index(x,j,le,me){const{vision_config:ge,image_token_id:Ie,video_token_id:ze,vision_start_token_id:Ge}=this.config,Ye=ge.spatial_merge_size??2,yt=[];if(j||le){let bt=x.tolist();me||(me=(0,h.ones_like)(x));const st=me.tolist(),nt=Array.from({length:3},Dt=>Array.from({length:x.dims[0]},Xt=>Array.from({length:x.dims[1]},Et=>1))),Pt=j?j.tolist():[],at=le?le.tolist():[];let dt=0,xt=0;for(let Dt=0;Dt<bt.length;++Dt){const Xt=bt[Dt].filter((Nt,or)=>st[Dt][or]==1),Vt=Xt.reduce((Nt,or,Qs)=>(or==Ge&&Nt.push(Qs),Nt),[]).map(Nt=>Xt[Nt+1]),zt=Vt.filter(Nt=>Nt==Ie).length,Zt=Vt.filter(Nt=>Nt==ze).length;let yr=[],Or=0,xl=zt,xr=Zt;for(let Nt=0;Nt<Vt.length;++Nt){const or=Xt.findIndex((Mn,Zr)=>Zr>Or&&Mn==Ie),Qs=Xt.findIndex((Mn,Zr)=>Zr>Or&&Mn==ze),yn=xl>0&&or!==-1?or:Xt.length+1,fo=xr>0&&Qs!==-1?Qs:Xt.length+1;let Pl,Sd,$d,kd;yn<fo?([Sd,$d,kd]=Pt[dt],++dt,--xl,Pl=yn):([Sd,$d,kd]=at[xt],++xt,--xr,Pl=fo);const[Fb,Ad,Cl]=[Number(Sd),Math.floor(Number($d)/Ye),Math.floor(Number(kd)/Ye)],Id=Pl-Or,wm=yr.length>0?(0,_.max)(yr.at(-1))[0]+1:0;yr.push(Array.from({length:3*Id},(Mn,Zr)=>wm+Zr%Id));const Fd=Id+wm,Sl=Fb*Ad*Cl,Ob=Array.from({length:Sl},(Mn,Zr)=>Fd+Math.floor(Zr/(Ad*Cl))),Db=Array.from({length:Sl},(Mn,Zr)=>Fd+Math.floor(Zr/Cl)%Ad),Lb=Array.from({length:Sl},(Mn,Zr)=>Fd+Zr%Cl);yr.push([Ob,Db,Lb].flat()),Or=Pl+Sl}if(Or<Xt.length){const Nt=yr.length>0?(0,_.max)(yr.at(-1))[0]+1:0,or=Xt.length-Or;yr.push(Array.from({length:3*or},(Qs,yn)=>Nt+yn%or))}const $s=yr.reduce((Nt,or)=>Nt+or.length,0),Ni=new Array($s);let Cd=0;for(let Nt=0;Nt<3;++Nt)for(let or=0;or<yr.length;++or){const Qs=yr[or],yn=Qs.length/3;for(let fo=Nt*yn;fo<(Nt+1)*yn;++fo)Ni[Cd++]=Qs[fo]}let El=0;const ji=st[Dt];for(let Nt=0;Nt<ji.length;++Nt)if(ji[Nt]==1){for(let or=0;or<3;++or)nt[or][Dt][Nt]=Ni[or*$s/3+El];++El}const Ib=(0,_.max)(Ni)[0];yt.push(Ib+1-bt[Dt].length)}return[new h.Tensor("int64",nt.flat(1/0),[3,x.dims[0],x.dims[1]]),new h.Tensor("int64",yt,[yt.length,1])]}else if(me){const{data:bt,dims:st}=be(me),nt=BigInt64Array.from({length:3*bt.length},(at,dt)=>bt[dt%bt.length]),Pt=Array.from({length:st[0]},(at,dt)=>(0,_.max)(bt.subarray(st[1]*dt,st[1]*(dt+1)))[0]+1n+BigInt(st[1]));return[new h.Tensor("int64",nt,[3,...st]),new h.Tensor("int64",Pt,[Pt.length,1])]}else{const[bt,st]=x.dims,nt=BigInt64Array.from({length:3*bt*st},(Pt,at)=>BigInt(Math.floor(at%st/bt)));return[new h.Tensor("int64",nt,[3,...x.dims]),(0,h.zeros)([bt,1])]}}async encode_image({pixel_values:x,image_grid_thw:j}){return(await H(this.sessions.vision_encoder,{pixel_values:x,grid_thw:j})).image_features}_merge_input_ids_with_image_features(x){return V({image_token_id:this.config.image_token_id,...x})}prepare_inputs_for_generation(x,j,le){if(j.attention_mask&&!j.position_ids)if(!j.past_key_values)[j.position_ids,j.rope_deltas]=this.get_rope_index(j.input_ids,j.image_grid_thw,j.video_grid_thw,j.attention_mask);else{j.pixel_values=null;const me=BigInt(Object.values(j.past_key_values)[0].dims.at(-2)),ge=j.rope_deltas.map(Ie=>me+Ie);j.position_ids=(0,h.stack)([ge,ge,ge],0)}return j}}class no extends W{}class hi extends no{}class mi extends no{}class oo extends W{}class fi extends oo{}class _i extends oo{}class io extends W{}class gi extends io{}class wi extends io{}class ao extends W{}class yi extends ao{}class Mi extends ao{}class lo extends W{}class bi extends lo{}class vi extends lo{}class co extends W{}class Ti extends co{}class xi extends co{async _call(x){return new _t(await super._call(x))}}class uo extends W{}class Ei extends uo{}class Pi extends uo{async _call(x){return new _t(await super._call(x))}}class Fa extends W{}class Oa extends Fa{}class Ci extends W{}class Da extends Ci{}class La extends Ci{async _call(x){return new _t(await super._call(x))}}class za extends W{}class Ba extends za{}class Si extends W{}class Ra extends Si{}class Na extends Si{async _call(x){return new _t(await super._call(x))}}class ja extends W{}class Va extends ja{}class $i extends W{}class Ua extends $i{}class Wa extends $i{async _call(x){return new _t(await super._call(x))}}class Ga extends W{}class Ka extends Ga{async _call(x){return new _m(await super._call(x))}}class ki extends W{}class Ha extends ki{}class qa extends ki{async _call(x){return new _t(await super._call(x))}}class Ai extends W{}class Qa extends Ai{}class Xa extends Ai{async _call(x){return new _t(await super._call(x))}}class Ii extends W{}class Ja extends Ii{}class Ya extends Ii{}class Fi extends W{}class Za extends Fi{}class el extends Fi{}class Oi extends W{}class tl extends Oi{}class rl extends Oi{async _call(x){return new _t(await super._call(x))}}class po extends W{}class sl extends po{}class nl extends po{async _call(x){return new Li(await super._call(x))}}class Di extends po{async _call(x){return new ol(await super._call(x))}}class Li extends he{constructor({logits:x,pred_boxes:j}){super(),this.logits=x,this.pred_boxes=j}}class ol extends he{constructor({logits:x,pred_boxes:j,pred_masks:le}){super(),this.logits=x,this.pred_boxes=j,this.pred_masks=le}}class zi extends W{}class il extends zi{}class al extends zi{async _call(x){return new ll(await super._call(x))}}class ll extends he{constructor({logits:x,pred_boxes:j}){super(),this.logits=x,this.pred_boxes=j}}class Bi extends W{}class dl extends Bi{}class cl extends Bi{async _call(x){return new d(await super._call(x))}}class d extends Li{}class m extends W{}class b extends m{}class S extends m{async _call(x){return new _t(await super._call(x))}}class I extends W{}class U extends I{}class re extends I{async _call(x){return new _t(await super._call(x))}}class fe extends W{}class xe extends fe{}class Be extends fe{async _call(x){return new _t(await super._call(x))}}class Xe extends W{}class rt extends Xe{}class ft extends Xe{async _call(x){return new _t(await super._call(x))}}class Ot extends Xe{}class vr extends W{}class Hs extends vr{}class xu extends vr{}class rd extends W{}class Eu extends rd{}class Pu extends rd{}class Cu extends W{}class Su extends Cu{}class ul extends W{}class $u extends ul{}class ku extends ul{}class Au extends ul{}class Iu extends W{}class Fu extends Iu{}class Ou extends W{}class Du extends Ou{}class Lu extends W{}class zu extends Lu{}class sd extends W{}class Bu extends sd{}class Ru extends sd{}class nd extends W{}class Nu extends nd{}class ju extends nd{}class Vu extends W{}class Uu extends Vu{}class od extends W{}class Wu extends od{}class Gu extends od{async _call(x){return new _t(await super._call(x))}}class id extends W{}class Ku extends id{}class Hu extends id{async _call(x){return new _t(await super._call(x))}}class ad extends W{}class qu extends ad{}class Qu extends ad{async _call(x){return new _t(await super._call(x))}}class ld extends W{}class Xu extends ld{}class Ju extends ld{async _call(x){return new _t(await super._call(x))}}class Yu extends W{}class Zu extends Yu{}class dd extends W{}class ep extends dd{}class tp extends dd{async _call(x){return new rp(await super._call(x))}}class rp extends he{constructor({logits:x,pred_boxes:j}){super(),this.logits=x,this.pred_boxes=j}}class sp extends W{}class np extends sp{async get_image_embeddings({pixel_values:x}){return await se(this,{pixel_values:x})}async forward(x){if((!x.image_embeddings||!x.image_positional_embeddings)&&(x={...x,...await this.get_image_embeddings(x)}),!x.input_labels&&x.input_points){const le=x.input_points.dims.slice(0,-1),me=le.reduce((ge,Ie)=>ge*Ie,1);x.input_labels=new h.Tensor("int64",new BigInt64Array(me).fill(1n),le)}const j={image_embeddings:x.image_embeddings,image_positional_embeddings:x.image_positional_embeddings};return x.input_points&&(j.input_points=x.input_points),x.input_labels&&(j.input_labels=x.input_labels),x.input_boxes&&(j.input_boxes=x.input_boxes),await H(this.sessions.prompt_encoder_mask_decoder,j)}async _call(x){return new op(await super._call(x))}}class op extends he{constructor({iou_scores:x,pred_masks:j}){super(),this.iou_scores=x,this.pred_masks=j}}class cd extends W{}class ip extends cd{}class ap extends cd{}class ud extends W{}class lp extends ud{}class dp extends ud{}class qs extends W{}class cp extends qs{}class up extends qs{async _call(x){return new wn(await super._call(x))}}class pp extends qs{async _call(x){return new _t(await super._call(x))}}class hp extends qs{async _call(x){return new dr(await super._call(x))}}class pd extends W{}class mp extends pd{}class fp extends pd{async _call(x){return new dr(await super._call(x))}}class _p extends W{}class gp extends _p{}class pl extends W{}class wp extends pl{}class yp extends pl{async _call(x){return new wn(await super._call(x))}}class Mp extends pl{async _call(x){return new _t(await super._call(x))}}class Ri extends W{}class bp extends Ri{}class vp extends Ri{async _call(x){return new wn(await super._call(x))}}class Tp extends Ri{async _call(x){return new _t(await super._call(x))}}class xp extends Ri{async _call(x){return new dr(await super._call(x))}}class hl extends W{}class Ep extends hl{}class Pp extends hl{async _call(x){return new wn(await super._call(x))}}class Cp extends hl{async _call(x){return new _t(await super._call(x))}}class N0 extends W{}class Sp extends qs{}class $p extends qs{async _call(x){return new wn(await super._call(x))}}class kp extends qs{async _call(x){return new _t(await super._call(x))}}class ho extends W{}class Ap extends ho{}class Ip extends ho{async _call(x){return new wn(await super._call(x))}}class Fp extends ho{async _call(x){return new _t(await super._call(x))}}class Op extends ho{async _call(x){return new fm(await super._call(x))}}class Dp extends ho{async _call(x){return new dr(await super._call(x))}}class Lp extends W{}class zp extends Lp{}class ml extends W{}class j0 extends ml{}class Bp extends ml{}class Rp extends ml{async generate_speech(x,j,{threshold:le=.5,minlenratio:me=0,maxlenratio:ge=20,vocoder:Ie=null}={}){const ze={input_ids:x},{encoder_outputs:Ge,encoder_attention_mask:Ye}=await se(this,ze),yt=Ge.dims[1]/this.config.reduction_factor,bt=Math.floor(yt*ge),st=Math.floor(yt*me),nt=this.config.num_mel_bins;let Pt=[],at=null,dt=null,xt=0;for(;;){++xt;const Et=q(!!dt);let Vt;dt?Vt=dt.output_sequence_out:Vt=new h.Tensor("float32",new Float32Array(nt),[1,1,nt]);let zt={use_cache_branch:Et,output_sequence:Vt,encoder_attention_mask:Ye,speaker_embeddings:j,encoder_hidden_states:Ge};this.addPastKeyValues(zt,at),dt=await H(this.sessions.decoder_model_merged,zt),at=this.getPastKeyValues(dt,at);const{prob:Zt,spectrum:yr}=dt;if(Pt.push(yr),xt>=st&&(Array.from(Zt.data).filter(Or=>Or>=le).length>0||xt>=bt))break}const Dt=(0,h.cat)(Pt),{waveform:Xt}=await H(Ie.sessions.model,{spectrogram:Dt});return{spectrogram:Dt,waveform:Xt}}}class Np extends W{main_input_name="spectrogram"}class jp extends W{}class Vp extends jp{}class hd extends W{}class Up extends hd{}class Wp extends hd{}class md extends W{}class Gp extends md{}class Kp extends md{}class fd extends W{}class Hp extends fd{}class qp extends fd{}class fl extends W{}class Qp extends fl{}class Xp extends fl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"text_model"})}}class Jp extends fl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"audio_model"})}}class Yp extends W{}class _d extends Yp{async _call(x){return new gm(await super._call(x))}}class _l extends W{}class V0 extends _l{}class Zp extends _l{}class eh extends _l{}class gd extends W{}class th extends gd{}class rh extends gd{}class wd extends W{}class sh extends wd{}class nh extends wd{async _call(x){return new _t(await super._call(x))}}class yd extends W{}class U0 extends yd{}class W0 extends yd{}class Md extends W{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(x){const[j,le]=x.dims,me=this.config.decoder.num_codebooks,ge=le-me;let Ie=0;for(let Ye=0;Ye<x.size;++Ye){if(x.data[Ye]===this.config.decoder.pad_token_id)continue;const yt=Ye%le,bt=Math.floor(Ye/le)%me,st=yt-bt;st>0&&st<=ge&&(x.data[Ie++]=x.data[Ye])}const ze=Math.floor(j/me),Ge=Ie/(ze*me);return new h.Tensor(x.type,x.data.slice(0,Ie),[ze,me,Ge])}prepare_inputs_for_generation(x,j,le){let me=structuredClone(x);for(let Ie=0;Ie<me.length;++Ie)for(let ze=0;ze<me[Ie].length;++ze)Ie%this.config.decoder.num_codebooks>=ze&&(me[Ie][ze]=BigInt(this.config.decoder.pad_token_id));return le.guidance_scale!==null&&le.guidance_scale>1&&(me=me.concat(me)),super.prepare_inputs_for_generation(me,j,le)}async generate(x){const j=await super.generate(x),le=this._apply_and_filter_by_delay_pattern_mask(j).unsqueeze_(0),{audio_values:me}=await H(this.sessions.encodec_decode,{audio_codes:le});return me}}class gl extends W{}class oh extends gl{}class ih extends gl{async _call(x){return new _t(await super._call(x))}}class ah extends gl{}class wl extends W{}class lh extends wl{}class dh extends wl{async _call(x){return new _t(await super._call(x))}}class ch extends wl{}class yl extends W{}class uh extends yl{}class ph extends yl{async _call(x){return new _t(await super._call(x))}}class hh extends yl{}class Ml extends W{}class mh extends Ml{}class fh extends Ml{async _call(x){return new _t(await super._call(x))}}class _h extends Ml{}class gh extends W{}class wh extends gh{}class yh extends W{}class Mh extends yh{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...x){super(...x),this._generation_mode="text"}async forward(x){const j=this._generation_mode??"text";let le;if(j==="text"||!x.past_key_values){const Ge=this.sessions.prepare_inputs_embeds,Ye=(0,a.pick)(x,Ge.inputNames);le=await H(Ge,Ye)}else{const Ge=this.sessions.gen_img_embeds,Ye=(0,a.pick)({image_ids:x.input_ids},Ge.inputNames);le=await H(Ge,Ye)}const me={...x,...le},ge=await ae(this,me),Ie=this.sessions[j==="text"?"lm_head":"gen_head"];if(!Ie)throw new Error(`Unable to find "${Ie}" generation head`);const ze=await H(Ie,(0,a.pick)(ge,Ie.inputNames));return{...le,...ge,...ze}}async generate(x){return this._generation_mode="text",super.generate(x)}async generate_images(x){this._generation_mode="image";const j=(x.inputs??x[this.main_input_name]).dims[1],me=(await super.generate(x)).slice(null,[j,null]),ge=this.sessions.image_decode,{decoded_image:Ie}=await H(ge,{generated_tokens:me}),ze=Ie.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Ge=[];for(const Ye of ze){const yt=w.RawImage.fromTensor(Ye);Ge.push(yt)}return Ge}}class bh extends he{constructor({char_logits:x,bpe_logits:j,wp_logits:le}){super(),this.char_logits=x,this.bpe_logits=j,this.wp_logits=le}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class vh extends W{}class Th extends vh{async _call(x){return new bh(await super._call(x))}}class bd extends W{}class xh extends bd{}class Eh extends bd{}class vd extends W{}class Ph extends vd{}class Ch extends vd{}class Sh extends W{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class $h extends Sh{_merge_input_ids_with_audio_features(x){const j=x.audio_features.dims.at(-1),le=x.audio_features.view(-1,j);return L({audio_token_id:this.config.ignore_index,...x,audio_features:le})}}class bl extends W{main_input_name="input_values";forward_params=["input_values"]}class kh extends he{constructor({audio_codes:x}){super(),this.audio_codes=x}}class Ah extends he{constructor({audio_values:x}){super(),this.audio_values=x}}class Ih extends bl{async encode(x){return new kh(await H(this.sessions.encoder_model,x))}async decode(x){return new Ah(await H(this.sessions.decoder_model,x))}}class Fh extends bl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"encoder_model"})}}class Oh extends bl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"decoder_model"})}}class vl extends W{main_input_name="input_values";forward_params=["input_values"]}class Dh extends he{constructor({audio_codes:x}){super(),this.audio_codes=x}}class Lh extends he{constructor({audio_values:x}){super(),this.audio_values=x}}class zh extends vl{async encode(x){return new Dh(await H(this.sessions.encoder_model,x))}async decode(x){return new Lh(await H(this.sessions.decoder_model,x))}}class Bh extends vl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"encoder_model"})}}class Rh extends vl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"decoder_model"})}}class Tl extends W{main_input_name="input_values";forward_params=["input_values"]}class Nh extends Tl{async encode(x){return await H(this.sessions.encoder_model,x)}async decode(x){return await H(this.sessions.decoder_model,x)}}class jh extends Tl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"encoder_model"})}}class Vh extends Tl{static async from_pretrained(x,j={}){return super.from_pretrained(x,{...j,model_file_name:j.model_file_name??"decoder_model"})}}class At{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(x,{progress_callback:j=null,config:le=null,cache_dir:me=null,local_files_only:ge=!1,revision:Ie="main",model_file_name:ze=null,subfolder:Ge="onnx",device:Ye=null,dtype:yt=null,use_external_data_format:bt=null,session_options:st={}}={}){const nt={progress_callback:j,config:le,cache_dir:me,local_files_only:ge,revision:Ie,model_file_name:ze,subfolder:Ge,device:Ye,dtype:yt,use_external_data_format:bt,session_options:st};if(nt.config=await s.AutoConfig.from_pretrained(x,nt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const Pt=nt.config.model_type;for(const at of this.MODEL_CLASS_MAPPINGS){let dt=at.get(Pt);if(!dt){for(const xt of at.values())if(xt[0]===Pt){dt=xt;break}if(!dt)continue}return await dt[1].from_pretrained(x,nt)}if(this.BASE_IF_FAIL)return mm.has(Pt)||console.warn(`Unknown model class "${Pt}", attempting to construct from base class.`),await W.from_pretrained(x,nt);throw Error(`Unsupported model type: ${Pt}`)}}const G0=new Map([["bert",["BertModel",ke]],["modernbert",["ModernBertModel",Y]],["nomic_bert",["NomicBertModel",Ce]],["roformer",["RoFormerModel",we]],["electra",["ElectraModel",Dr]],["esm",["EsmModel",Ns]],["convbert",["ConvBertModel",rr]],["camembert",["CamembertModel",bs]],["deberta",["DebertaModel",Re]],["deberta-v2",["DebertaV2Model",Gr]],["mpnet",["MPNetModel",sn]],["albert",["AlbertModel",Dn]],["distilbert",["DistilBertModel",_s]],["roberta",["RobertaModel",Br]],["xlm",["XLMModel",Vs]],["xlm-roberta",["XLMRobertaModel",cn]],["clap",["ClapModel",Qp]],["clip",["CLIPModel",ya]],["clipseg",["CLIPSegModel",Sa]],["chinese_clip",["ChineseCLIPModel",Pa]],["siglip",["SiglipModel",va]],["jina_clip",["JinaCLIPModel",Ca]],["mobilebert",["MobileBertModel",gs]],["squeezebert",["SqueezeBertModel",Es]],["wav2vec2",["Wav2Vec2Model",cp]],["wav2vec2-bert",["Wav2Vec2BertModel",Ep]],["unispeech",["UniSpeechModel",wp]],["unispeech-sat",["UniSpeechSatModel",bp]],["hubert",["HubertModel",Sp]],["wavlm",["WavLMModel",Ap]],["audio-spectrogram-transformer",["ASTModel",xo]],["vits",["VitsModel",_d]],["pyannote",["PyAnnoteModel",mp]],["wespeaker-resnet",["WeSpeakerResNetModel",gp]],["detr",["DetrModel",sl]],["rt_detr",["RTDetrModel",il]],["table-transformer",["TableTransformerModel",dl]],["vit",["ViTModel",Ti]],["ijepa",["IJepaModel",Ei]],["pvt",["PvtModel",Da]],["vit_msn",["ViTMSNModel",Ra]],["vit_mae",["ViTMAEModel",Ba]],["groupvit",["GroupViTModel",Va]],["fastvit",["FastViTModel",Ua]],["mobilevit",["MobileViTModel",Ha]],["mobilevitv2",["MobileViTV2Model",Qa]],["owlvit",["OwlViTModel",Ja]],["owlv2",["Owlv2Model",Za]],["beit",["BeitModel",tl]],["deit",["DeiTModel",b]],["hiera",["HieraModel",U]],["convnext",["ConvNextModel",Wu]],["convnextv2",["ConvNextV2Model",Ku]],["dinov2",["Dinov2Model",qu]],["dinov2_with_registers",["Dinov2WithRegistersModel",Xu]],["resnet",["ResNetModel",xe]],["swin",["SwinModel",rt]],["swin2sr",["Swin2SRModel",Hs]],["donut-swin",["DonutSwinModel",Uu]],["yolos",["YolosModel",ep]],["dpt",["DPTModel",Eu]],["glpn",["GLPNModel",Nu]],["hifigan",["SpeechT5HifiGan",Np]],["efficientnet",["EfficientNetModel",sh]],["decision_transformer",["DecisionTransformerModel",wh]],["patchtst",["PatchTSTForPrediction",xh]],["patchtsmixer",["PatchTSMixerForPrediction",Ph]],["mobilenet_v1",["MobileNetV1Model",oh]],["mobilenet_v2",["MobileNetV2Model",lh]],["mobilenet_v3",["MobileNetV3Model",uh]],["mobilenet_v4",["MobileNetV4Model",mh]],["maskformer",["MaskFormerModel",Bu]],["mgp-str",["MgpstrForSceneTextRecognition",Th]],["style_text_to_speech_2",["StyleTextToSpeech2Model",zp]]]),K0=new Map([["t5",["T5Model",ie]],["longt5",["LongT5Model",Ke]],["mt5",["MT5Model",We]],["bart",["BartModel",Bt]],["mbart",["MBartModel",sr]],["marian",["MarianModel",ip]],["whisper",["WhisperModel",ua]],["m2m_100",["M2M100Model",lp]],["blenderbot",["BlenderbotModel",Rt]],["blenderbot-small",["BlenderbotSmallModel",Sr]]]),H0=new Map([["mimi",["MimiModel",Ih]],["dac",["DacModel",zh]],["snac",["SnacModel",Nh]]]),q0=new Map([["bloom",["BloomModel",gi]],["jais",["JAISModel",Do]],["gpt2",["GPT2Model",jn]],["gptj",["GPTJModel",Fe]],["gpt_bigcode",["GPTBigCodeModel",Ro]],["gpt_neo",["GPTNeoModel",zo]],["gpt_neox",["GPTNeoXModel",Aa]],["codegen",["CodeGenModel",fn]],["llama",["LlamaModel",No]],["exaone",["ExaoneModel",qn]],["olmo",["OlmoModel",Ho]],["olmo2",["Olmo2Model",Qo]],["mobilellm",["MobileLLMModel",Go]],["granite",["GraniteModel",Jo]],["cohere",["CohereModel",Zo]],["gemma",["GemmaModel",ti]],["gemma2",["Gemma2Model",si]],["gemma3_text",["Gemma3Model",oi]],["helium",["HeliumModel",Vo]],["glm",["GlmModel",Ks]],["openelm",["OpenELMModel",ai]],["qwen2",["Qwen2Model",di]],["phi",["PhiModel",hi]],["phi3",["Phi3Model",fi]],["mpt",["MptModel",yi]],["opt",["OPTModel",bi]],["mistral",["MistralModel",Up]],["starcoder2",["Starcoder2Model",Gp]],["falcon",["FalconModel",Hp]],["stablelm",["StableLmModel",th]]]),Td=new Map([["speecht5",["SpeechT5ForSpeechToText",Bp]],["whisper",["WhisperForConditionalGeneration",Po]],["lite-whisper",["LiteWhisperForConditionalGeneration",pa]],["moonshine",["MoonshineForConditionalGeneration",ha]]]),Uh=new Map([["speecht5",["SpeechT5ForTextToSpeech",Rp]]]),Wh=new Map([["vits",["VitsModel",_d]],["musicgen",["MusicgenForConditionalGeneration",Md]]]),Gh=new Map([["bert",["BertForSequenceClassification",Oe]],["modernbert",["ModernBertForSequenceClassification",te]],["roformer",["RoFormerForSequenceClassification",ot]],["electra",["ElectraForSequenceClassification",us]],["esm",["EsmForSequenceClassification",tn]],["convbert",["ConvBertForSequenceClassification",pr]],["camembert",["CamembertForSequenceClassification",hs]],["deberta",["DebertaForSequenceClassification",Qe]],["deberta-v2",["DebertaV2ForSequenceClassification",vs]],["mpnet",["MPNetForSequenceClassification",Cr]],["albert",["AlbertForSequenceClassification",de]],["distilbert",["DistilBertForSequenceClassification",Ls]],["roberta",["RobertaForSequenceClassification",Wt]],["xlm",["XLMForSequenceClassification",oa]],["xlm-roberta",["XLMRobertaForSequenceClassification",vo]],["bart",["BartForSequenceClassification",Ut]],["mbart",["MBartForSequenceClassification",Ps]],["mobilebert",["MobileBertForSequenceClassification",js]],["squeezebert",["SqueezeBertForSequenceClassification",on]]]),Kh=new Map([["bert",["BertForTokenClassification",Ue]],["modernbert",["ModernBertForTokenClassification",oe]],["roformer",["RoFormerForTokenClassification",lt]],["electra",["ElectraForTokenClassification",it]],["esm",["EsmForTokenClassification",br]],["convbert",["ConvBertForTokenClassification",cs]],["camembert",["CamembertForTokenClassification",ms]],["deberta",["DebertaForTokenClassification",ar]],["deberta-v2",["DebertaV2ForTokenClassification",Os]],["mpnet",["MPNetForTokenClassification",xs]],["distilbert",["DistilBertForTokenClassification",zs]],["roberta",["RobertaForTokenClassification",Qt]],["xlm",["XLMForTokenClassification",dn]],["xlm-roberta",["XLMRobertaForTokenClassification",la]]]),xd=new Map([["t5",["T5ForConditionalGeneration",_e]],["longt5",["LongT5ForConditionalGeneration",He]],["mt5",["MT5ForConditionalGeneration",vt]],["bart",["BartForConditionalGeneration",Kt]],["mbart",["MBartForConditionalGeneration",zr]],["marian",["MarianMTModel",ap]],["m2m_100",["M2M100ForConditionalGeneration",dp]],["blenderbot",["BlenderbotForConditionalGeneration",nr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",mr]]]),Ed=new Map([["bloom",["BloomForCausalLM",wi]],["gpt2",["GPT2LMHeadModel",Oo]],["jais",["JAISLMHeadModel",Lo]],["gptj",["GPTJForCausalLM",Ia]],["gpt_bigcode",["GPTBigCodeForCausalLM",mn]],["gpt_neo",["GPTNeoForCausalLM",ka]],["gpt_neox",["GPTNeoXForCausalLM",Bo]],["codegen",["CodeGenForCausalLM",Kn]],["llama",["LlamaForCausalLM",jo]],["exaone",["ExaoneForCausalLM",ht]],["olmo",["OlmoForCausalLM",qo]],["olmo2",["Olmo2ForCausalLM",Xo]],["mobilellm",["MobileLLMForCausalLM",Ko]],["granite",["GraniteForCausalLM",Yo]],["cohere",["CohereForCausalLM",ei]],["gemma",["GemmaForCausalLM",ri]],["gemma2",["Gemma2ForCausalLM",ni]],["gemma3_text",["Gemma3ForCausalLM",ii]],["helium",["HeliumForCausalLM",Uo]],["glm",["GlmForCausalLM",Wo]],["openelm",["OpenELMForCausalLM",li]],["qwen2",["Qwen2ForCausalLM",ci]],["phi",["PhiForCausalLM",mi]],["phi3",["Phi3ForCausalLM",_i]],["mpt",["MptForCausalLM",Mi]],["opt",["OPTForCausalLM",vi]],["mbart",["MBartForCausalLM",gr]],["mistral",["MistralForCausalLM",Wp]],["starcoder2",["Starcoder2ForCausalLM",Kp]],["falcon",["FalconForCausalLM",qp]],["trocr",["TrOCRForCausalLM",Vp]],["stablelm",["StableLmForCausalLM",rh]],["phi3_v",["Phi3VForCausalLM",zn]]]),Q0=new Map([["multi_modality",["MultiModalityCausalLM",Mh]]]),Hh=new Map([["bert",["BertForMaskedLM",Ae]],["modernbert",["ModernBertForMaskedLM",R]],["roformer",["RoFormerForMaskedLM",Le]],["electra",["ElectraForMaskedLM",Ms]],["esm",["EsmForMaskedLM",Ar]],["convbert",["ConvBertForMaskedLM",Lt]],["camembert",["CamembertForMaskedLM",ps]],["deberta",["DebertaForMaskedLM",Je]],["deberta-v2",["DebertaV2ForMaskedLM",Fs]],["mpnet",["MPNetForMaskedLM",Ts]],["albert",["AlbertForMaskedLM",G]],["distilbert",["DistilBertForMaskedLM",Rs]],["roberta",["RobertaForMaskedLM",qt]],["xlm",["XLMWithLMHeadModel",ln]],["xlm-roberta",["XLMRobertaForMaskedLM",aa]],["mobilebert",["MobileBertForMaskedLM",Pr]],["squeezebert",["SqueezeBertForMaskedLM",nn]]]),qh=new Map([["bert",["BertForQuestionAnswering",Ve]],["roformer",["RoFormerForQuestionAnswering",Tt]],["electra",["ElectraForQuestionAnswering",Ur]],["convbert",["ConvBertForQuestionAnswering",Vr]],["camembert",["CamembertForQuestionAnswering",fs]],["deberta",["DebertaForQuestionAnswering",Is]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ds]],["mpnet",["MPNetForQuestionAnswering",lr]],["albert",["AlbertForQuestionAnswering",k]],["distilbert",["DistilBertForQuestionAnswering",Bs]],["roberta",["RobertaForQuestionAnswering",Yt]],["xlm",["XLMForQuestionAnswering",ia]],["xlm-roberta",["XLMRobertaForQuestionAnswering",da]],["mobilebert",["MobileBertForQuestionAnswering",rn]],["squeezebert",["SqueezeBertForQuestionAnswering",an]]]),Pd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",So]],["idefics3",["Idefics3ForConditionalGeneration",un]],["smolvlm",["SmolVLMForConditionalGeneration",Cs]]]),Qh=new Map([["llava",["LlavaForConditionalGeneration",Ln]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",fa]],["moondream1",["Moondream1ForConditionalGeneration",$o]],["florence2",["Florence2ForConditionalGeneration",Ao]],["qwen2-vl",["Qwen2VLForConditionalGeneration",pi]],["idefics3",["Idefics3ForConditionalGeneration",un]],["smolvlm",["SmolVLMForConditionalGeneration",Cs]],["paligemma",["PaliGemmaForConditionalGeneration",ga]]]),Xh=new Map([["ultravox",["UltravoxModel",$h]]]),X0=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",So]]]),Jh=new Map([["vit",["ViTForImageClassification",xi]],["ijepa",["IJepaForImageClassification",Pi]],["pvt",["PvtForImageClassification",La]],["vit_msn",["ViTMSNForImageClassification",Na]],["fastvit",["FastViTForImageClassification",Wa]],["mobilevit",["MobileViTForImageClassification",qa]],["mobilevitv2",["MobileViTV2ForImageClassification",Xa]],["beit",["BeitForImageClassification",rl]],["deit",["DeiTForImageClassification",S]],["hiera",["HieraForImageClassification",re]],["convnext",["ConvNextForImageClassification",Gu]],["convnextv2",["ConvNextV2ForImageClassification",Hu]],["dinov2",["Dinov2ForImageClassification",Qu]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Ju]],["resnet",["ResNetForImageClassification",Be]],["swin",["SwinForImageClassification",ft]],["segformer",["SegformerForImageClassification",Zp]],["efficientnet",["EfficientNetForImageClassification",nh]],["mobilenet_v1",["MobileNetV1ForImageClassification",ih]],["mobilenet_v2",["MobileNetV2ForImageClassification",dh]],["mobilenet_v3",["MobileNetV3ForImageClassification",ph]],["mobilenet_v4",["MobileNetV4ForImageClassification",fh]]]),Yh=new Map([["detr",["DetrForObjectDetection",nl]],["rt_detr",["RTDetrForObjectDetection",al]],["table-transformer",["TableTransformerForObjectDetection",cl]],["yolos",["YolosForObjectDetection",tp]]]),Zh=new Map([["owlvit",["OwlViTForObjectDetection",Ya]],["owlv2",["Owlv2ForObjectDetection",el]],["grounding-dino",["GroundingDinoForObjectDetection",Zu]]]),mo=new Map([["detr",["DetrForSegmentation",Di]],["clipseg",["CLIPSegForImageSegmentation",$a]]]),em=new Map([["segformer",["SegformerForSemanticSegmentation",eh]],["sapiens",["SapiensForSemanticSegmentation",$u]],["swin",["SwinForSemanticSegmentation",Ot]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",ah]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",ch]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",hh]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",_h]]]),tm=new Map([["detr",["DetrForSegmentation",Di]],["maskformer",["MaskFormerForInstanceSegmentation",Ru]]]),rm=new Map([["sam",["SamModel",np]]]),sm=new Map([["wav2vec2",["Wav2Vec2ForCTC",up]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Pp]],["unispeech",["UniSpeechForCTC",yp]],["unispeech-sat",["UniSpeechSatForCTC",vp]],["wavlm",["WavLMForCTC",Ip]],["hubert",["HubertForCTC",$p]]]),nm=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",pp]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Cp]],["unispeech",["UniSpeechForSequenceClassification",Mp]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Tp]],["wavlm",["WavLMForSequenceClassification",Fp]],["hubert",["HubertForSequenceClassification",kp]],["audio-spectrogram-transformer",["ASTForAudioClassification",ca]]]),om=new Map([["wavlm",["WavLMForXVector",Op]]]),im=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",xp]],["wavlm",["WavLMForAudioFrameClassification",Dp]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",hp]],["pyannote",["PyAnnoteForAudioFrameClassification",fp]]]),am=new Map([["vitmatte",["VitMatteForImageMatting",Ka]]]),J0=new Map([["patchtst",["PatchTSTForPrediction",Eh]],["patchtsmixer",["PatchTSMixerForPrediction",Ch]]]),lm=new Map([["swin2sr",["Swin2SRForImageSuperResolution",xu]]]),dm=new Map([["dpt",["DPTForDepthEstimation",Pu]],["depth_anything",["DepthAnythingForDepthEstimation",Su]],["glpn",["GLPNForDepthEstimation",ju]],["sapiens",["SapiensForDepthEstimation",ku]],["depth_pro",["DepthProForDepthEstimation",Fu]],["metric3d",["Metric3DForDepthEstimation",Du]],["metric3dv2",["Metric3Dv2ForDepthEstimation",zu]]]),cm=new Map([["sapiens",["SapiensForNormalEstimation",Au]]]),um=new Map([["vitpose",["VitPoseForPoseEstimation",Oa]]]),pm=new Map([["clip",["CLIPVisionModelWithProjection",ba]],["siglip",["SiglipVisionModel",xa]],["jina_clip",["JinaCLIPVisionModel",Ws]]]),hm=[[G0,P.EncoderOnly],[K0,P.EncoderDecoder],[q0,P.DecoderOnly],[H0,P.AutoEncoder],[Gh,P.EncoderOnly],[Kh,P.EncoderOnly],[xd,P.Seq2Seq],[Td,P.Seq2Seq],[Ed,P.DecoderOnly],[Q0,P.MultiModality],[Hh,P.EncoderOnly],[qh,P.EncoderOnly],[Pd,P.Vision2Seq],[Qh,P.ImageTextToText],[Xh,P.AudioTextToText],[Jh,P.EncoderOnly],[mo,P.EncoderOnly],[tm,P.EncoderOnly],[em,P.EncoderOnly],[am,P.EncoderOnly],[J0,P.EncoderOnly],[lm,P.EncoderOnly],[dm,P.EncoderOnly],[cm,P.EncoderOnly],[um,P.EncoderOnly],[Yh,P.EncoderOnly],[Zh,P.EncoderOnly],[rm,P.MaskGeneration],[sm,P.EncoderOnly],[nm,P.EncoderOnly],[Uh,P.Seq2Seq],[Wh,P.EncoderOnly],[om,P.EncoderOnly],[im,P.EncoderOnly],[pm,P.EncoderOnly]];for(const[v,x]of hm)for(const[j,le]of v.values())y.set(j,x),E.set(le,j),M.set(j,le);const Y0=[["MusicgenForConditionalGeneration",Md,P.Musicgen],["Phi3VForCausalLM",zn,P.Phi3V],["CLIPTextModelWithProjection",Bn,P.EncoderOnly],["SiglipTextModel",Ta,P.EncoderOnly],["JinaCLIPTextModel",pn,P.EncoderOnly],["ClapTextModelWithProjection",Xp,P.EncoderOnly],["ClapAudioModelWithProjection",Jp,P.EncoderOnly],["DacEncoderModel",Bh,P.EncoderOnly],["DacDecoderModel",Rh,P.EncoderOnly],["MimiEncoderModel",Fh,P.EncoderOnly],["MimiDecoderModel",Oh,P.EncoderOnly],["SnacEncoderModel",jh,P.EncoderOnly],["SnacDecoderModel",Vh,P.EncoderOnly]];for(const[v,x,j]of Y0)y.set(v,j),E.set(x,v),M.set(v,x);const mm=new Map([["modnet",mo],["birefnet",mo],["isnet",mo],["ben",mo]]);for(const[v,x]of mm.entries())x.set(v,["PreTrainedModel",W]),y.set(v,P.EncoderOnly),E.set(W,v),M.set(v,W);class Z0 extends At{static MODEL_CLASS_MAPPINGS=hm.map(x=>x[0]);static BASE_IF_FAIL=!0}class eb extends At{static MODEL_CLASS_MAPPINGS=[Gh]}class tb extends At{static MODEL_CLASS_MAPPINGS=[Kh]}class rb extends At{static MODEL_CLASS_MAPPINGS=[xd]}class sb extends At{static MODEL_CLASS_MAPPINGS=[Td]}class nb extends At{static MODEL_CLASS_MAPPINGS=[Uh]}class ob extends At{static MODEL_CLASS_MAPPINGS=[Wh]}class ib extends At{static MODEL_CLASS_MAPPINGS=[Ed]}class ab extends At{static MODEL_CLASS_MAPPINGS=[Hh]}class lb extends At{static MODEL_CLASS_MAPPINGS=[qh]}class db extends At{static MODEL_CLASS_MAPPINGS=[Pd]}class cb extends At{static MODEL_CLASS_MAPPINGS=[Jh]}class ub extends At{static MODEL_CLASS_MAPPINGS=[mo]}class pb extends At{static MODEL_CLASS_MAPPINGS=[em]}class hb extends At{static MODEL_CLASS_MAPPINGS=[tm]}class mb extends At{static MODEL_CLASS_MAPPINGS=[Yh]}class fb extends At{static MODEL_CLASS_MAPPINGS=[Zh]}class _b extends At{static MODEL_CLASS_MAPPINGS=[rm]}class gb extends At{static MODEL_CLASS_MAPPINGS=[sm]}class wb extends At{static MODEL_CLASS_MAPPINGS=[nm]}class yb extends At{static MODEL_CLASS_MAPPINGS=[om]}class Mb extends At{static MODEL_CLASS_MAPPINGS=[im]}class bb extends At{static MODEL_CLASS_MAPPINGS=[X0]}class vb extends At{static MODEL_CLASS_MAPPINGS=[am]}class Tb extends At{static MODEL_CLASS_MAPPINGS=[lm]}class xb extends At{static MODEL_CLASS_MAPPINGS=[dm]}class Eb extends At{static MODEL_CLASS_MAPPINGS=[cm]}class Pb extends At{static MODEL_CLASS_MAPPINGS=[um]}class Cb extends At{static MODEL_CLASS_MAPPINGS=[pm]}class Sb extends At{static MODEL_CLASS_MAPPINGS=[Qh]}class $b extends At{static MODEL_CLASS_MAPPINGS=[Xh]}class kb extends he{constructor({logits:x,past_key_values:j,encoder_outputs:le,decoder_attentions:me=null,cross_attentions:ge=null}){super(),this.logits=x,this.past_key_values=j,this.encoder_outputs=le,this.decoder_attentions=me,this.cross_attentions=ge}}class _t extends he{constructor({logits:x,...j}){super(),this.logits=x;const le=Object.values(j);le.length>0&&(this.attentions=le)}}class fm extends he{constructor({logits:x,embeddings:j}){super(),this.logits=x,this.embeddings=j}}class dr extends he{constructor({logits:x}){super(),this.logits=x}}class fr extends he{constructor({logits:x}){super(),this.logits=x}}class Tr extends he{constructor({start_logits:x,end_logits:j}){super(),this.start_logits=x,this.end_logits=j}}class wn extends he{constructor({logits:x}){super(),this.logits=x}}class Ab extends he{constructor({logits:x,past_key_values:j}){super(),this.logits=x,this.past_key_values=j}}class _m extends he{constructor({alphas:x}){super(),this.alphas=x}}class gm extends he{constructor({waveform:x,spectrogram:j}){super(),this.waveform=x,this.spectrogram=j}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,n.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let u=0;u<p.length;++u)p[u]=(p[u]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>i});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var o=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,c={}){const p=await(0,n.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),u=p.feature_extractor_type,h=o[u];if(!h)throw new Error(`Unknown feature_extractor_type: '${u}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new h(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),o=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const u=await(0,n.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),h=u.image_processor_type??u.feature_extractor_type;let w=i[h];return w||(h!==void 0&&console.warn(`Image processor type '${h}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),w=o.ImageProcessor),new w(u)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),o=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(u,h={}){const w=await(0,n.getModelJSON)(u,s.IMAGE_PROCESSOR_NAME,!0,h),{image_processor_type:_,feature_extractor_type:C,processor_class:F}=w;if(F&&i[F])return i[F].from_pretrained(u,h);if(!_&&!C)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const T={};if(_){const $=a[_];if(!$)throw new Error(`Unknown image_processor_type: '${_}'.`);T.image_processor=new $(w)}if(C){const $=a[C];if($)T.image_processor=new $(w);else{const P=l[C];if(!P)throw new Error(`Unknown feature_extractor_type: '${C}'.`);T.feature_extractor=new P(w)}}const g={};return new o.Processor(g,T)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let u;const h=a.length-l;if(h>0)if(c==="rand_trunc"){const w=Math.floor(Math.random()*(h+1));a=a.subarray(w,w+l),u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(h<0){let w=new Float64Array(l);if(w.set(a),p==="repeat")for(let _=a.length;_<l;_+=a.length)w.set(a.subarray(0,Math.min(a.length,l-_)),_);else if(p==="repeatpad")for(let _=a.length;_<-h;_+=a.length)w.set(a,_);a=w}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);u=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return u.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,n.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>o,CLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>o,ConvNextImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){const l=this.size?.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const c=Math.floor(l/this.crop_pct),[p,u]=this.get_resize_output_image_size(a,{shortest_edge:c});a=await a.resize(p,u,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class o extends n{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>n});var s=t("./src/models/encodec/feature_extraction_encodec.js");class n extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>o,DeiTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],u=(0,n.full)(p,1n);return{...c,pixel_mask:u}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class i extends o{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>o,DonutImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(a,l,c,p={}){const[u,h,w]=l;let _=this.image_mean;Array.isArray(this.image_mean)||(_=new Array(w).fill(_));let C=this.image_std;Array.isArray(C)||(C=new Array(w).fill(_));const F=_.map((T,g)=>-T/C[g]);return super.pad_image(a,l,c,{center:!0,constant_values:F,...p})}}class o extends n{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>o,DPTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new n.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>n.EncodecFeatureExtractor,ImageFeatureExtractor:()=>C.ImageProcessor,MoonshineFeatureExtractor:()=>a.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>l.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>p.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>h.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>w.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),n=t("./src/models/encodec/feature_extraction_encodec.js"),o=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/moonshine/feature_extraction_moonshine.js"),l=t("./src/models/pyannote/feature_extraction_pyannote.js"),c=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),p=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),h=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),w=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),_=t("./src/models/whisper/feature_extraction_whisper.js"),C=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;constructor(l,c){super(l,c);const{tasks_answer_post_processing_type:p,task_prompts_without_inputs:u,task_prompts_with_input:h}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(p??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(h??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[u,h]of this.task_prompts_with_input)if(p.includes(u)){c.push(h.replaceAll("{input}",p).replaceAll(u,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const u=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let h;switch(u){case"pure_text":h=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const w=u==="ocr"?"quad_boxes":"bboxes",_=l.matchAll(this.regexes[w]),C=[],F=[];for(const[T,g,...$]of _)C.push(g?g.trim():C.at(-1)??""),F.push($.map((P,y)=>(Number(P)+.5)/this.size_per_bin*p[y%2]));h={labels:C,[w]:F};break;default:throw new Error(`Task "${c}" (of type "${u}") not yet implemented.`)}return{[c]:h}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=await this.image_processor(l,p),h=c?this.tokenizer(c,p):{};return{...u,...h}}}},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,n.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function a(c,p){const h=c.dims.at(-1)-1,w=c.tolist();w.fill(!1,0,1),w.fill(!1,h);const _=p.tolist();return w.map((C,F)=>C?F:null).filter(C=>C!==null).map(C=>_[C])}class l extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(p,u,h={}){const w=p?await this.image_processor(p,h):{};return{...u?this.tokenizer(u,h):{},...w}}post_process_grounded_object_detection(p,u,{box_threshold:h=.25,text_threshold:w=.25,target_sizes:_=null}={}){const{logits:C,pred_boxes:F}=p,T=C.dims[0];if(_!==null&&_.length!==T)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const g=C.dims.at(1),$=C.sigmoid(),P=$.max(-1).tolist(),y=F.tolist().map(E=>E.map(A=>(0,i.center_to_corners_format)(A))),M=[];for(let E=0;E<T;++E){const A=_!==null?_[E]:null;A!==null&&(y[E]=y[E].map(z=>z.map((Z,q)=>Z*A[(q+1)%2])));const B=P[E],N=[],Q=[],H=[];for(let z=0;z<g;++z){const Z=B[z];if(Z<=h)continue;const q=y[E][z],X=$[E][z];N.push(Z),H.push(q);const se=a(X.gt(w),u[E]);Q.push(se)}M.push({scores:N,boxes:H,labels:this.batch_decode(Q)})}return M}}},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const u=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/u),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*u),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let u=[],h=[],w=[];const _=[],C=[];for(const E of p){let A=await Promise.all(E.map(Q=>this.preprocess(Q)));_.push(...A.map(Q=>Q.original_size)),C.push(...A.map(Q=>Q.reshaped_input_size)),A.forEach(Q=>Q.pixel_values.unsqueeze_(0));const{longest_edge:B}=this.max_image_size;let N;if(l??this.do_image_splitting){let Q=new Array(A.length),H=new Array(A.length);N=await Promise.all(A.map(async(z,Z)=>{const q=this.get_resize_for_vision_encoder(z.pixel_values,B),X=await(0,n.interpolate_4d)(z.pixel_values,{size:[q.height,q.width]}),{frames:se,num_splits_h:ne,num_splits_w:ae}=await this.split_image(X,this.max_image_size);return Q[Z]=ne,H[Z]=ae,(0,n.cat)(se,0)})),h.push(Q),w.push(H)}else{const Q=[B,B];N=await Promise.all(A.map(H=>(0,n.interpolate_4d)(H.pixel_values,{size:Q}))),h.push(new Array(A.length).fill(0)),w.push(new Array(A.length).fill(0))}u.push((0,n.cat)(N,0))}const F=u.length,[T,g,$,P]=u[0].dims;let y,M;if(F===1)y=u[0].unsqueeze_(0),M=(0,n.full)([F,T,$,P],!0);else{const E=Math.max(...u.map(N=>N.dims.at(0)));M=(0,n.full)([F,E,$,P],!0);const A=M.data,B=E*$*P;for(let N=0;N<F;++N){const Q=u[N].dims[0];if(Q<E){u[N]=(0,n.cat)([u[N],(0,n.full)([E-Q,g,$,P],0)],0);const H=N*B+Q*$*P,z=(N+1)*B;A.fill(!1,H,z)}}y=(0,n.stack)(u,0)}return{pixel_values:y,pixel_attention_mask:M,original_sizes:_,reshaped_input_sizes:C,...c?{rows:h,cols:w}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,u=[],[h,w]=a.dims.slice(-2);let _=0,C=0;if(h>c||w>p){_=Math.ceil(h/c),C=Math.ceil(w/p);const F=Math.ceil(h/_),T=Math.ceil(w/C);for(let P=0;P<_;++P)for(let y=0;y<C;++y){let M,E,A,B;P===_-1?(E=h-F,B=h):(E=P*F,B=(P+1)*F),y===C-1?(M=w-T,A=w):(M=y*T,A=(y+1)*T);const N=[E,M],Q=[B,A],H=await(0,n.slice)(a,N,Q,[2,3]);u.push(H)}const g=c,$=p;(h!==g||w!==$)&&(a=await(0,n.interpolate_4d)(a,{size:[g,$]}))}return u.push(a),{frames:u,num_splits_h:_,num_splits_w:C}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function a(u,h,w,_,C,F){let T="";for(let g=0;g<h;++g){for(let $=0;$<w;++$)T+=_+`<row_${g+1}_col_${$+1}>`+C.repeat(u);T+=`
`}return T+=`
${_}${F}`+C.repeat(u)+`${_}`,T}function l(u,h,w,_){return`${h}${_}`+w.repeat(u)+`${h}`}function c(u,h,w,_,C,F){return u===0&&h===0?l(w,_,C,F):a(w,u,h,_,C,F)}class p extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(h,w=null,_={}){_.return_row_col_info??=!0;let C;w&&(C=await this.image_processor(w,_)),Array.isArray(h)||(h=[h]);const F=C.rows??[new Array(h.length).fill(0)],T=C.cols??[new Array(h.length).fill(0)],g=this.config.image_seq_len,$=[],P=[];for(let M=0;M<h.length;++M){const E=h[M],A=F[M],B=T[M];$.push((0,i.count)(E,this.image_token));const N=A.map((z,Z)=>c(z,B[Z],g,this.fake_image_token,this.image_token,this.global_img_token)),Q=E.split(this.image_token);if(Q.length===0)throw new Error("The image token should be present in the text.");let H=Q[0];for(let z=0;z<N.length;++z)H+=N[z]+Q[z+1];P.push(H)}return{...this.tokenizer(P),...C}}}},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>n.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>w.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>C.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>T.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>g.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>$.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>P.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>P.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>y.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>y.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>M.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>M.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>E.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>E.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>A.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>A.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>B.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>B.MobileViTImageProcessor,NougatImageProcessor:()=>N.NougatImageProcessor,OwlViTFeatureExtractor:()=>H.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>H.OwlViTImageProcessor,Owlv2ImageProcessor:()=>Q.Owlv2ImageProcessor,Phi3VImageProcessor:()=>z.Phi3VImageProcessor,PvtImageProcessor:()=>Z.PvtImageProcessor,Qwen2VLImageProcessor:()=>q.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>X.RTDetrImageProcessor,SamImageProcessor:()=>se.SamImageProcessor,SegformerFeatureExtractor:()=>ne.SegformerFeatureExtractor,SegformerImageProcessor:()=>ne.SegformerImageProcessor,SiglipImageProcessor:()=>ae.SiglipImageProcessor,SmolVLMImageProcessor:()=>pe.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>V.Swin2SRImageProcessor,VLMImageProcessor:()=>F.VLMImageProcessor,ViTFeatureExtractor:()=>L.ViTFeatureExtractor,ViTImageProcessor:()=>L.ViTImageProcessor,VitMatteImageProcessor:()=>O.VitMatteImageProcessor,VitPoseImageProcessor:()=>J.VitPoseImageProcessor,YolosFeatureExtractor:()=>ce.YolosFeatureExtractor,YolosImageProcessor:()=>ce.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),n=t("./src/models/bit/image_processing_bit.js"),o=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),h=t("./src/models/efficientnet/image_processing_efficientnet.js"),w=t("./src/models/glpn/image_processing_glpn.js"),_=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),C=t("./src/models/idefics3/image_processing_idefics3.js"),F=t("./src/models/janus/image_processing_janus.js"),T=t("./src/models/jina_clip/image_processing_jina_clip.js"),g=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),$=t("./src/models/mask2former/image_processing_mask2former.js"),P=t("./src/models/maskformer/image_processing_maskformer.js"),y=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),M=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),E=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),A=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),B=t("./src/models/mobilevit/image_processing_mobilevit.js"),N=t("./src/models/nougat/image_processing_nougat.js"),Q=t("./src/models/owlv2/image_processing_owlv2.js"),H=t("./src/models/owlvit/image_processing_owlvit.js"),z=t("./src/models/phi3_v/image_processing_phi3_v.js"),Z=t("./src/models/pvt/image_processing_pvt.js"),q=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),X=t("./src/models/rt_detr/image_processing_rt_detr.js"),se=t("./src/models/sam/image_processing_sam.js"),ne=t("./src/models/segformer/image_processing_segformer.js"),ae=t("./src/models/siglip/image_processing_siglip.js"),pe=t("./src/models/smolvlm/image_processing_smolvlm.js"),V=t("./src/models/swin2sr/image_processing_swin2sr.js"),L=t("./src/models/vit/image_processing_vit.js"),O=t("./src/models/vitmatte/image_processing_vitmatte.js"),J=t("./src/models/vitpose/image_processing_vitpose.js"),ce=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(i,a,l,c){return super.pad_image(i,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;constructor(u,h){super(u,h),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(u,{images:h=null,chat_template:w="default"}={}){h?Array.isArray(h)||(h=[h]):h=await Promise.all(u.filter(N=>N.images).flatMap(N=>N.images).map(N=>l.RawImage.read(N)));const _=this.tokenizer,C=_.apply_chat_template(u,{tokenize:!1,add_generation_prompt:!0,chat_template:w}),F=N=>_.encode(N,{add_special_tokens:!1}),T=C.split(this.image_tag),g=T.length-1;if(h.length!==g)throw new Error(`Number of images provided (${h.length}) does not match number of "${this.image_tag}" image tags (${g})`);const[$,P,y]=_.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let M=F(T[0]),E=new Array(M.length).fill(!1);for(let N=1;N<T.length;++N){const Q=new Array(this.num_image_tokens).fill($),H=F(T[N]);M=(0,i.mergeArrays)(M,[P],Q,[y],H);const z=new Array(this.num_image_tokens).fill(!0);E=(0,i.mergeArrays)(E,[!1],z,[!1],new Array(H.length).fill(!1))}const A=[1,M.length],B={input_ids:new a.Tensor("int64",M,A),attention_mask:new a.Tensor("int64",new Array(M.length).fill(1),A),images_seq_mask:new a.Tensor("bool",E,A),images_emb_mask:new a.Tensor("bool",new Array(g*this.num_image_tokens).fill(!0),[1,g,this.num_image_tokens])};if(h&&h.length>0){const N=await this.image_processor(h);return N.pixel_values.unsqueeze_(0),{...B,...N}}return B}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(i){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...u}=i,h=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},w=c==="bicubic"?3:2;super({...u,size:h,resample:w,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const u=l?this.tokenizer(l,p):{},h=c?await this.image_processor(c,p):{};return{...u,...h}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>n});var s=t("./src/models/maskformer/image_processing_maskformer.js");class n extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>o,MaskFormerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class o extends n{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,u){if(!a.hasOwnProperty(u))throw new Error(`Format ${u} is not supported.`);const[h,w]=a[u],_=this[h].bind(this),[C,F]=p.dims,T=[],g=[],$=p.tolist();for(let y=0;y<C;++y){const M=$[y],E=[],A=[];for(let N=1;N<F;++N){const[Q,H]=(0,i.max)((0,i.softmax)(M[N]));if(A.push(Q),H==w)break;E.push(H)}const B=A.length>0?A.reduce((N,Q)=>N*Q,1):0;g.push(E),T.push(B)}return[_(g),T]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(u=>u.replaceAll(" ",""))}batch_decode([p,u,h]){const[w,_]=this._decode_helper(p,"char"),[C,F]=this._decode_helper(u,"bpe"),[T,g]=this._decode_helper(h,"wp"),$=[],P=[];for(let y=0;y<w.length;++y){const[M,E]=(0,i.max)([_[y],F[y],g[y]]);$.push([w[y],C[y],T[y]][E]),P.push(M)}return{generated_text:$,scores:P,char_preds:w,bpe_preds:C,wp_preds:T}}static async from_pretrained(...p){const u=await super.from_pretrained(...p),h=await o.AutoTokenizer.from_pretrained("Xenova/gpt2"),w=await o.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return u.components={image_processor:u.image_processor,char_tokenizer:u.tokenizer,bpe_tokenizer:h,wp_tokenizer:w},u}async _call(p,u=null){const h=await this.image_processor(p);return u&&(h.labels=this.tokenizer(u).input_ids),h}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>o,MobileNetV1ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>o,MobileNetV2ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>o,MobileNetV3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>o,MobileNetV4ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>o,MobileViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new n.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>n});var s=t("./src/models/donut/image_processing_donut.js");class n extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>n});var s=t("./src/models/owlvit/image_processing_owlvit.js");class n extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>o,OwlViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class o extends n{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");class i extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");const i="<image>";function a(c,p,u,h,w){return`${h.repeat(u*w)}${p}${c}
`}class l extends s.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;static uses_processor_config=!1;async _call(p,u=null,h={}){u||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),u=""),Array.isArray(p)||(p=[p]),Array.isArray(u)||(u=[u]);const w=this.tokenizer.bos_token,_=this.image_processor.config.image_seq_length;let C;u.some(g=>g.includes(i))?C=u.map(g=>{const $=g.replaceAll(i,i.repeat(_)),P=$.lastIndexOf(i),y=P===-1?0:P+i.length;return $.slice(0,y)+w+$.slice(y)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),C=u.map(g=>a(g,w,_,i,p.length)));const F=this.tokenizer(C,h);return{...await this.image_processor(p,h),...F}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");const o=336,i=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(h){super({...h,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=h.num_crops}calc_num_image_tokens_from_image_size(h,w){const{num_img_tokens:_}=this.config;return l((l(w/o)*l(h/o)+1)*_+1+(l(w/o)+1)*c(_))}get_resize_output_image_size(h,w){const _=this._num_crops,[C,F]=h.size;let T=C/F,g=1;for(;g*Math.ceil(g/T)<=_;)g+=1;g-=1;const $=Math.floor(g*336),P=Math.floor($/T);return[$,P]}pad_image(h,w,_,C={}){const[F,T]=w,g=o*a(F/o),$=o*a(T/o),P=[1,1,1].map((y,M)=>(y-this.image_mean[M])/this.image_std[M]);return super.pad_image(h,w,{width:$,height:g},{center:!0,constant_values:P,...C})}async _call(h,{num_crops:w=null}={}){if(this._num_crops=w??=this.config.num_crops,w<4||c(w)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(h)||(h=[h]);const _=h.length,C=await Promise.all(h.map(E=>this.preprocess(E))),F=C.map(E=>E.original_size),T=C.map(E=>E.reshaped_input_size),g=[];for(const{pixel_values:E}of C){E.unsqueeze_(0);const[A,B]=E.dims.slice(-2),N=await(0,n.interpolate_4d)(E,{size:[o,o],mode:"bicubic"});if(w>0){const Q=[],H=c(w),z=l(B/H),Z=l(A/H);for(let X=0;X<H;++X)for(let se=0;se<H;++se){let ne,ae,pe,V;X===H-1?(ae=A-Z,V=A):(ae=X*Z,V=(X+1)*Z),se===H-1?(ne=B-z,pe=B):(ne=se*z,pe=(se+1)*z);const L=[ae,ne],O=[V,pe],J=await(0,n.slice)(E,L,O,i);Q.push(J)}const q=await(0,n.interpolate_4d)((0,n.cat)(Q,0),{size:[o,o],mode:"bicubic"});g.push((0,n.cat)([N,q],0))}else g.push(N)}const $=(0,n.stack)(g,0),P=T.map(E=>E.map(A=>o*a(A/o))),y=new n.Tensor("int64",P.flat(),[_,2]),M=P.map(([E,A])=>this.calc_num_image_tokens_from_image_size(A,E));return{pixel_values:$,original_sizes:F,reshaped_input_sizes:T,image_sizes:y,num_img_tokens:M}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;async _call(p,u=null,{padding:h=!0,truncation:w=!0,num_crops:_=null}={}){Array.isArray(p)||(p=[p]);let C,F;if(u){F=await this.image_processor(u,{num_crops:_});const{num_img_tokens:T}=F,g=p.map((P,y)=>P.split(a).join(i.repeat(T[y])));C=this.tokenizer(g,{padding:h,truncation:w});const $=this.tokenizer.model.convert_tokens_to_ids([i])[0];C.input_ids.map_(P=>P==$?-P:P)}else C=this.tokenizer(p);return{...C,...F}}}},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>a.JinaCLIPProcessor,MgpstrProcessor:()=>l.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>h.PaliGemmaProcessor,Phi3VProcessor:()=>u.Phi3VProcessor,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>C.SamProcessor,SmolVLMProcessor:()=>F.SmolVLMProcessor,SpeechT5Processor:()=>T.SpeechT5Processor,UltravoxProcessor:()=>g.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2Processor:()=>$.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>P.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>y.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),n=t("./src/models/grounding_dino/processing_grounding_dino.js"),o=t("./src/models/idefics3/processing_idefics3.js"),i=t("./src/models/janus/processing_janus.js"),a=t("./src/models/jina_clip/processing_jina_clip.js"),l=t("./src/models/mgp_str/processing_mgp_str.js"),c=t("./src/models/moonshine/processing_moonshine.js"),p=t("./src/models/owlvit/processing_owlvit.js"),u=t("./src/models/phi3_v/processing_phi3_v.js"),h=t("./src/models/paligemma/processing_paligemma.js"),w=t("./src/models/pyannote/processing_pyannote.js"),_=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),C=t("./src/models/sam/processing_sam.js"),F=t("./src/models/smolvlm/processing_smolvlm.js"),T=t("./src/models/speecht5/processing_speecht5.js"),g=t("./src/models/ultravox/processing_ultravox.js"),$=t("./src/models/wav2vec2/processing_wav2vec2.js"),P=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),y=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/maths.js");class i extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new n.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,u=[];for(const h of l.tolist()){const w=[];let _=-1;for(let C=0;C<h.length;++C){const F=(0,o.softmax)(h[C]),[T,g]=(0,o.max)(F),[$,P]=[C,C+1];g!==_?(_=g,w.push({id:g,start:$,end:P,score:T})):(w.at(-1).end=P,w.at(-1).score+=T)}u.push(w.map(({id:C,start:F,end:T,score:g})=>({id:C,start:F*p,end:T*p,confidence:g/(T-F)})))}return u}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/pyannote/feature_extraction_pyannote.js");class o extends s.Processor{static feature_extractor_class=n.PyAnnoteFeatureExtractor;async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:u}=await super._call(a,...l);let h=c;const{temporal_patch_size:w,merge_size:_,patch_size:C}=this.config;h.dims[0]===1&&(h=(0,n.cat)(Array.from({length:w},()=>h),0));const F=h.dims[0]/w,T=h.dims[1],g=Math.floor(h.dims[2]/C),$=Math.floor(h.dims[3]/C),P=h.view(F,w,T,Math.floor(g/_),_,C,Math.floor($/_),_,C).permute(0,3,6,4,7,2,1,5,8).view(F*g*$,T*w*C*C),y=new n.Tensor("int64",[F,g,$],[1,3]);return{pixel_values:P,image_grid_thw:y,original_sizes:p,reshaped_input_sizes:u}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let u,h;if(c&&(u=await this.image_processor(c),h=u.image_grid_thw),h){let _=this.image_processor.config.merge_size**2,C=0;const F=h.tolist();l=l.map(T=>{for(;T.includes("<|image_pad|>");){const g=Number(F[C++].reduce(($,P)=>$*P,1n));T=T.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(g/_)))}return T.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...u}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...i){return(0,s.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/core.js"),o=t("./src/utils/tensor.js");class i extends s.ImageProcessor{reshape_input_points(l,c,p,u=!1){l=structuredClone(l);let h=(0,n.calculateDimensions)(l);if(h.length===3)u||(h=[1,...h]),l=[l];else if(h.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let w=0;w<l.length;++w){let _=c[w],C=p[w],F=[C[0]/_[0],C[1]/_[1]];for(let T=0;T<l[w].length;++T)for(let g=0;g<l[w][T].length;++g)for(let $=0;$<l[w][T][g].length;++$)l[w][T][g][$]*=F[$%2]}return new o.Tensor("float32",Float32Array.from(l.flat(1/0)),h)}add_input_labels(l,c){let p=(0,n.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((u,h)=>u!==c.dims[h]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new o.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:u=null}={}){const h=await super._call(l);if(c&&(h.input_points=this.reshape_input_points(c,h.original_sizes,h.reshaped_input_sizes)),p){if(!h.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");h.input_labels=this.add_input_labels(p,h.input_points)}return u&&(h.input_boxes=this.reshape_input_points(u,h.original_sizes,h.reshaped_input_sizes,!0)),h}async post_process_masks(l,c,p,{mask_threshold:u=0,binarize:h=!0,pad_size:w=null}={}){const _=[];w=w??this.pad_size;const C=[w.height,w.width];for(let F=0;F<c.length;++F){const T=c[F],g=p[F];let $=await(0,o.interpolate_4d)(l[F],{mode:"bilinear",size:C});if($=$.slice(null,null,[0,g[0]],[0,g[1]]),$=await(0,o.interpolate_4d)($,{mode:"bilinear",size:T}),h){const P=$.data,y=new Uint8Array(P.length);for(let M=0;M<P.length;++M)P[M]>u&&(y[M]=1);$=new o.Tensor("bool",y,$.dims)}_.push($)}return _}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:u=512/1500,points_per_crop:h=32,crop_n_points_downscale_factor:w=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js");class o extends s.Processor{static image_processor_class=n.AutoImageProcessor;async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),o=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);for(let u=0;u<p.length;++u)p[u].push(0);this.mel_filters=p,this.window=(0,o.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,o.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:u=!0,return_attention_mask:h=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let w=await this._extract_fbank_features(l,this.config.max_length);if(u){const[y,M]=w.dims,E=w.data;for(let A=0;A<M;++A){let B=0;for(let z=0;z<y;++z)B+=E[z*M+A];const N=B/y;let Q=0;for(let z=0;z<y;++z)Q+=(E[z*M+A]-N)**2;Q/=y-1;const H=Math.sqrt(Q+1e-7);for(let z=0;z<y;++z){const Z=z*M+A;E[Z]=(E[Z]-N)/H}}}let _;if(c){const[y,M]=w.dims,E=w.data,A=y%p;if(A>0){const B=new Float32Array(M*(y+A));B.set(E),B.fill(this.config.padding_value,E.length);const N=y+A;w=new n.Tensor(w.type,B,[N,M]),h&&(_=new n.Tensor("int64",new BigInt64Array(N),[1,N]),_.data.fill(1n,0,y))}}const[C,F]=w.dims,T=this.config.stride;if(C%T!==0)throw new Error(`The number of frames (${C}) must be a multiple of the stride (${T}).`);const $=w.view(1,Math.floor(C/T),F*T),P={input_features:$};if(h){const y=$.dims[1],M=new BigInt64Array(y);if(_){const E=_.data;for(let A=1,B=0;A<C;A+=T,++B)M[B]=E[A]}else M.fill(1n);P.attention_mask=new n.Tensor("int64",M,[1,y])}return P}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>o,SegformerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class o extends n{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>n});var s=t("./src/models/dac/feature_extraction_dac.js");class n extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");class n extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js");class i extends s.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(i,a,l,c={}){const[p,u,h]=a;return super.pad_image(i,a,{width:u+(l-u%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!0;async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let u={};if(c){const w=c.length,{input_features:_}=await this.feature_extractor(c,{...p,max_length:w}),C=Math.round(w/this.config.encoder_ds_factor+1e-4),F=1+Math.ceil(C/this.config.stack_factor);u.audio_token_len=[F],u.audio_values=_;const T=this.config.audio_placeholder;if(!l.includes(T))throw new Error(`The input text does not contain the image token ${T}.`);l=l.replaceAll(T,T.repeat(F))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...u}}}},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>o,ViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class o extends n{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(h=>this.preprocess(h))),p=await Promise.all(l.map(h=>this.preprocess(h,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,n.stack)(c.map((h,w)=>(0,n.cat)([h.pixel_values,p[w].pixel_values],0)),0),original_sizes:c.map(h=>h.original_size),reshaped_input_sizes:c.map(h=>h.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_pose_estimation(i,a,{threshold:l=null}={}){const c=i.tolist(),[p,u,h,w]=i.dims,_=[];for(let C=0;C<p;++C){const F=c[C],T=a[C],g=[];for(let $=0;$<T.length;++$){const P=T[$],y=[],M=[],E=[],A=P.at(-2)/w,B=P.at(-1)/h;for(let N=0;N<F.length;++N){let[Q,H]=[0,0],z=0,Z=-1/0;const q=F[N];for(let se=0;se<q.length;++se){const ne=q[se];for(let ae=0;ae<ne.length;++ae){const pe=ne[ae];z+=pe,Z=Math.max(Z,pe),Q+=(ae+.5)*pe,H+=se*pe}}if(l!=null&&Z<l)continue;const X=[A*Q/z,B*H/z];y.push(X),E.push(N),M.push(Z)}g.push({bbox:P,scores:M,labels:E,keypoints:y})}_.push(g)}return _}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class o extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((u,h)=>u+h,0)/a.length,p=a.reduce((u,h)=>u+(h-c)**2,0)/a.length;return a.map(u=>(u-c)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new n.Tensor("float32",l,c),attention_mask:new n.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>i});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>i});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,n.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);for(let p=0;p<c.length;++p)c[p].push(0);this.mel_filters=c,this.window=(0,n.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[u,h,w]=l.dims;for(let _=0;_<u;++_){const C=_*h*w,F=_*w;for(let T=0;T<h;++T){const g=C+T*w;for(let $=0;$<w;++$)p[g+$]-=c[F+$]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>n,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>o,whisper_language_to_code:()=>i});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],n=new Map(s),o=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(a){a=a.toLowerCase();let l=o.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),n.has(a))l=a;else{const u=a.length===2?n.keys():n.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(u))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js"),o=t("./src/utils/maths.js");class i extends s.FeatureExtractor{constructor(l){super(l),this.config.mel_filters??=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,n.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,u=(0,o.max)(p)[0];for(let h=0;h<p.length;++h)p[h]=(Math.max(p[h],u-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const u=c??this.config.n_samples;return l.length>u?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,u)):(p=new Float32Array(u),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>n});var s=t("./src/generation/configuration_utils.js");class n extends s.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>o,YolosImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class o extends n{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),n=t("./src/utils/tensor.js"),o=t("./src/env.js");const i=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV,a=async(c,p,u)=>{const h=await(0,s.createInferenceSession)(new Uint8Array(c),p);let w=Promise.resolve();return async _=>{const C=(0,s.isONNXProxy)(),F=Object.fromEntries(Object.entries(_).map(([g,$])=>[g,(C?$.clone():$).ort_tensor])),T=await(w=i?w.then(()=>h.run(F)):h.run(F));return Array.isArray(u)?u.map(g=>new n.Tensor(T[g])):new n.Tensor(T[u])}};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>H,AutomaticSpeechRecognitionPipeline:()=>Z,BackgroundRemovalPipeline:()=>ne,DepthEstimationPipeline:()=>ce,DocumentQuestionAnsweringPipeline:()=>L,FeatureExtractionPipeline:()=>N,FillMaskPipeline:()=>$,ImageClassificationPipeline:()=>X,ImageFeatureExtractionPipeline:()=>Q,ImageSegmentationPipeline:()=>se,ImageToImagePipeline:()=>J,ImageToTextPipeline:()=>q,ObjectDetectionPipeline:()=>pe,Pipeline:()=>C,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>y,Text2TextGenerationPipeline:()=>P,TextClassificationPipeline:()=>F,TextGenerationPipeline:()=>A,TextToAudioPipeline:()=>O,TokenClassificationPipeline:()=>T,TranslationPipeline:()=>M,ZeroShotAudioClassificationPipeline:()=>z,ZeroShotClassificationPipeline:()=>B,ZeroShotImageClassificationPipeline:()=>ae,ZeroShotObjectDetectionPipeline:()=>V,pipeline:()=>Ee});var s=t("./src/tokenizers.js"),n=t("./src/models.js"),o=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),u=t("./src/utils/image.js");async function h(ye){return Array.isArray(ye)||(ye=[ye]),await Promise.all(ye.map(K=>u.RawImage.read(K)))}async function w(ye,K){return Array.isArray(ye)||(ye=[ye]),await Promise.all(ye.map(W=>typeof W=="string"||W instanceof URL?(0,c.read_audio)(W,K):W instanceof Float64Array?new Float32Array(W):W))}function _(ye,K){K&&(ye=ye.map(ke=>ke|0));const[W,he,Pe,ve]=ye;return{xmin:W,ymin:he,xmax:Pe,ymax:ve}}class C extends i.Callable{constructor({task:K,model:W,tokenizer:he=null,processor:Pe=null}){super(),this.task=K,this.model=W,this.tokenizer=he,this.processor=Pe}async dispose(){await this.model.dispose()}}class F extends C{constructor(K){super(K)}async _call(K,{top_k:W=1}={}){const he=this.tokenizer(K,{padding:!0,truncation:!0}),Pe=await this.model(he),ve=this.model.config.problem_type==="multi_label_classification"?Oe=>Oe.sigmoid():Oe=>new p.Tensor("float32",(0,l.softmax)(Oe.data),Oe.dims),ke=this.model.config.id2label,Ae=[];for(const Oe of Pe.logits){const Ue=ve(Oe),Ve=await(0,p.topk)(Ue,W),D=Ve[0].tolist(),R=Ve[1].tolist().map((te,oe)=>({label:ke?ke[te]:`LABEL_${te}`,score:D[oe]}));W===1?Ae.push(...R):Ae.push(R)}return Array.isArray(K)||W===1?Ae:Ae[0]}}class T extends C{constructor(K){super(K)}async _call(K,{ignore_labels:W=["O"]}={}){const he=Array.isArray(K),Pe=this.tokenizer(he?K:[K],{padding:!0,truncation:!0}),ke=(await this.model(Pe)).logits,Ae=this.model.config.id2label,Oe=[];for(let Ue=0;Ue<ke.dims[0];++Ue){const Ve=Pe.input_ids[Ue],D=ke[Ue],Y=[];for(let R=0;R<D.dims[0];++R){const te=D[R],oe=(0,l.max)(te.data)[1],Te=Ae?Ae[oe]:`LABEL_${oe}`;if(W.includes(Te))continue;const Ce=this.tokenizer.decode([Ve[R].item()],{skip_special_tokens:!0});if(Ce==="")continue;const De=(0,l.softmax)(te.data);Y.push({entity:Te,score:De[oe],index:R,word:Ce})}Oe.push(Y)}return he?Oe:Oe[0]}}class g extends C{constructor(K){super(K)}async _call(K,W,{top_k:he=1}={}){const Pe=this.tokenizer(K,{text_pair:W,padding:!0,truncation:!0}),{start_logits:ve,end_logits:ke}=await this.model(Pe),Ae=Pe.input_ids.tolist(),Oe=Pe.attention_mask.tolist(),Ue=this.tokenizer.all_special_ids,Ve=[];for(let D=0;D<ve.dims[0];++D){const Y=Ae[D],R=Y.findIndex(we=>we==this.tokenizer.sep_token_id);Oe[D].map((we,Le)=>we==1&&(Le===0||Le>R&&Ue.findIndex(ot=>ot==Y[Le])===-1));const te=ve[D].tolist(),oe=ke[D].tolist();for(let we=1;we<te.length;++we)(Oe[D]==0||we<=R||Ue.findIndex(Le=>Le==Y[we])!==-1)&&(te[we]=-1/0,oe[we]=-1/0);const Te=(0,l.softmax)(te).map((we,Le)=>[we,Le]),Ce=(0,l.softmax)(oe).map((we,Le)=>[we,Le]);Te[0][0]=0,Ce[0][0]=0;const De=(0,a.product)(Te,Ce).filter(we=>we[0][1]<=we[1][1]).map(we=>[we[0][1],we[1][1],we[0][0]*we[1][0]]).sort((we,Le)=>Le[2]-we[2]);for(let we=0;we<Math.min(De.length,he);++we){const[Le,ot,lt]=De[we],Tt=Y.slice(Le,ot+1),Mt=this.tokenizer.decode(Tt,{skip_special_tokens:!0});Ve.push({answer:Mt,score:lt})}}return he===1?Ve[0]:Ve}}class $ extends C{constructor(K){super(K)}async _call(K,{top_k:W=5}={}){const he=this.tokenizer(K,{padding:!0,truncation:!0}),{logits:Pe}=await this.model(he),ve=[],ke=he.input_ids.tolist();for(let Ae=0;Ae<ke.length;++Ae){const Oe=ke[Ae],Ue=Oe.findIndex(te=>te==this.tokenizer.mask_token_id);if(Ue===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ve=Pe[Ae][Ue],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ve.data),Ve.dims),W),Y=D[0].tolist(),R=D[1].tolist();ve.push(R.map((te,oe)=>{const Te=Oe.slice();return Te[Ue]=te,{score:Y[oe],token:Number(te),token_str:this.tokenizer.decode([te]),sequence:this.tokenizer.decode(Te,{skip_special_tokens:!0})}}))}return Array.isArray(K)?ve:ve[0]}}class P extends C{_key="generated_text";constructor(K){super(K)}async _call(K,W={}){Array.isArray(K)||(K=[K]),this.model.config.prefix&&(K=K.map(Oe=>this.model.config.prefix+Oe));const he=this.model.config.task_specific_params;he&&he[this.task]&&he[this.task].prefix&&(K=K.map(Oe=>he[this.task].prefix+Oe));const Pe=this.tokenizer,ve={padding:!0,truncation:!0};let ke;this instanceof M&&"_build_translation_inputs"in Pe?ke=Pe._build_translation_inputs(K,ve,W):ke=Pe(K,ve);const Ae=await this.model.generate({...ke,...W});return Pe.batch_decode(Ae,{skip_special_tokens:!0}).map(Oe=>({[this._key]:Oe}))}}class y extends P{_key="summary_text";constructor(K){super(K)}}class M extends P{_key="translation_text";constructor(K){super(K)}}function E(ye){return Array.isArray(ye)&&ye.every(K=>"role"in K&&"content"in K)}class A extends C{constructor(K){super(K)}async _call(K,W={}){let he=!1,Pe=!1,ve;if(typeof K=="string")ve=K=[K];else if(Array.isArray(K)&&K.every(R=>typeof R=="string"))he=!0,ve=K;else{if(E(K))K=[K];else if(Array.isArray(K)&&K.every(E))he=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Pe=!0,ve=K.map(R=>this.tokenizer.apply_chat_template(R,{tokenize:!1,add_generation_prompt:!0}))}const ke=W.add_special_tokens??!1,Ae=Pe?!1:W.return_full_text??!0;this.tokenizer.padding_side="left";const Oe=this.tokenizer(ve,{add_special_tokens:ke,padding:!0,truncation:!0}),Ue=await this.model.generate({...Oe,...W}),Ve=this.tokenizer.batch_decode(Ue,{skip_special_tokens:!0});let D;!Ae&&Oe.input_ids.dims.at(-1)>0&&(D=this.tokenizer.batch_decode(Oe.input_ids,{skip_special_tokens:!0}).map(R=>R.length));const Y=Array.from({length:K.length},R=>[]);for(let R=0;R<Ve.length;++R){const te=Math.floor(R/Ue.dims[0]*K.length);D&&(Ve[R]=Ve[R].slice(D[te])),Y[te].push({generated_text:Pe?[...K[te],{role:"assistant",content:Ve[R]}]:Ve[R]})}return!he&&Y.length===1?Y[0]:Y}}class B extends C{constructor(K){super(K),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([W,he])=>[W.toLowerCase(),he])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(K,W,{hypothesis_template:he="This example is {}.",multi_label:Pe=!1}={}){const ve=Array.isArray(K);ve||(K=[K]),Array.isArray(W)||(W=[W]);const ke=W.map(Ue=>he.replace("{}",Ue)),Ae=Pe||W.length===1,Oe=[];for(const Ue of K){const Ve=[];for(const R of ke){const te=this.tokenizer(Ue,{text_pair:R,padding:!0,truncation:!0}),oe=await this.model(te);Ae?Ve.push([oe.logits.data[this.contradiction_id],oe.logits.data[this.entailment_id]]):Ve.push(oe.logits.data[this.entailment_id])}const Y=(Ae?Ve.map(R=>(0,l.softmax)(R)[1]):(0,l.softmax)(Ve)).map((R,te)=>[R,te]).sort((R,te)=>te[0]-R[0]);Oe.push({sequence:Ue,labels:Y.map(R=>W[R[1]]),scores:Y.map(R=>R[0])})}return ve?Oe:Oe[0]}}class N extends C{constructor(K){super(K)}async _call(K,{pooling:W="none",normalize:he=!1,quantize:Pe=!1,precision:ve="binary"}={}){const ke=this.tokenizer(K,{padding:!0,truncation:!0}),Ae=await this.model(ke);let Oe=Ae.last_hidden_state??Ae.logits??Ae.token_embeddings;if(W!=="none")if(W==="mean")Oe=(0,p.mean_pooling)(Oe,ke.attention_mask);else if(W==="cls")Oe=Oe.slice(null,0);else throw Error(`Pooling method '${W}' not supported.`);return he&&(Oe=Oe.normalize(2,-1)),Pe&&(Oe=(0,p.quantize_embeddings)(Oe,ve)),Oe}}class Q extends C{constructor(K){super(K)}async _call(K,{pool:W=null}={}){const he=await h(K),{pixel_values:Pe}=await this.processor(he),ve=await this.model({pixel_values:Pe});let ke;if(W){if(!("pooler_output"in ve))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");ke=ve.pooler_output}else ke=ve.last_hidden_state??ve.logits??ve.image_embeds;return ke}}class H extends C{constructor(K){super(K)}async _call(K,{top_k:W=5}={}){const he=this.processor.feature_extractor.config.sampling_rate,Pe=await w(K,he),ve=this.model.config.id2label,ke=[];for(const Ae of Pe){const Oe=await this.processor(Ae),Ve=(await this.model(Oe)).logits[0],D=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ve.data),Ve.dims),W),Y=D[0].tolist(),te=D[1].tolist().map((oe,Te)=>({label:ve?ve[oe]:`LABEL_${oe}`,score:Y[Te]}));ke.push(te)}return Array.isArray(K)?ke:ke[0]}}class z extends C{constructor(K){super(K)}async _call(K,W,{hypothesis_template:he="This is a sound of {}."}={}){const Pe=!Array.isArray(K);Pe&&(K=[K]);const ve=W.map(Ve=>he.replace("{}",Ve)),ke=this.tokenizer(ve,{padding:!0,truncation:!0}),Ae=this.processor.feature_extractor.config.sampling_rate,Oe=await w(K,Ae),Ue=[];for(const Ve of Oe){const D=await this.processor(Ve),Y=await this.model({...ke,...D}),R=(0,l.softmax)(Y.logits_per_audio.data);Ue.push([...R].map((te,oe)=>({score:te,label:W[oe]})))}return Pe?Ue[0]:Ue}}class Z extends C{constructor(K){super(K)}async _call(K,W={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(K,W);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(K,W);case"moonshine":return this._call_moonshine(K,W);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(K,W){W.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),W.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const he=!Array.isArray(K);he&&(K=[K]);const Pe=this.processor.feature_extractor.config.sampling_rate,ve=await w(K,Pe),ke=[];for(const Ae of ve){const Oe=await this.processor(Ae),Ve=(await this.model(Oe)).logits[0],D=[];for(const R of Ve)D.push((0,l.max)(R.data)[1]);const Y=this.tokenizer.decode(D);ke.push({text:Y})}return he?ke[0]:ke}async _call_whisper(K,W){const he=W.return_timestamps??!1,Pe=W.chunk_length_s??0,ve=W.force_full_sequences??!1;let ke=W.stride_length_s??null;const Ae={...W};he==="word"&&(Ae.return_token_timestamps=!0,Ae.return_timestamps=!1);const Oe=!Array.isArray(K);Oe&&(K=[K]);const Ue=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ve=this.processor.feature_extractor.config.hop_length,D=this.processor.feature_extractor.config.sampling_rate,Y=await w(K,D),R=[];for(const te of Y){let oe=[];if(Pe>0){if(ke===null)ke=Pe/6;else if(Pe<=ke)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const De=D*Pe,we=D*ke,Le=De-2*we;let ot=0;for(;;){const lt=ot+De,Tt=te.subarray(ot,lt),Mt=await this.processor(Tt),rr=ot===0,Lt=lt>=te.length;if(oe.push({stride:[Tt.length,rr?0:we,Lt?0:we],input_features:Mt.input_features,is_last:Lt}),Lt)break;ot+=Le}}else oe=[{stride:[te.length,0,0],input_features:(await this.processor(te)).input_features,is_last:!0}];for(const De of oe){Ae.num_frames=Math.floor(De.stride[0]/Ve);const we=await this.model.generate({inputs:De.input_features,...Ae});he==="word"?(De.tokens=we.sequences.tolist()[0],De.token_timestamps=we.token_timestamps.tolist()[0].map(Le=>(0,l.round)(Le,2))):De.tokens=we[0].tolist(),De.stride=De.stride.map(Le=>Le/D)}const[Te,Ce]=this.tokenizer._decode_asr(oe,{time_precision:Ue,return_timestamps:he,force_full_sequences:ve});R.push({text:Te,...Ce})}return Oe?R[0]:R}async _call_moonshine(K,W){const he=!Array.isArray(K);he&&(K=[K]);const Pe=this.processor.feature_extractor.config.sampling_rate,ve=await w(K,Pe),ke=[];for(const Ae of ve){const Oe=await this.processor(Ae),Ue=Math.floor(Ae.length/Pe)*6,Ve=await this.model.generate({max_new_tokens:Ue,...W,...Oe}),D=this.processor.batch_decode(Ve,{skip_special_tokens:!0})[0];ke.push({text:D})}return he?ke[0]:ke}}class q extends C{constructor(K){super(K)}async _call(K,W={}){const he=Array.isArray(K),Pe=await h(K),{pixel_values:ve}=await this.processor(Pe),ke=[];for(const Ae of ve){Ae.dims=[1,...Ae.dims];const Oe=await this.model.generate({inputs:Ae,...W}),Ue=this.tokenizer.batch_decode(Oe,{skip_special_tokens:!0}).map(Ve=>({generated_text:Ve.trim()}));ke.push(Ue)}return he?ke:ke[0]}}class X extends C{constructor(K){super(K)}async _call(K,{top_k:W=5}={}){const he=await h(K),{pixel_values:Pe}=await this.processor(he),ve=await this.model({pixel_values:Pe}),ke=this.model.config.id2label,Ae=[];for(const Oe of ve.logits){const Ue=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Oe.data),Oe.dims),W),Ve=Ue[0].tolist(),Y=Ue[1].tolist().map((R,te)=>({label:ke?ke[R]:`LABEL_${R}`,score:Ve[te]}));Ae.push(Y)}return Array.isArray(K)?Ae:Ae[0]}}class se extends C{constructor(K){super(K),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(K,{threshold:W=.5,mask_threshold:he=.5,overlap_mask_area_threshold:Pe=.8,label_ids_to_fuse:ve=null,target_sizes:ke=null,subtask:Ae=null}={}){if(Array.isArray(K)&&K.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const Ue=await h(K),Ve=Ue.map(De=>[De.height,De.width]),D=await this.processor(Ue),{inputNames:Y,outputNames:R}=this.model.sessions.model;if(!Y.includes("pixel_values")){if(Y.length!==1)throw Error(`Expected a single input name, but got ${Y.length} inputs: ${Y}.`);const De=Y[0];if(De in D)throw Error(`Input name ${De} already exists in the inputs.`);D[De]=D.pixel_values}const te=await this.model(D);let oe=null;if(Ae!==null)oe=this.subtasks_mapping[Ae];else if(this.processor.image_processor){for(const[De,we]of Object.entries(this.subtasks_mapping))if(we in this.processor.image_processor){oe=this.processor.image_processor[we].bind(this.processor.image_processor),Ae=De;break}}const Te=this.model.config.id2label,Ce=[];if(Ae)if(Ae==="panoptic"||Ae==="instance"){const De=oe(te,W,he,Pe,ve,ke??Ve)[0],we=De.segmentation;for(const Le of De.segments_info){const ot=new Uint8ClampedArray(we.data.length);for(let Tt=0;Tt<we.data.length;++Tt)we.data[Tt]===Le.id&&(ot[Tt]=255);const lt=new u.RawImage(ot,we.dims[1],we.dims[0],1);Ce.push({score:Le.score,label:Te[Le.label_id],mask:lt})}}else if(Ae==="semantic"){const{segmentation:De,labels:we}=oe(te,ke??Ve)[0];for(const Le of we){const ot=new Uint8ClampedArray(De.data.length);for(let Tt=0;Tt<De.data.length;++Tt)De.data[Tt]===Le&&(ot[Tt]=255);const lt=new u.RawImage(ot,De.dims[1],De.dims[0],1);Ce.push({score:null,label:Te[Le],mask:lt})}}else throw Error(`Subtask ${Ae} not supported.`);else{const we=te[R[0]];for(let Le=0;Le<Ve.length;++Le){const ot=Ve[Le],lt=we[Le];lt.data.some(Mt=>Mt<-1e-5||Mt>1+1e-5)&&lt.sigmoid_();const Tt=await u.RawImage.fromTensor(lt.mul_(255).to("uint8")).resize(ot[1],ot[0]);Ce.push({label:null,score:null,mask:Tt})}}return Ce}}class ne extends se{constructor(K){super(K)}async _call(K,W={}){if(Array.isArray(K)&&K.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const Pe=await h(K),ve=await super._call(K,W);return Pe.map((Ae,Oe)=>{const Ue=Ae.clone();return Ue.putAlpha(ve[Oe].mask),Ue})}}class ae extends C{constructor(K){super(K)}async _call(K,W,{hypothesis_template:he="This is a photo of {}"}={}){const Pe=Array.isArray(K),ve=await h(K),ke=W.map(Y=>he.replace("{}",Y)),Ae=this.tokenizer(ke,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Oe}=await this.processor(ve),Ue=await this.model({...Ae,pixel_values:Oe}),Ve=this.model.config.model_type==="siglip"?Y=>Y.sigmoid().data:Y=>(0,l.softmax)(Y.data),D=[];for(const Y of Ue.logits_per_image){const te=[...Ve(Y)].map((oe,Te)=>({score:oe,label:W[Te]}));te.sort((oe,Te)=>Te.score-oe.score),D.push(te)}return Pe?D:D[0]}}class pe extends C{constructor(K){super(K)}async _call(K,{threshold:W=.9,percentage:he=!1}={}){const Pe=Array.isArray(K);if(Pe&&K.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const ve=await h(K),ke=he?null:ve.map(R=>[R.height,R.width]),{pixel_values:Ae,pixel_mask:Oe}=await this.processor(ve),Ue=await this.model({pixel_values:Ae,pixel_mask:Oe}),Ve=this.processor.image_processor.post_process_object_detection(Ue,W,ke),D=this.model.config.id2label,Y=Ve.map(R=>R.boxes.map((te,oe)=>({score:R.scores[oe],label:D[R.classes[oe]],box:_(te,!he)})));return Pe?Y:Y[0]}}class V extends C{constructor(K){super(K)}async _call(K,W,{threshold:he=.1,top_k:Pe=null,percentage:ve=!1}={}){const ke=Array.isArray(K),Ae=await h(K),Oe=this.tokenizer(W,{padding:!0,truncation:!0}),Ue=await this.processor(Ae),Ve=[];for(let D=0;D<Ae.length;++D){const Y=Ae[D],R=ve?null:[[Y.height,Y.width]],te=Ue.pixel_values[D].unsqueeze_(0),oe=await this.model({...Oe,pixel_values:te});let Te;if("post_process_grounded_object_detection"in this.processor){const Ce=this.processor.post_process_grounded_object_detection(oe,Oe.input_ids,{box_threshold:he,text_threshold:he,target_sizes:R})[0];Te=Ce.boxes.map((De,we)=>({score:Ce.scores[we],label:Ce.labels[we],box:_(De,!ve)}))}else{const Ce=this.processor.image_processor.post_process_object_detection(oe,he,R,!0)[0];Te=Ce.boxes.map((De,we)=>({score:Ce.scores[we],label:W[Ce.classes[we]],box:_(De,!ve)}))}Te.sort((Ce,De)=>De.score-Ce.score),Pe!==null&&(Te=Te.slice(0,Pe)),Ve.push(Te)}return ke?Ve:Ve[0]}}class L extends C{constructor(K){super(K)}async _call(K,W,he={}){const Pe=(await h(K))[0],{pixel_values:ve}=await this.processor(Pe),ke=`<s_docvqa><s_question>${W}</s_question><s_answer>`,Ae=this.tokenizer(ke,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Oe=await this.model.generate({inputs:ve,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Ae,...he}),Ve=this.tokenizer.batch_decode(Oe)[0].match(/<s_answer>(.*?)<\/s_answer>/);let D=null;return Ve&&Ve.length>=2&&(D=Ve[1].trim()),[{answer:D}]}}class O extends C{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(K){super(K),this.vocoder=K.vocoder??null}async _call(K,{speaker_embeddings:W=null}={}){return this.processor?this._call_text_to_spectrogram(K,{speaker_embeddings:W}):this._call_text_to_waveform(K)}async _call_text_to_waveform(K){const W=this.tokenizer(K,{padding:!0,truncation:!0}),{waveform:he}=await this.model(W),Pe=this.model.config.sampling_rate;return new c.RawAudio(he.data,Pe)}async _call_text_to_spectrogram(K,{speaker_embeddings:W}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await n.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof W=="string"||W instanceof URL)&&(W=new Float32Array(await(await fetch(W)).arrayBuffer())),W instanceof Float32Array)W=new p.Tensor("float32",W,[1,W.length]);else if(!(W instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:he}=this.tokenizer(K,{padding:!0,truncation:!0}),{waveform:Pe}=await this.model.generate_speech(he,W,{vocoder:this.vocoder}),ve=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(Pe.data,ve)}}class J extends C{constructor(K){super(K)}async _call(K){const W=await h(K),he=await this.processor(W),Pe=await this.model(he),ve=[];for(const ke of Pe.reconstruction){const Ae=ke.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");ve.push(u.RawImage.fromTensor(Ae))}return ve.length>1?ve:ve[0]}}class ce extends C{constructor(K){super(K)}async _call(K){const W=await h(K),he=await this.processor(W),{predicted_depth:Pe}=await this.model(he),ve=[];for(let ke=0;ke<W.length;++ke){const Ae=Pe[ke],[Oe,Ue]=Ae.dims.slice(-2),[Ve,D]=W[ke].size,Y=(await(0,p.interpolate_4d)(Ae.view(1,1,Oe,Ue),{size:[D,Ve],mode:"bilinear"})).view(D,Ve),R=Y.min().item(),te=Y.max().item(),oe=Y.sub(R).div_(te-R).mul_(255).to("uint8").unsqueeze(0),Te=u.RawImage.fromTensor(oe);ve.push({predicted_depth:Y,depth:Te})}return ve.length>1?ve:ve[0]}}const be=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:F,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:T,model:n.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:g,model:n.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:$,model:n.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:y,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:M,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:P,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:A,model:n.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:B,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:H,model:n.AutoModelForAudioClassification,processor:o.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:z,model:n.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:Z,model:[n.AutoModelForSpeechSeq2Seq,n.AutoModelForCTC],processor:o.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:O,model:[n.AutoModelForTextToWaveform,n.AutoModelForTextToSpectrogram],processor:[o.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:q,model:n.AutoModelForVision2Seq,processor:o.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:X,model:n.AutoModelForImageClassification,processor:o.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:se,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ne,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:ae,model:n.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:pe,model:n.AutoModelForObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:V,model:n.AutoModelForZeroShotObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:L,model:n.AutoModelForDocumentQuestionAnswering,processor:o.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:J,model:n.AutoModelForImageToImage,processor:o.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ce,model:n.AutoModelForDepthEstimation,processor:o.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:N,model:n.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:o.AutoProcessor,pipeline:Q,model:[n.AutoModelForImageFeatureExtraction,n.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ue=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Ee(ye,K=null,{progress_callback:W=null,config:he=null,cache_dir:Pe=null,local_files_only:ve=!1,revision:ke="main",device:Ae=null,dtype:Oe=null,subfolder:Ue="onnx",use_external_data_format:Ve=null,model_file_name:D=null,session_options:Y={}}={}){ye=ue[ye]??ye;const R=be[ye.split("_",1)[0]];if(!R)throw Error(`Unsupported pipeline: ${ye}. Must be one of [${Object.keys(be)}]`);K||(K=R.default.model,console.log(`No model specified. Using default model: "${K}".`));const te={progress_callback:W,config:he,cache_dir:Pe,local_files_only:ve,revision:ke,device:Ae,dtype:Oe,subfolder:Ue,use_external_data_format:Ve,model_file_name:D,session_options:Y},oe=new Map([["tokenizer",R.tokenizer],["model",R.model],["processor",R.processor]]),Te=await Ne(oe,K,te);Te.task=ye,(0,a.dispatchCallback)(W,{status:"ready",task:ye,model:K});const Ce=R.pipeline;return new Ce(Te)}async function Ne(ye,K,W){const he=Object.create(null),Pe=[];for(const[ve,ke]of ye.entries()){if(!ke)continue;let Ae;Array.isArray(ke)?Ae=new Promise(async(Oe,Ue)=>{let Ve;for(const D of ke){if(D===null){Oe(null);return}try{Oe(await D.from_pretrained(K,W));return}catch(Y){if(Y.message?.includes("Unsupported model type"))Ve=Y;else if(Y.message?.includes("Could not locate file"))Ve=Y;else{Ue(Y);return}}}Ue(Ve)}):Ae=ke.from_pretrained(K,W),he[ve]=Ae,Pe.push(Ae)}await Promise.all(Pe);for(const[ve,ke]of Object.entries(he))he[ve]=await ke;return he}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Lr,AutoTokenizer:()=>Dn,BartTokenizer:()=>Fs,BertTokenizer:()=>Ur,BlenderbotSmallTokenizer:()=>er,BlenderbotTokenizer:()=>lr,BloomTokenizer:()=>Kr,CLIPTokenizer:()=>sn,CamembertTokenizer:()=>Qe,CodeGenTokenizer:()=>hr,CodeLlamaTokenizer:()=>zs,CohereTokenizer:()=>an,ConvBertTokenizer:()=>ir,DebertaTokenizer:()=>hs,DebertaV2Tokenizer:()=>ms,DistilBertTokenizer:()=>Je,ElectraTokenizer:()=>Is,EsmTokenizer:()=>Ar,FalconTokenizer:()=>Yr,GPT2Tokenizer:()=>Gr,GPTNeoXTokenizer:()=>Ns,GemmaTokenizer:()=>br,Grok1Tokenizer:()=>Hr,HerbertTokenizer:()=>fs,LlamaTokenizer:()=>Ls,M2M100Tokenizer:()=>js,MBart50Tokenizer:()=>Os,MBartTokenizer:()=>vs,MPNetTokenizer:()=>Rs,MarianTokenizer:()=>Cr,MgpstrTokenizer:()=>ws,MobileBertTokenizer:()=>bs,NllbTokenizer:()=>Pr,NougatTokenizer:()=>nn,PreTrainedTokenizer:()=>it,Qwen2Tokenizer:()=>tn,RoFormerTokenizer:()=>Re,RobertaTokenizer:()=>Ds,SiglipTokenizer:()=>Ts,SpeechT5Tokenizer:()=>Es,SqueezeBertTokenizer:()=>ps,T5Tokenizer:()=>Wr,TokenizerModel:()=>Q,VitsTokenizer:()=>on,Wav2Vec2CTCTokenizer:()=>xs,WhisperTokenizer:()=>rn,XLMRobertaTokenizer:()=>Bs,XLMTokenizer:()=>ar,is_chinese_char:()=>$});var s=t("./src/utils/generic.js"),n=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function u(de,k){const G=await Promise.all([(0,o.getModelJSON)(de,"tokenizer.json",!0,k),(0,o.getModelJSON)(de,"tokenizer_config.json",!0,k)]);return k.legacy!==null&&(G[1].legacy=k.legacy),G}function h(de,k){const G=[];let ee=0;for(const ie of de.matchAll(k)){const _e=ie[0];ee<ie.index&&G.push(de.slice(ee,ie.index)),_e.length>0&&G.push(_e),ee=ie.index+_e.length}return ee<de.length&&G.push(de.slice(ee)),G}function w(de,k=!0){if(de.Regex!==void 0){let G=de.Regex.replace(/\\([#&~])/g,"$1");for(const[ee,ie]of B)G=G.replaceAll(ee,ie);return new RegExp(G,"gu")}else if(de.String!==void 0){const G=(0,n.escapeRegExp)(de.String);return new RegExp(k?G:`(${G})`,"gu")}else return console.warn("Unknown pattern type:",de),null}function _(de){return new Map(Object.entries(de))}function C(de){const k=de.dims;switch(k.length){case 1:return de.tolist();case 2:if(k[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return de.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${k.length}.`)}}function F(de){return de.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function T(de){return de.replace(/\p{M}/gu,"")}function g(de){return T(de.toLowerCase())}function $(de){return de>=19968&&de<=40959||de>=13312&&de<=19903||de>=131072&&de<=173791||de>=173824&&de<=177983||de>=177984&&de<=178207||de>=178208&&de<=183983||de>=63744&&de<=64255||de>=194560&&de<=195103}function P(de,k,G){const ee=[];let ie=0;for(;ie<de.length;){if(ee.push(de[ie]),(k.get(de[ie])??G)!==G){++ie;continue}for(;++ie<de.length&&(k.get(de[ie])??G)===G;)k.get(ee.at(-1))!==G&&(ee[ee.length-1]+=de[ie])}return ee}function y(de){return de.match(/\S+/g)||[]}const M="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",E=new RegExp(`^[${M}]+$`,"gu"),A=".,!?…。，、।۔،",B=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${A}])]+`,` ?[^\\s${A}]+`]]);class N{constructor(k){this.content=k.content,this.id=k.id,this.single_word=k.single_word??!1,this.lstrip=k.lstrip??!1,this.rstrip=k.rstrip??!1,this.special=k.special??!1,this.normalized=k.normalized??null}}class Q extends s.Callable{constructor(k){super(),this.config=k,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(k,...G){switch(k.type){case"WordPiece":return new H(k);case"Unigram":return new z(k,...G);case"BPE":return new X(k);default:if(k.vocab)return Array.isArray(k.vocab)?new z(k,...G):typeof k.vocab=="object"&&k.continuing_subword_prefix&&k.unk_token?new H(k):new se(k,...G);throw new Error(`Unknown TokenizerModel type: ${k.type}`)}}_call(k){return k=this.encode(k),this.fuse_unk&&(k=P(k,this.tokens_to_ids,this.unk_token_id)),k}encode(k){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(k){return k.map(G=>this.tokens_to_ids.get(G)??this.unk_token_id)}convert_ids_to_tokens(k){return k.map(G=>this.vocab[G]??this.unk_token)}}class H extends Q{constructor(k){super(k),this.tokens_to_ids=_(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.max_input_chars_per_word=k.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[G,ee]of this.tokens_to_ids)this.vocab[ee]=G}encode(k){const G=[];for(const ee of k){const ie=[...ee];if(ie.length>this.max_input_chars_per_word){G.push(this.unk_token);continue}let _e=!1,$e=0;const Ke=[];for(;$e<ie.length;){let He=ie.length,qe=null;for(;$e<He;){let We=ie.slice($e,He).join("");if($e>0&&(We=this.config.continuing_subword_prefix+We),this.tokens_to_ids.has(We)){qe=We;break}--He}if(qe===null){_e=!0;break}Ke.push(qe),$e=He}_e?G.push(this.unk_token):G.push(...Ke)}return G}}class z extends Q{constructor(k,G){super(k);const ee=k.vocab.length;this.vocab=new Array(ee),this.scores=new Array(ee);for(let ie=0;ie<ee;++ie)[this.vocab[ie],this.scores[ie]]=k.vocab[ie];this.unk_token_id=k.unk_id,this.unk_token=this.vocab[k.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ie,_e)=>[ie,_e])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=G.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(k){const G=k.chars,ee=1;let ie=0;for(;ie<G.length;){let _e=!1;const $e=G.slice(ie).join(""),Ke=this.trie.commonPrefixSearch($e);for(const He of Ke){const qe=this.tokens_to_ids.get(He),We=this.scores[qe],vt=(0,n.len)(He);k.insert(ie,vt,We,qe),!_e&&vt===ee&&(_e=!0)}_e||k.insert(ie,ee,this.unk_score,this.unk_token_id),ie+=ee}}tokenize(k){const G=new l.TokenLattice(k,this.bos_token_id,this.eos_token_id);return this.populateNodes(G),G.tokens()}encode(k){const G=[];for(const ee of k){const ie=this.tokenize(ee);G.push(...ie)}return G}}const Z=(()=>{const de=[...Array.from({length:94},(ie,_e)=>_e+33),...Array.from({length:12},(ie,_e)=>_e+161),...Array.from({length:82},(ie,_e)=>_e+174)],k=de.slice();let G=0;for(let ie=0;ie<256;++ie)de.includes(ie)||(de.push(ie),k.push(256+G),G+=1);const ee=k.map(ie=>String.fromCharCode(ie));return Object.fromEntries(de.map((ie,_e)=>[ie,ee[_e]]))})(),q=(0,n.reverseDictionary)(Z);class X extends Q{constructor(k){super(k),this.tokens_to_ids=_(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ee,ie]of this.tokens_to_ids)this.vocab[ie]=ee;const G=Array.isArray(k.merges[0]);this.merges=G?k.merges:k.merges.map(ee=>ee.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ee,ie)=>[JSON.stringify(ee),ie])),this.end_of_word_suffix=k.end_of_word_suffix,this.continuing_subword_suffix=k.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(k){if(k.length===0)return[];const G=this.cache.get(k);if(G!==void 0)return G;const ee=Array.from(k);this.end_of_word_suffix&&(ee[ee.length-1]+=this.end_of_word_suffix);let ie=[];if(ee.length>1){const _e=new l.PriorityQueue((He,qe)=>He.score<qe.score);let $e={token:ee[0],bias:0,prev:null,next:null},Ke=$e;for(let He=1;He<ee.length;++He){const qe={bias:He/ee.length,token:ee[He],prev:Ke,next:null};Ke.next=qe,this._add_node(_e,Ke),Ke=qe}for(;!_e.isEmpty();){const He=_e.pop();if(He.deleted||!He.next||He.next.deleted)continue;if(He.deleted=!0,He.next.deleted=!0,He.prev){const We={...He.prev};He.prev.deleted=!0,He.prev=We,We.prev?We.prev.next=We:$e=We}const qe={token:He.token+He.next.token,bias:He.bias,prev:He.prev,next:He.next.next};qe.prev?(qe.prev.next=qe,this._add_node(_e,qe.prev)):$e=qe,qe.next&&(qe.next.prev=qe,this._add_node(_e,qe))}for(let He=$e;He!==null;He=He.next)ie.push(He.token)}else ie=ee;if(this.continuing_subword_suffix)for(let _e=0;_e<ie.length-1;++_e)ie[_e]+=this.continuing_subword_suffix;return this.cache.set(k,ie),ie}_add_node(k,G){const ee=this.bpe_ranks.get(JSON.stringify([G.token,G.next.token]));ee!==void 0&&(G.score=ee+G.bias,k.push(G))}encode(k){const G=[];for(const ee of k){if(this.ignore_merges&&this.tokens_to_ids.has(ee)){G.push(ee);continue}const ie=this.bpe(ee);for(const _e of ie)if(this.tokens_to_ids.has(_e))G.push(_e);else if(this.byte_fallback){const $e=Array.from(this.text_encoder.encode(_e)).map(Ke=>`<0x${Ke.toString(16).toUpperCase().padStart(2,"0")}>`);$e.every(Ke=>this.tokens_to_ids.has(Ke))?G.push(...$e):G.push(this.unk_token)}else G.push(this.unk_token)}return G}}class se extends Q{constructor(k,G){super(k),this.tokens_to_ids=_(G.target_lang?k.vocab[G.target_lang]:k.vocab),this.bos_token=G.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=G.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=G.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=G.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ee,ie]of this.tokens_to_ids)this.vocab[ie]=ee}encode(k){return k}}class ne extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"BertNormalizer":return new ye(k);case"Precompiled":return new Lt(k);case"Sequence":return new Ne(k);case"Replace":return new ae(k);case"NFC":return new V(k);case"NFD":return new L(k);case"NFKC":return new O(k);case"NFKD":return new J(k);case"Strip":return new ce(k);case"StripAccents":return new be(k);case"Lowercase":return new ue(k);case"Prepend":return new Ee(k);default:throw new Error(`Unknown Normalizer type: ${k.type}`)}}normalize(k){throw Error("normalize should be implemented in subclass.")}_call(k){return this.normalize(k)}}class ae extends ne{normalize(k){const G=w(this.config.pattern);return G===null?k:k.replaceAll(G,this.config.content)}}class pe extends ne{form=void 0;normalize(k){return k=k.normalize(this.form),k}}class V extends pe{form="NFC"}class L extends pe{form="NFD"}class O extends pe{form="NFKC"}class J extends pe{form="NFKD"}class ce extends ne{normalize(k){return this.config.strip_left&&this.config.strip_right?k=k.trim():(this.config.strip_left&&(k=k.trimStart()),this.config.strip_right&&(k=k.trimEnd())),k}}class be extends ne{normalize(k){return k=T(k),k}}class ue extends ne{normalize(k){return k=k.toLowerCase(),k}}class Ee extends ne{normalize(k){return k=this.config.prepend+k,k}}class Ne extends ne{constructor(k){super(k),this.normalizers=k.normalizers.map(G=>ne.fromConfig(G))}normalize(k){return this.normalizers.reduce((G,ee)=>ee.normalize(G),k)}}class ye extends ne{_tokenize_chinese_chars(k){const G=[];for(let ee=0;ee<k.length;++ee){const ie=k[ee],_e=ie.charCodeAt(0);$(_e)?(G.push(" "),G.push(ie),G.push(" ")):G.push(ie)}return G.join("")}stripAccents(k){return k.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(k){switch(k){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(k)}}_clean_text(k){const G=[];for(const ee of k){const ie=ee.charCodeAt(0);ie===0||ie===65533||this._is_control(ee)||(/^\s$/.test(ee)?G.push(" "):G.push(ee))}return G.join("")}normalize(k){return this.config.clean_text&&(k=this._clean_text(k)),this.config.handle_chinese_chars&&(k=this._tokenize_chinese_chars(k)),this.config.lowercase?(k=k.toLowerCase(),this.config.strip_accents!==!1&&(k=this.stripAccents(k))):this.config.strip_accents&&(k=this.stripAccents(k)),k}}class K extends s.Callable{static fromConfig(k){if(k===null)return null;switch(k.type){case"BertPreTokenizer":return new W(k);case"Sequence":return new pr(k);case"Whitespace":return new cs(k);case"WhitespaceSplit":return new Vr(k);case"Metaspace":return new Mt(k);case"ByteLevel":return new he(k);case"Split":return new Pe(k);case"Punctuation":return new ve(k);case"Digits":return new ke(k);case"Replace":return new kr(k);default:throw new Error(`Unknown PreTokenizer type: ${k.type}`)}}pre_tokenize_text(k,G){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(k,G){return(Array.isArray(k)?k.map(ee=>this.pre_tokenize_text(ee,G)):this.pre_tokenize_text(k,G)).flat()}_call(k,G){return this.pre_tokenize(k,G)}}class W extends K{constructor(k){super(),this.pattern=new RegExp(`[^\\s${M}]+|[${M}]`,"gu")}pre_tokenize_text(k,G){return k.trim().match(this.pattern)||[]}}class he extends K{constructor(k){super(),this.config=k,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Z,this.text_encoder=new TextEncoder}pre_tokenize_text(k,G){return this.add_prefix_space&&!k.startsWith(" ")&&(k=" "+k),(this.use_regex?k.match(this.pattern)||[]:[k]).map(ie=>Array.from(this.text_encoder.encode(ie),_e=>this.byte_encoder[_e]).join(""))}}class Pe extends K{constructor(k){super(),this.config=k,this.pattern=w(this.config.pattern,this.config.invert)}pre_tokenize_text(k,G){return this.pattern===null?[]:this.config.invert?k.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?k.split(this.pattern).filter(ee=>ee):h(k,this.pattern)}}class ve extends K{constructor(k){super(),this.config=k,this.pattern=new RegExp(`[^${M}]+|[${M}]+`,"gu")}pre_tokenize_text(k,G){return k.match(this.pattern)||[]}}class ke extends K{constructor(k){super(),this.config=k;const G=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(G,"gu")}pre_tokenize_text(k,G){return k.match(this.pattern)||[]}}class Ae extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"TemplateProcessing":return new Ve(k);case"ByteLevel":return new D(k);case"RobertaProcessing":return new Ue(k);case"BertProcessing":return new Oe(k);case"Sequence":return new Y(k);default:throw new Error(`Unknown PostProcessor type: ${k.type}`)}}post_process(k,...G){throw Error("post_process should be implemented in subclass.")}_call(k,...G){return this.post_process(k,...G)}}class Oe extends Ae{constructor(k){super(k),this.cls=k.cls[0],this.sep=k.sep[0]}post_process(k,G=null,{add_special_tokens:ee=!0}={}){ee&&(k=(0,n.mergeArrays)([this.cls],k,[this.sep]));let ie=new Array(k.length).fill(0);if(G!==null){const _e=ee&&this instanceof Ue?[this.sep]:[],$e=ee?[this.sep]:[];k=(0,n.mergeArrays)(k,_e,G,$e),ie=(0,n.mergeArrays)(ie,new Array(G.length+_e.length+$e.length).fill(1))}return{tokens:k,token_type_ids:ie}}}class Ue extends Oe{}class Ve extends Ae{constructor(k){super(k),this.single=k.single,this.pair=k.pair}post_process(k,G=null,{add_special_tokens:ee=!0}={}){const ie=G===null?this.single:this.pair;let _e=[],$e=[];for(const Ke of ie)"SpecialToken"in Ke?ee&&(_e.push(Ke.SpecialToken.id),$e.push(Ke.SpecialToken.type_id)):"Sequence"in Ke&&(Ke.Sequence.id==="A"?(_e=(0,n.mergeArrays)(_e,k),$e=(0,n.mergeArrays)($e,new Array(k.length).fill(Ke.Sequence.type_id))):Ke.Sequence.id==="B"&&(_e=(0,n.mergeArrays)(_e,G),$e=(0,n.mergeArrays)($e,new Array(G.length).fill(Ke.Sequence.type_id))));return{tokens:_e,token_type_ids:$e}}}class D extends Ae{post_process(k,G=null){return G&&(k=(0,n.mergeArrays)(k,G)),{tokens:k}}}class Y extends Ae{constructor(k){super(k),this.processors=k.processors.map(G=>Ae.fromConfig(G))}post_process(k,G=null,ee={}){let ie;for(const _e of this.processors)if(_e instanceof D)k=_e.post_process(k).tokens,G&&(G=_e.post_process(G).tokens);else{const $e=_e.post_process(k,G,ee);k=$e.tokens,ie=$e.token_type_ids}return{tokens:k,token_type_ids:ie}}}class R extends s.Callable{constructor(k){super(),this.config=k,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=k.trim_offsets}static fromConfig(k){if(k===null)return null;switch(k.type){case"WordPiece":return new De(k);case"Metaspace":return new rr(k);case"ByteLevel":return new we(k);case"Replace":return new te(k);case"ByteFallback":return new oe(k);case"Fuse":return new Te(k);case"Strip":return new Ce(k);case"Sequence":return new ot(k);case"CTC":return new Le(k);case"BPEDecoder":return new lt(k);default:throw new Error(`Unknown Decoder type: ${k.type}`)}}_call(k){return this.decode(k)}decode(k){return this.decode_chain(k).join("")}decode_chain(k){throw Error("`decode_chain` should be implemented in subclass.")}}class te extends R{decode_chain(k){const G=w(this.config.pattern);return G===null?k:k.map(ee=>ee.replaceAll(G,this.config.content))}}class oe extends R{constructor(k){super(k),this.text_decoder=new TextDecoder}decode_chain(k){const G=[];let ee=[];for(const ie of k){let _e=null;if(ie.length===6&&ie.startsWith("<0x")&&ie.endsWith(">")){const $e=parseInt(ie.slice(3,5),16);isNaN($e)||(_e=$e)}if(_e!==null)ee.push(_e);else{if(ee.length>0){const $e=this.text_decoder.decode(Uint8Array.from(ee));G.push($e),ee=[]}G.push(ie)}}if(ee.length>0){const ie=this.text_decoder.decode(Uint8Array.from(ee));G.push(ie),ee=[]}return G}}class Te extends R{decode_chain(k){return[k.join("")]}}class Ce extends R{constructor(k){super(k),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(k){return k.map(G=>{let ee=0;for(let _e=0;_e<this.start&&G[_e]===this.content;++_e){ee=_e+1;continue}let ie=G.length;for(let _e=0;_e<this.stop;++_e){const $e=G.length-_e-1;if(G[$e]===this.content){ie=$e;continue}else break}return G.slice(ee,ie)})}}class De extends R{constructor(k){super(k),this.cleanup=k.cleanup}decode_chain(k){return k.map((G,ee)=>(ee!==0&&(G.startsWith(this.config.prefix)?G=G.replace(this.config.prefix,""):G=" "+G),this.cleanup&&(G=F(G)),G))}}class we extends R{constructor(k){super(k),this.byte_decoder=q,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(k){const G=k.join(""),ee=new Uint8Array([...G].map(_e=>this.byte_decoder[_e]));return this.text_decoder.decode(ee)}decode_chain(k){const G=[];let ee=[];for(const ie of k)this.added_tokens.find(_e=>_e.content===ie)!==void 0?(ee.length>0&&(G.push(this.convert_tokens_to_string(ee)),ee=[]),G.push(ie)):ee.push(ie);return ee.length>0&&G.push(this.convert_tokens_to_string(ee)),G}}class Le extends R{constructor(k){super(k),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(k){if(k.length===0)return"";const G=[k[0]];for(let _e=1;_e<k.length;++_e)k[_e]!==G.at(-1)&&G.push(k[_e]);let ie=G.filter(_e=>_e!==this.pad_token).join("");return this.cleanup&&(ie=F(ie).replaceAll(this.word_delimiter_token," ").trim()),ie}decode_chain(k){return[this.convert_tokens_to_string(k)]}}class ot extends R{constructor(k){super(k),this.decoders=k.decoders.map(G=>R.fromConfig(G))}decode_chain(k){return this.decoders.reduce((G,ee)=>ee.decode_chain(G),k)}}class lt extends R{constructor(k){super(k),this.suffix=this.config.suffix}decode_chain(k){return k.map((G,ee)=>G.replaceAll(this.suffix,ee===k.length-1?"":" "))}}class Tt extends R{decode_chain(k){let G="";for(let ee=1;ee<k.length;ee+=2)G+=k[ee];return[G]}}class Mt extends K{constructor(k){super(),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement,this.strRep=k.str_rep||this.replacement,this.prepend_scheme=k.prepend_scheme??"always"}pre_tokenize_text(k,{section_index:G=void 0}={}){let ee=k.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ee.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&G===0)&&(ee=this.strRep+ee),[ee]}}class rr extends R{constructor(k){super(k),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement}decode_chain(k){const G=[];for(let ee=0;ee<k.length;++ee){let ie=k[ee].replaceAll(this.replacement," ");this.addPrefixSpace&&ee==0&&ie.startsWith(" ")&&(ie=ie.substring(1)),G.push(ie)}return G}}class Lt extends ne{constructor(k){super(k),this.charsmap=k.precompiled_charsmap}normalize(k){return k=k.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),k=k.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),k.includes("～")?k=k.split("～").map(ee=>ee.normalize("NFKC")).join("～"):k=k.normalize("NFKC"),k}}class pr extends K{constructor(k){super(),this.tokenizers=k.pretokenizers.map(G=>K.fromConfig(G))}pre_tokenize_text(k,G){return this.tokenizers.reduce((ee,ie)=>ie.pre_tokenize(ee,G),[k])}}class cs extends K{constructor(k){super()}pre_tokenize_text(k,G){return k.match(/\w+|[^\w\s]+/g)||[]}}class Vr extends K{constructor(k){super()}pre_tokenize_text(k,G){return y(k)}}class kr extends K{constructor(k){super(),this.config=k,this.pattern=w(this.config.pattern),this.content=this.config.content}pre_tokenize_text(k,G){return this.pattern===null?[k]:[k.replaceAll(this.pattern,this.config.content)]}}const Dr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Ms(de,k,G,ee){for(const ie of Object.keys(de)){const _e=k-de[ie].length,$e=G(ie),Ke=new Array(_e).fill($e);de[ie]=ee==="right"?(0,n.mergeArrays)(de[ie],Ke):(0,n.mergeArrays)(Ke,de[ie])}}function us(de,k){for(const G of Object.keys(de))de[G].length=k}class it extends s.Callable{return_token_type_ids=!1;padding_side="right";constructor(k,G){super(),this._tokenizer_config=G,this.normalizer=ne.fromConfig(k.normalizer),this.pre_tokenizer=K.fromConfig(k.pre_tokenizer),this.model=Q.fromConfig(k.model,G),this.post_processor=Ae.fromConfig(k.post_processor),this.decoder=R.fromConfig(k.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ee of k.added_tokens){const ie=new N(ee);this.added_tokens.push(ie),this.model.tokens_to_ids.set(ie.content,ie.id),this.model.vocab[ie.id]=ie.content,ie.special&&(this.special_tokens.push(ie.content),this.all_special_ids.push(ie.id))}if(this.additional_special_tokens=G.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ee,ie)=>ie.content.length-ee.content.length).map(ee=>`${ee.lstrip?"\\s*":""}(${(0,n.escapeRegExp)(ee.content)})${ee.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=G.model_max_length,this.remove_space=G.remove_space,this.clean_up_tokenization_spaces=G.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=G.do_lowercase_and_remove_accent??!1,G.padding_side&&(this.padding_side=G.padding_side),this.legacy=!1,this.chat_template=G.chat_template??null,Array.isArray(this.chat_template)){const ee=Object.create(null);for(const{name:ie,template:_e}of this.chat_template){if(typeof ie!="string"||typeof _e!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ee[ie]=_e}this.chat_template=ee}this._compiled_template_cache=new Map}getToken(...k){for(const G of k){const ee=this._tokenizer_config[G];if(ee)if(typeof ee=="object"){if(ee.__type==="AddedToken")return ee.content;throw Error(`Unknown token: ${ee}`)}else return ee}return null}static async from_pretrained(k,{progress_callback:G=null,config:ee=null,cache_dir:ie=null,local_files_only:_e=!1,revision:$e="main",legacy:Ke=null}={}){const He=await u(k,{progress_callback:G,config:ee,cache_dir:ie,local_files_only:_e,revision:$e,legacy:Ke});return new this(...He)}_call(k,{text_pair:G=null,add_special_tokens:ee=!0,padding:ie=!1,truncation:_e=null,max_length:$e=null,return_tensor:Ke=!0,return_token_type_ids:He=null}={}){const qe=Array.isArray(k);let We;if(qe){if(k.length===0)throw Error("text array must be non-empty");if(G!==null){if(Array.isArray(G)){if(k.length!==G.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");We=k.map((mt,Bt)=>this._encode_plus(mt,{text_pair:G[Bt],add_special_tokens:ee,return_token_type_ids:He}))}else We=k.map(mt=>this._encode_plus(mt,{add_special_tokens:ee,return_token_type_ids:He}))}else{if(k==null)throw Error("text may not be null or undefined");if(Array.isArray(G))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");We=[this._encode_plus(k,{text_pair:G,add_special_tokens:ee,return_token_type_ids:He})]}if($e===null?ie==="max_length"?$e=this.model_max_length:$e=(0,i.max)(We.map(mt=>mt.input_ids.length))[0]:_e||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),$e=Math.min($e,this.model_max_length??1/0),ie||_e)for(let mt=0;mt<We.length;++mt)We[mt].input_ids.length!==$e&&(We[mt].input_ids.length>$e?_e&&us(We[mt],$e):ie&&Ms(We[mt],$e,Bt=>Bt==="input_ids"?this.pad_token_id:0,this.padding_side));const vt={};if(Ke){if(!(ie&&_e)&&We.some(Bt=>{for(const Kt of Object.keys(Bt))if(Bt[Kt].length!==We[0][Kt]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const mt=[We.length,We[0].input_ids.length];for(const Bt of Object.keys(We[0]))vt[Bt]=new a.Tensor("int64",BigInt64Array.from(We.flatMap(Kt=>Kt[Bt]).map(BigInt)),mt)}else{for(const mt of Object.keys(We[0]))vt[mt]=We.map(Bt=>Bt[mt]);if(!qe)for(const mt of Object.keys(vt))vt[mt]=vt[mt][0]}return vt}_encode_text(k){return k===null?null:(this.added_tokens_regex?k.split(this.added_tokens_regex).filter(ie=>ie):[k]).map((ie,_e)=>{if(this.added_tokens.find(Ke=>Ke.content===ie)!==void 0)return ie;{if(this.remove_space===!0&&(ie=ie.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ie=g(ie)),this.normalizer!==null&&(ie=this.normalizer(ie)),ie.length===0)return[];const Ke=this.pre_tokenizer!==null?this.pre_tokenizer(ie,{section_index:_e}):[ie];return this.model(Ke)}}).flat()}_encode_plus(k,{text_pair:G=null,add_special_tokens:ee=!0,return_token_type_ids:ie=null}={}){const{tokens:_e,token_type_ids:$e}=this._tokenize_helper(k,{pair:G,add_special_tokens:ee}),Ke=this.model.convert_tokens_to_ids(_e),He={input_ids:Ke,attention_mask:new Array(Ke.length).fill(1)};return(ie??this.return_token_type_ids)&&$e&&(He.token_type_ids=$e),He}_tokenize_helper(k,{pair:G=null,add_special_tokens:ee=!1}={}){const ie=this._encode_text(k),_e=this._encode_text(G);return this.post_processor?this.post_processor(ie,_e,{add_special_tokens:ee}):{tokens:(0,n.mergeArrays)(ie??[],_e??[])}}tokenize(k,{pair:G=null,add_special_tokens:ee=!1}={}){return this._tokenize_helper(k,{pair:G,add_special_tokens:ee}).tokens}encode(k,{text_pair:G=null,add_special_tokens:ee=!0,return_token_type_ids:ie=null}={}){return this._encode_plus(k,{text_pair:G,add_special_tokens:ee,return_token_type_ids:ie}).input_ids}batch_decode(k,G={}){return k instanceof a.Tensor&&(k=k.tolist()),k.map(ee=>this.decode(ee,G))}decode(k,G={}){if(k instanceof a.Tensor&&(k=C(k)),!Array.isArray(k)||k.length===0||!(0,n.isIntegralNumber)(k[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(k,G)}decode_single(k,{skip_special_tokens:G=!1,clean_up_tokenization_spaces:ee=null}){let ie=this.model.convert_ids_to_tokens(k);G&&(ie=ie.filter($e=>!this.special_tokens.includes($e)));let _e=this.decoder?this.decoder(ie):ie.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(_e=_e.replaceAll(this.decoder.end_of_word_suffix," "),G&&(_e=_e.trim())),(ee??this.clean_up_tokenization_spaces)&&(_e=F(_e)),_e}get_chat_template({chat_template:k=null,tools:G=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ee=this.chat_template;if(k!==null&&Object.hasOwn(ee,k))k=ee[k];else if(k===null)if(G!==null&&"tool_use"in ee)k=ee.tool_use;else if("default"in ee)k=ee.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ee).sort()}.`)}else if(k===null)if(this.chat_template)k=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return k}apply_chat_template(k,{tools:G=null,documents:ee=null,chat_template:ie=null,add_generation_prompt:_e=!1,tokenize:$e=!0,padding:Ke=!1,truncation:He=!1,max_length:qe=null,return_tensor:We=!0,return_dict:vt=!1,tokenizer_kwargs:mt={},...Bt}={}){if(ie=this.get_chat_template({chat_template:ie,tools:G}),typeof ie!="string")throw Error(`chat_template must be a string, but got ${typeof ie}`);let Kt=this._compiled_template_cache.get(ie);Kt===void 0&&(Kt=new c.Template(ie),this._compiled_template_cache.set(ie,Kt));const Ut=Object.create(null);for(const sr of Dr){const zr=this.getToken(sr);zr&&(Ut[sr]=zr)}const Ht=Kt.render({messages:k,add_generation_prompt:_e,tools:G,documents:ee,...Ut,...Bt});if($e){const sr=this._call(Ht,{add_special_tokens:!1,padding:Ke,truncation:He,max_length:qe,return_tensor:We,...mt});return vt?sr:sr.input_ids}return Ht}}class Ur extends it{return_token_type_ids=!0}class Lr extends it{return_token_type_ids=!0}class bs extends it{return_token_type_ids=!0}class ps extends it{return_token_type_ids=!0}class hs extends it{return_token_type_ids=!0}class ms extends it{return_token_type_ids=!0}class fs extends it{return_token_type_ids=!0}class ir extends it{return_token_type_ids=!0}class Re extends it{return_token_type_ids=!0}class Je extends it{}class Qe extends it{}class ar extends it{return_token_type_ids=!0;constructor(k,G){super(k,G),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Is extends it{return_token_type_ids=!0}class Wr extends it{}class Gr extends it{}class Fs extends it{}class vs extends it{constructor(k,G){super(k,G),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)),this.lang_to_token=ee=>ee}_build_translation_inputs(k,G,ee){return gs(this,k,G,ee)}}class Os extends vs{}class Ds extends it{}class Kr extends it{}const _s="▁";class Ls extends it{padding_side="left";constructor(k,G){super(k,G),this.legacy=G.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Mt({replacement:_s,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(k){if(k===null)return null;if(this.legacy||k.length===0)return super._encode_text(k);let G=super._encode_text(_s+k.replaceAll(_s," "));return G.length>1&&G[0]===_s&&this.special_tokens.includes(G[1])&&(G=G.slice(1)),G}}class zs extends it{}class Bs extends it{}class Rs extends it{}class Yr extends it{}class Ns extends it{}class Ar extends it{}class tn extends it{}class br extends it{}class Hr extends it{}function gs(de,k,G,ee){if(!("language_codes"in de)||!Array.isArray(de.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in de)||!(de.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in de)||typeof de.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ie=ee.src_lang,_e=ee.tgt_lang;if(!de.language_codes.includes(_e))throw new Error(`Target language code "${_e}" is not valid. Must be one of: {${de.language_codes.join(", ")}}`);if(ie!==void 0){if(!de.language_codes.includes(ie))throw new Error(`Source language code "${ie}" is not valid. Must be one of: {${de.language_codes.join(", ")}}`);for(const $e of de.post_processor.config.single)if("SpecialToken"in $e&&de.languageRegex.test($e.SpecialToken.id)){$e.SpecialToken.id=de.lang_to_token(ie);break}}return ee.forced_bos_token_id=de.model.convert_tokens_to_ids([de.lang_to_token(_e)])[0],de._call(k,G)}class Pr extends it{constructor(k,G){super(k,G),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)),this.lang_to_token=ee=>ee}_build_translation_inputs(k,G,ee){return gs(this,k,G,ee)}}class js extends it{constructor(k,G){super(k,G),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)).map(ee=>ee.slice(2,-2)),this.lang_to_token=ee=>`__${ee}__`}_build_translation_inputs(k,G,ee){return gs(this,k,G,ee)}}class rn extends it{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(k,{return_timestamps:G=!1,return_language:ee=!1,time_precision:ie=null,force_full_sequences:_e=!0}={}){if(ie===null)throw Error("Must specify time_precision");let $e=null;const Ke=G==="word";function He(){return{language:$e,timestamp:[null,null],text:""}}const qe=[];let We=He(),vt=0;const mt=this.timestamp_begin,Kt=mt+1500;let Ut=[],Ht=[],sr=!1,zr=null;const Ps=new Set(this.all_special_ids);for(const Rt of k){const nr=Rt.tokens,wr=Ke?Rt.token_timestamps:null;let Sr=null,mr=mt;if("stride"in Rt){const[qt,Wt,Qt]=Rt.stride;if(vt-=Wt,zr=qt-Qt,Wt&&(mr=Wt/ie+mt),Qt)for(let Yt=nr.length-1;Yt>=0;--Yt){const tr=Number(nr[Yt]);if(tr>=mt){if(Sr!==null&&(tr-mt)*ie<zr)break;Sr=tr}}}let It=[],Br=[];for(let qt=0;qt<nr.length;++qt){const Wt=Number(nr[qt]);if(Ps.has(Wt)){const Qt=this.decode([Wt]),Yt=p.WHISPER_LANGUAGE_MAPPING.get(Qt.slice(2,-2));if(Yt!==void 0){if($e!==null&&Yt!==$e&&!G){Ut.push(It);const tr=this.findLongestCommonSequence(Ut)[0],Vs=this.decode(tr);We.text=Vs,qe.push(We),Ut=[],It=[],We=He()}$e=We.language=Yt}}else if(Wt>=mt&&Wt<=Kt){const Qt=(Wt-mt)*ie+vt,Yt=(0,i.round)(Qt,2);if(Sr!==null&&Wt>=Sr)sr=!0;else if(sr||Ut.length>0&&Wt<mr)sr=!1;else if(We.timestamp[0]===null)We.timestamp[0]=Yt;else if(Yt!==We.timestamp[0]){We.timestamp[1]=Yt,Ut.push(It),Ke&&Ht.push(Br);const[tr,Vs]=this.findLongestCommonSequence(Ut,Ht),ln=this.decode(tr);We.text=ln,Ke&&(We.words=this.collateWordTimestamps(tr,Vs,$e)),qe.push(We),Ut=[],It=[],Ht=[],Br=[],We=He()}}else if(It.push(Wt),Ke){let Qt=(0,i.round)(wr[qt]+vt,2),Yt;if(qt+1<wr.length){Yt=(0,i.round)(wr[qt+1]+vt,2);const tr=this.decode([Wt]);E.test(tr)&&(Yt=(0,i.round)(Math.min(Qt+ie,Yt),2))}else Yt=null;Br.push([Qt,Yt])}}if("stride"in Rt){const[qt,Wt,Qt]=Rt.stride;vt+=qt-Qt}It.length>0?(Ut.push(It),Ke&&Ht.push(Br)):Ut.every(qt=>qt.length===0)&&(We=He(),Ut=[],It=[],Ht=[],Br=[])}if(Ut.length>0){if(_e&&G)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Rt,nr]=this.findLongestCommonSequence(Ut,Ht),wr=this.decode(Rt);We.text=wr,Ke&&(We.words=this.collateWordTimestamps(Rt,nr,$e)),qe.push(We)}let gr=Object.create(null);const Ir=qe.map(Rt=>Rt.text).join("");if(G||ee){for(let Rt=0;Rt<qe.length;++Rt){const nr=qe[Rt];G||delete nr.timestamp,ee||delete nr.language}if(Ke){const Rt=[];for(const nr of qe)for(const wr of nr.words)Rt.push(wr);gr={chunks:Rt}}else gr={chunks:qe}}return[Ir,gr]}findLongestCommonSequence(k,G=null){let ee=k[0],ie=ee.length,_e=[];const $e=Array.isArray(G)&&G.length>0;let Ke=$e?[]:null,He=$e?G[0]:null;for(let qe=1;qe<k.length;++qe){const We=k[qe];let vt=0,mt=[ie,ie,0,0];const Bt=We.length;for(let gr=1;gr<ie+Bt;++gr){const Ir=Math.max(0,ie-gr),Rt=Math.min(ie,ie+Bt-gr),nr=ee.slice(Ir,Rt),wr=Math.max(0,gr-ie),Sr=Math.min(Bt,gr),mr=We.slice(wr,Sr);if(nr.length!==mr.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let It;$e?It=nr.filter((Wt,Qt)=>Wt===mr[Qt]&&He[Ir+Qt]<=G[qe][wr+Qt]).length:It=nr.filter((Wt,Qt)=>Wt===mr[Qt]).length;const Br=gr/1e4,qt=It/gr+Br;It>1&&qt>vt&&(vt=qt,mt=[Ir,Rt,wr,Sr])}const[Kt,Ut,Ht,sr]=mt,zr=Math.floor((Ut+Kt)/2),Ps=Math.floor((sr+Ht)/2);_e.push(...ee.slice(0,zr)),ee=We.slice(Ps),ie=ee.length,$e&&(Ke.push(...He.slice(0,zr)),He=G[qe].slice(Ps))}return _e.push(...ee),$e?(Ke.push(...He),[_e,Ke]):[_e,[]]}collateWordTimestamps(k,G,ee){const[ie,_e,$e]=this.combineTokensIntoWords(k,ee),Ke=[];for(let He=0;He<ie.length;++He){const qe=$e[He];Ke.push({text:ie[He],timestamp:[G[qe.at(0)][0],G[qe.at(-1)][1]]})}return Ke}combineTokensIntoWords(k,G,ee=`"'“¡¿([{-`,ie=`"'.。,，!！?？:：”)]}、`){G=G??"english";let _e,$e,Ke;return["chinese","japanese","thai","lao","myanmar"].includes(G)?[_e,$e,Ke]=this.splitTokensOnUnicode(k):[_e,$e,Ke]=this.splitTokensOnSpaces(k),this.mergePunctuations(_e,$e,Ke,ee,ie)}decode(k,G){let ee;return G?.decode_with_timestamps?(k instanceof a.Tensor&&(k=C(k)),ee=this.decodeWithTimestamps(k,G)):ee=super.decode(k,G),ee}decodeWithTimestamps(k,G){const ee=G?.time_precision??.02,ie=Array.from(this.all_special_ids).at(-1)+1;let _e=[[]];for(let $e of k)if($e=Number($e),$e>=ie){const Ke=(($e-ie)*ee).toFixed(2);_e.push(`<|${Ke}|>`),_e.push([])}else _e[_e.length-1].push($e);return _e=_e.map($e=>typeof $e=="string"?$e:super.decode($e,G)),_e.join("")}splitTokensOnUnicode(k){const G=this.decode(k,{decode_with_timestamps:!0}),ee="�",ie=[],_e=[],$e=[];let Ke=[],He=[],qe=0;for(let We=0;We<k.length;++We){const vt=k[We];Ke.push(vt),He.push(We);const mt=this.decode(Ke,{decode_with_timestamps:!0});(!mt.includes(ee)||G[qe+mt.indexOf(ee)]===ee)&&(ie.push(mt),_e.push(Ke),$e.push(He),Ke=[],He=[],qe+=mt.length)}return[ie,_e,$e]}splitTokensOnSpaces(k){const[G,ee,ie]=this.splitTokensOnUnicode(k),_e=[],$e=[],Ke=[],He=new RegExp(`^[${M}]$`,"gu");for(let qe=0;qe<G.length;++qe){const We=G[qe],vt=ee[qe],mt=ie[qe],Bt=vt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),Kt=We.startsWith(" "),Ut=We.trim(),Ht=He.test(Ut);if(Bt||Kt||Ht||_e.length===0)_e.push(We),$e.push(vt),Ke.push(mt);else{const sr=_e.length-1;_e[sr]+=We,$e[sr].push(...vt),Ke[sr].push(...mt)}}return[_e,$e,Ke]}mergePunctuations(k,G,ee,ie,_e){const $e=structuredClone(k),Ke=structuredClone(G),He=structuredClone(ee);let qe=$e.length-2,We=$e.length-1;for(;qe>=0;)$e[qe].startsWith(" ")&&ie.includes($e[qe].trim())?($e[We]=$e[qe]+$e[We],Ke[We]=(0,n.mergeArrays)(Ke[qe],Ke[We]),He[We]=(0,n.mergeArrays)(He[qe],He[We]),$e[qe]="",Ke[qe]=[],He[qe]=[]):We=qe,--qe;for(qe=0,We=1;We<$e.length;)!$e[qe].endsWith(" ")&&_e.includes($e[We])?($e[qe]+=$e[We],Ke[qe]=(0,n.mergeArrays)(Ke[qe],Ke[We]),He[qe]=(0,n.mergeArrays)(He[qe],He[We]),$e[We]="",Ke[We]=[],He[We]=[]):qe=We,++We;return[$e.filter(vt=>vt),Ke.filter(vt=>vt.length>0),He.filter(vt=>vt.length>0)]}}class hr extends it{}class sn extends it{}class Ts extends it{}class Cr extends it{constructor(k,G){super(k,G),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ee=>this.languageRegex.test(ee)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(k){if(k===null)return null;const[G,...ee]=k.trim().split(this.languageRegex);if(ee.length===0)return super._encode_text(G);if(ee.length===2){const[ie,_e]=ee;return this.supported_language_codes.includes(ie)||console.warn(`Unsupported language code "${ie}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,n.mergeArrays)([ie],super._encode_text(_e))}}}class xs extends it{}class lr extends it{}class er extends it{}class Es extends it{}class nn extends it{}class on extends it{constructor(k,G){super(k,G),this.decoder=new Tt({})}}class an extends it{}class ws extends it{}class Dn{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Wr,DistilBertTokenizer:Je,CamembertTokenizer:Qe,DebertaTokenizer:hs,DebertaV2Tokenizer:ms,BertTokenizer:Ur,HerbertTokenizer:fs,ConvBertTokenizer:ir,RoFormerTokenizer:Re,XLMTokenizer:ar,ElectraTokenizer:Is,MobileBertTokenizer:bs,SqueezeBertTokenizer:ps,AlbertTokenizer:Lr,GPT2Tokenizer:Gr,BartTokenizer:Fs,MBartTokenizer:vs,MBart50Tokenizer:Os,RobertaTokenizer:Ds,WhisperTokenizer:rn,CodeGenTokenizer:hr,CLIPTokenizer:sn,SiglipTokenizer:Ts,MarianTokenizer:Cr,BloomTokenizer:Kr,NllbTokenizer:Pr,M2M100Tokenizer:js,LlamaTokenizer:Ls,CodeLlamaTokenizer:zs,XLMRobertaTokenizer:Bs,MPNetTokenizer:Rs,FalconTokenizer:Yr,GPTNeoXTokenizer:Ns,EsmTokenizer:Ar,Wav2Vec2CTCTokenizer:xs,BlenderbotTokenizer:lr,BlenderbotSmallTokenizer:er,SpeechT5Tokenizer:Es,NougatTokenizer:nn,VitsTokenizer:on,Qwen2Tokenizer:tn,GemmaTokenizer:br,Grok1Tokenizer:Hr,CohereTokenizer:an,MgpstrTokenizer:ws,PreTrainedTokenizer:it};static async from_pretrained(k,{progress_callback:G=null,config:ee=null,cache_dir:ie=null,local_files_only:_e=!1,revision:$e="main",legacy:Ke=null}={}){const[He,qe]=await u(k,{progress_callback:G,config:ee,cache_dir:ie,local_files_only:_e,revision:$e,legacy:Ke}),We=qe.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let vt=this.TOKENIZER_CLASS_MAPPING[We];return vt||(console.warn(`Unknown tokenizer class "${We}", attempting to construct from base class.`),vt=it),new vt(He,qe)}}},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>H,hamming:()=>h,hanning:()=>u,mel_filter_bank:()=>$,read_audio:()=>c,spectrogram:()=>A,window_function:()=>B});var s=t("./src/utils/hub.js"),n=t("./src/utils/maths.js"),o=t("./src/utils/core.js"),i=t("./src/env.js"),a=t("?7a2c"),l=t("./src/utils/tensor.js");async function c(z,Z){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const q=await(await(0,s.getFile)(z)).arrayBuffer(),X=new AudioContext({sampleRate:Z});typeof Z>"u"&&console.warn(`No sampling rate provided, using default of ${X.sampleRate}Hz.`);const se=await X.decodeAudioData(q);let ne;if(se.numberOfChannels===2){const ae=Math.sqrt(2),pe=se.getChannelData(0),V=se.getChannelData(1);ne=new Float32Array(pe.length);for(let L=0;L<se.length;++L)ne[L]=ae*(pe[L]+V[L])/2}else ne=se.getChannelData(0);return ne}function p(z,Z){if(z<1)return new Float64Array;if(z===1)return new Float64Array([1]);const q=1-Z,X=2*Math.PI/(z-1),se=new Float64Array(z);for(let ne=0;ne<z;++ne)se[ne]=Z-q*Math.cos(ne*X);return se}function u(z){return p(z,.5)}function h(z){return p(z,.54)}const w={htk:z=>2595*Math.log10(1+z/700),kaldi:z=>1127*Math.log(1+z/700),slaney:(z,Z=1e3,q=15,X=27/Math.log(6.4))=>z>=Z?q+Math.log(z/Z)*X:3*z/200};function _(z,Z="htk"){const q=w[Z];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof z=="number"?q(z):z.map(X=>q(X))}const C={htk:z=>700*(10**(z/2595)-1),kaldi:z=>700*(Math.exp(z/1127)-1),slaney:(z,Z=1e3,q=15,X=Math.log(6.4)/27)=>z>=q?Z*Math.exp(X*(z-q)):200*z/3};function F(z,Z="htk"){const q=C[Z];if(!q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof z=="number"?q(z):z.map(X=>q(X))}function T(z,Z){const q=Float64Array.from({length:Z.length-1},(ae,pe)=>Z[pe+1]-Z[pe]),X=Array.from({length:z.length},()=>new Array(Z.length));for(let ae=0;ae<z.length;++ae){const pe=X[ae];for(let V=0;V<Z.length;++V)pe[V]=Z[V]-z[ae]}const se=Z.length-2,ne=Array.from({length:se},()=>new Array(z.length));for(let ae=0;ae<z.length;++ae){const pe=X[ae];for(let V=0;V<se;++V){const L=-pe[V]/q[V],O=pe[V+2]/q[V+1];ne[V][ae]=Math.max(0,Math.min(L,O))}}return ne}function g(z,Z,q){const X=(Z-z)/(q-1);return Float64Array.from({length:q},(se,ne)=>z+X*ne)}function $(z,Z,q,X,se,ne=null,ae="htk",pe=!1){if(ne!==null&&ne!=="slaney")throw new Error('norm must be one of null or "slaney"');const V=_(q,ae),L=_(X,ae),O=g(V,L,Z+2);let J=F(O,ae),ce;if(pe){const ue=se/(z*2);ce=_(Float64Array.from({length:z},(Ee,Ne)=>Ne*ue),ae),J=O}else ce=g(0,Math.floor(se/2),z);const be=T(ce,J);if(ne!==null&&ne==="slaney")for(let ue=0;ue<Z;++ue){const Ee=be[ue],Ne=2/(J[ue+2]-J[ue]);for(let ye=0;ye<z;++ye)Ee[ye]*=Ne}return be}function P(z,Z,q){const X=new z.constructor(z.length+Z+q),se=z.length-1;for(let ne=0;ne<z.length;++ne)X[Z+ne]=z[ne];for(let ne=1;ne<=Z;++ne)X[Z-ne]=z[(0,o.calculateReflectOffset)(ne,se)];for(let ne=1;ne<=q;++ne)X[se+Z+ne]=z[(0,o.calculateReflectOffset)(se-ne,se)];return X}function y(z,Z,q,X,se){if(q<=0)throw new Error("reference must be greater than zero");if(X<=0)throw new Error("min_value must be greater than zero");q=Math.max(X,q);const ne=Math.log10(q);for(let ae=0;ae<z.length;++ae)z[ae]=Z*Math.log10(Math.max(X,z[ae])-ne);if(se!==null){if(se<=0)throw new Error("db_range must be greater than zero");const ae=(0,n.max)(z)[0]-se;for(let pe=0;pe<z.length;++pe)z[pe]=Math.max(z[pe],ae)}return z}function M(z,Z=1,q=1e-5,X=null){return y(z,20,Z,q,X)}function E(z,Z=1,q=1e-10,X=null){return y(z,10,Z,q,X)}async function A(z,Z,q,X,{fft_length:se=null,power:ne=1,center:ae=!0,pad_mode:pe="reflect",onesided:V=!0,preemphasis:L=null,mel_filters:O=null,mel_floor:J=1e-10,log_mel:ce=null,reference:be=1,min_value:ue=1e-10,db_range:Ee=null,remove_dc_offset:Ne=null,min_num_frames:ye=null,max_num_frames:K=null,do_pad:W=!0,transpose:he=!1}={}){const Pe=Z.length;if(se===null&&(se=q),q>se)throw Error(`frame_length (${q}) may not be larger than fft_length (${se})`);if(Pe!==q)throw new Error(`Length of the window (${Pe}) must equal frame_length (${q})`);if(X<=0)throw new Error("hop_length must be greater than zero");if(ne===null&&O!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ae){if(pe!=="reflect")throw new Error(`pad_mode="${pe}" not implemented yet.`);const Te=Math.floor((se-1)/2)+1;z=P(z,Te,Te)}let ve=Math.floor(1+Math.floor((z.length-q)/X));ye!==null&&ve<ye&&(ve=ye);const ke=V?Math.floor(se/2)+1:se;let Ae=ve,Oe=ve;K!==null&&(K>ve?W&&(Oe=K):Oe=Ae=K);const Ue=new n.FFT(se),Ve=new Float64Array(se),D=new Float64Array(Ue.outputBufferSize),Y=new Float32Array(ke*Oe);for(let Te=0;Te<Ae;++Te){const Ce=Te*X,De=Math.min(z.length-Ce,q);De!==q&&Ve.fill(0,0,q);for(let we=0;we<De;++we)Ve[we]=z[Ce+we];if(Ne){let we=0;for(let ot=0;ot<De;++ot)we+=Ve[ot];const Le=we/De;for(let ot=0;ot<De;++ot)Ve[ot]-=Le}if(L!==null){for(let we=De-1;we>=1;--we)Ve[we]-=L*Ve[we-1];Ve[0]*=1-L}for(let we=0;we<Z.length;++we)Ve[we]*=Z[we];Ue.realTransform(D,Ve);for(let we=0;we<ke;++we){const Le=we<<1;Y[we*Oe+Te]=D[Le]**2+D[Le+1]**2}}if(ne!==null&&ne!==2){const Te=2/ne;for(let Ce=0;Ce<Y.length;++Ce)Y[Ce]**=Te}const R=O.length;let te=await(0,l.matmul)(new l.Tensor("float32",O.flat(),[R,ke]),new l.Tensor("float32",Y,[ke,Oe]));he&&(te=te.transpose(1,0));const oe=te.data;for(let Te=0;Te<oe.length;++Te)oe[Te]=Math.max(J,oe[Te]);if(ne!==null&&ce!==null){const Te=Math.min(oe.length,Ae*R);switch(ce){case"log":for(let Ce=0;Ce<Te;++Ce)oe[Ce]=Math.log(oe[Ce]);break;case"log10":for(let Ce=0;Ce<Te;++Ce)oe[Ce]=Math.log10(oe[Ce]);break;case"dB":if(ne===1)M(oe,be,ue,Ee);else if(ne===2)E(oe,be,ue,Ee);else throw new Error(`Cannot use log_mel option '${ce}' with power ${ne}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ce}'`)}}return te}function B(z,Z,{periodic:q=!0,frame_length:X=null,center:se=!0}={}){const ne=q?z+1:z;let ae;switch(Z){case"boxcar":ae=new Float64Array(ne).fill(1);break;case"hann":case"hann_window":ae=u(ne);break;case"hamming":ae=h(ne);break;case"povey":ae=u(ne).map(pe=>Math.pow(pe,.85));break;default:throw new Error(`Unknown window type ${Z}.`)}if(q&&(ae=ae.subarray(0,z)),X===null)return ae;if(z>X)throw new Error(`Length of the window (${z}) may not be larger than frame_length (${X})`);return ae}function N(z,Z){let q=44;const X=new ArrayBuffer(q+z.length*4),se=new DataView(X);Q(se,0,"RIFF"),se.setUint32(4,36+z.length*4,!0),Q(se,8,"WAVE"),Q(se,12,"fmt "),se.setUint32(16,16,!0),se.setUint16(20,3,!0),se.setUint16(22,1,!0),se.setUint32(24,Z,!0),se.setUint32(28,Z*4,!0),se.setUint16(32,4,!0),se.setUint16(34,32,!0),Q(se,36,"data"),se.setUint32(40,z.length*4,!0);for(let ne=0;ne<z.length;++ne,q+=4)se.setFloat32(q,z[ne],!0);return X}function Q(z,Z,q){for(let X=0;X<q.length;++X)z.setUint8(Z+X,q.charCodeAt(X))}class H{constructor(Z,q){this.audio=Z,this.sampling_rate=q}toWav(){return N(this.audio,this.sampling_rate)}toBlob(){const Z=this.toWav();return new Blob([Z],{type:"audio/wav"})}async save(Z){let q;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");q=o.saveBlob}else if(i.apis.IS_FS_AVAILABLE)q=async(X,se)=>{let ne=await se.arrayBuffer();a.writeFileSync(X,Buffer.from(ne))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await q(Z,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>n,FEATURE_EXTRACTOR_NAME:()=>o,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",n="config.json",o="preprocessor_config.json",i=o,a="processor_config.json",l="chat_template.json",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>w,count:()=>T,dispatchCallback:()=>s,escapeRegExp:()=>o,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>F,mergeArrays:()=>u,pick:()=>C,pop:()=>p,product:()=>h,reverseDictionary:()=>n,saveBlob:()=>_});function s(g,$){g&&g($)}function n(g){return Object.fromEntries(Object.entries(g).map(([$,P])=>[P,$]))}function o(g){return g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(g){return g?.prototype?.__proto__?.constructor?.name==="TypedArray"}function a(g){return Number.isInteger(g)||typeof g=="bigint"}function l(g){return g==null||g===-1}function c(g){const $=[];let P=g;for(;Array.isArray(P);)$.push(P.length),P=P[0];return $}function p(g,$,P=void 0){const y=g[$];if(y!==void 0)return delete g[$],y;if(P===void 0)throw Error(`Key ${$} does not exist in object.`);return P}function u(...g){return Array.prototype.concat.apply([],g)}function h(...g){return g.reduce(($,P)=>$.flatMap(y=>P.map(M=>[y,M])))}function w(g,$){return Math.abs((g+$)%(2*$)-$)}function _(g,$){const P=URL.createObjectURL($),y=document.createElement("a");y.href=P,y.download=g,y.click(),y.remove(),URL.revokeObjectURL(P)}function C(g,$){return Object.assign({},...$.map(P=>{if(g[P]!==void 0)return{[P]:g[P]}}))}function F(g){let $=0;for(const P of g)++$;return $}function T(g,$){let P=0;for(const y of g)y===$&&++P;return P}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>n,PriorityQueue:()=>s,TokenLattice:()=>i});class s{constructor(c=(u,h)=>u>h,p=1/0){this._heap=[],this._comparator=c,this._maxSize=p}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...c){return this.extend(c)}extend(c){for(const p of c)if(this.size<this._maxSize)this._heap.push(p),this._siftUp();else{const u=this._smallest();this._comparator(p,this._heap[u])&&(this._heap[u]=p,this._siftUpFrom(u))}return this.size}pop(){const c=this.peek(),p=this.size-1;return p>0&&this._swap(0,p),this._heap.pop(),this._siftDown(),c}replace(c){const p=this.peek();return this._heap[0]=c,this._siftDown(),p}_parent(c){return(c+1>>>1)-1}_left(c){return(c<<1)+1}_right(c){return c+1<<1}_greater(c,p){return this._comparator(this._heap[c],this._heap[p])}_swap(c,p){const u=this._heap[c];this._heap[c]=this._heap[p],this._heap[p]=u}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(c){for(;c>0&&this._greater(c,this._parent(c));)this._swap(c,this._parent(c)),c=this._parent(c)}_siftDown(){let c=0;for(;this._left(c)<this.size&&this._greater(this._left(c),c)||this._right(c)<this.size&&this._greater(this._right(c),c);){const p=this._right(c)<this.size&&this._greater(this._right(c),this._left(c))?this._right(c):this._left(c);this._swap(c,p),c=p}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class n{constructor(){this.root=o.default()}extend(c){for(const p of c)this.push(p)}push(c){let p=this.root;for(const u of c){let h=p.children.get(u);h===void 0&&(h=o.default(),p.children.set(u,h)),p=h}p.isLeaf=!0}*commonPrefixSearch(c){let p=this.root;if(p===void 0)return;let u="";for(const h of c){if(u+=h,p=p.children.get(h),p===void 0)return;p.isLeaf&&(yield u)}}}class o{constructor(c,p){this.isLeaf=c,this.children=p}static default(){return new o(!1,new Map)}}class i{constructor(c,p,u){this.chars=Array.from(c),this.len=this.chars.length,this.bosTokenId=p,this.eosTokenId=u,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const h=new a(this.bosTokenId,0,0,0,0),w=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(h.clone()),this.nodes.push(w.clone()),this.beginNodes[this.len].push(w),this.endNodes[0].push(h)}insert(c,p,u,h){const w=this.nodes.length,_=new a(h,w,c,p,u);this.beginNodes[c].push(_),this.endNodes[c+p].push(_),this.nodes.push(_)}viterbi(){const c=this.len;let p=0;for(;p<=c;){if(this.beginNodes[p].length==0)return[];for(let C of this.beginNodes[p]){C.prev=null;let F=0,T=null;for(let g of this.endNodes[p]){const $=g.backtraceScore+C.score;(T===null||$>F)&&(T=g.clone(),F=$)}if(T!==null)C.prev=T,C.backtraceScore=F;else return[]}++p}const u=[],w=this.beginNodes[c][0].prev;if(w===null)return[];let _=w.clone();for(;_.prev!==null;)u.push(_.clone()),_=_.clone().prev.clone();return u.reverse(),u}piece(c){return this.chars.slice(c.pos,c.pos+c.length).join("")}tokens(){return this.viterbi().map(p=>this.piece(p))}tokenIds(){return this.viterbi().map(p=>p.tokenId)}}class a{constructor(c,p,u,h,w){this.tokenId=c,this.nodeId=p,this.pos=u,this.length=h,this.score=w,this.prev=null,this.backtraceScore=0}clone(){const c=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return c.prev=this.prev,c.backtraceScore=this.backtraceScore,c}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>o});var s=t("./src/env.js"),n=t("./src/utils/devices.js");const o=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[n.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let n=function(...o){return n._call(...o)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>u,getModelFile:()=>F,getModelJSON:()=>T});var s=t("?7a2c"),n=t("?a42a"),o=t("./src/env.js"),i=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(y){if(this.filePath=y,this.headers=new Headers,this.exists=s.existsSync(y),this.exists){this.status=200,this.statusText="OK";let M=s.statSync(y);this.headers.set("content-length",M.size.toString()),this.updateContentType();const E=s.createReadStream(y);this.body=new ReadableStream({start(A){E.on("data",B=>A.enqueue(B)),E.on("end",()=>A.close()),E.on("error",B=>A.error(B))},cancel(){E.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const y=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[y]??"application/octet-stream")}clone(){let y=new c(this.filePath);return y.exists=this.exists,y.status=this.status,y.statusText=this.statusText,y.headers=new Headers(this.headers),y}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const y=await s.promises.readFile(this.filePath);return new Blob([y],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(P,y=null,M=null){let E;try{E=new URL(P)}catch{return!1}return!(y&&!y.includes(E.protocol)||M&&!M.includes(E.hostname))}async function u(P){if(o.env.useFS&&!p(P,["http:","https:","blob:"]))return new c(P.toString());if(typeof process<"u"&&process?.release?.name==="node"){const y=!!kc?.TESTING_REMOTELY,M=o.env.version,E=new Headers;if(E.set("User-Agent",`transformers.js/${M}; is_ci/${y};`),p(P,["http:","https:"],["huggingface.co","hf.co"])){const B=kc?.HF_TOKEN??kc?.HF_ACCESS_TOKEN;B&&E.set("Authorization",`Bearer ${B}`)}return fetch(P,{headers:E})}else return fetch(P)}const h={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function w(P,y,M){if(!M)return null;const E=h[P]??`Error (${P}) occurred while trying to load file`;throw Error(`${E}: "${y}".`)}class _{constructor(y){this.path=y}async match(y){let M=n.join(this.path,y),E=new c(M);if(E.exists)return E}async put(y,M,E=void 0){let A=n.join(this.path,y);try{const B=M.headers.get("Content-Length"),N=parseInt(B??"0");let Q=0;await s.promises.mkdir(n.dirname(A),{recursive:!0});const H=s.createWriteStream(A),z=M.body.getReader();for(;;){const{done:Z,value:q}=await z.read();if(Z)break;await new Promise((se,ne)=>{H.write(q,ae=>{if(ae){ne(ae);return}se()})}),Q+=q.length;const X=N?Q/N*100:0;E?.({progress:X,loaded:Q,total:N})}H.close()}catch(B){try{await s.promises.unlink(A)}catch{}throw B}}}async function C(P,...y){for(let M of y)try{let E=await P.match(M);if(E)return E}catch{continue}}async function F(P,y,M=!0,E={},A=!1){if(!o.env.allowLocalModels){if(E.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!o.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(E.progress_callback,{status:"initiate",name:P,file:y});let B;if(!B&&o.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{B=await caches.open("transformers-cache")}catch(O){console.warn("An error occurred while opening the browser cache:",O)}}if(!B&&o.env.useFSCache&&(B=new _(E.cache_dir??o.env.cacheDir)),!B&&o.env.useCustomCache){if(!o.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!o.env.customCache.match||!o.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");B=o.env.customCache}const N=E.revision??"main";let Q=$(P,y),H=$(o.env.localModelPath,Q),z=Q,Z=$(o.env.remoteHost,o.env.remotePathTemplate.replaceAll("{model}",P).replaceAll("{revision}",encodeURIComponent(N)),y),q=N==="main"?Q:$(P,N,y),X,se=B instanceof _?q:Z,ne=!1,ae;B&&(ae=await C(B,H,se));const pe=ae!==void 0;if(ae===void 0){if(o.env.allowLocalModels)if(p(Q,["http:","https:"])){if(E.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${z}.`);if(!o.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${z}.`)}else try{ae=await u(z),X=z}catch(J){console.warn(`Unable to load from local path "${z}": "${J}"`)}if(ae===void 0||ae.status===404){if(E.local_files_only||!o.env.allowRemoteModels){if(M)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${z}".`);return null}if(ae=await u(Z),ae.status!==200)return w(ae.status,Z,M);X=se}ne=B&&typeof Response<"u"&&ae instanceof Response&&ae.status===200}(0,i.dispatchCallback)(E.progress_callback,{status:"download",name:P,file:y});let V;if(!(o.apis.IS_NODE_ENV&&A)){let O;E.progress_callback?pe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(O=new Uint8Array(await ae.arrayBuffer()),(0,i.dispatchCallback)(E.progress_callback,{status:"progress",name:P,file:y,progress:100,loaded:O.length,total:O.length})):O=await g(ae,J=>{(0,i.dispatchCallback)(E.progress_callback,{status:"progress",name:P,file:y,...J})}):O=new Uint8Array(await ae.arrayBuffer()),V=O}if(ne&&X&&await B.match(X)===void 0&&(V?await B.put(X,new Response(V,{headers:ae.headers})).catch(O=>{console.warn(`Unable to add response to browser cache: ${O}.`)}):await B.put(X,ae,E.progress_callback)),(0,i.dispatchCallback)(E.progress_callback,{status:"done",name:P,file:y}),V){if(A)throw new Error("Cannot return path in a browser environment.");return V}if(ae instanceof c)return ae.filePath;const L=await B.match(X);if(L instanceof c)return L.filePath;throw new Error("Unable to return path for response.")}async function T(P,y,M=!0,E={}){const A=await F(P,y,M,E,!1);if(A===null)return{};const N=new TextDecoder("utf-8").decode(A);return JSON.parse(N)}async function g(P,y){const M=P.headers.get("Content-Length");M===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let E=parseInt(M??"0"),A=new Uint8Array(E),B=0;const N=P.body.getReader();async function Q(){const{done:H,value:z}=await N.read();if(H)return;const Z=B+z.length;if(Z>E){E=Z;const X=new Uint8Array(E);X.set(A),A=X}A.set(z,B),B=Z;const q=B/E*100;return y({progress:q,loaded:B,total:E}),Q()}return await Q(),A}function $(...P){return P=P.map((y,M)=>(M&&(y=y.replace(new RegExp("^/"),"")),M!==P.length-1&&(y=y.replace(new RegExp("/$"),"")),y)),P.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>_,load_image:()=>C});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),o=t("./src/env.js"),i=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const u=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV;if(u)l=(F,T)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(F,T)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async F=>{const g=(await F.metadata()).channels,{data:$,info:P}=await F.rotate().raw().toBuffer({resolveWithObject:!0}),y=new _(new Uint8ClampedArray($),P.width,P.height,P.channels);return g!==void 0&&g!==P.channels&&y.convert(g),y};else throw new Error("Unable to load image processing library.");const h={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},w=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class _{constructor(T,g,$,P){this.data=T,this.width=g,this.height=$,this.channels=P}get size(){return[this.width,this.height]}static async read(T){if(T instanceof _)return T;if(typeof T=="string"||T instanceof URL)return await this.fromURL(T);if(T instanceof Blob)return await this.fromBlob(T);if(typeof HTMLCanvasElement<"u"&&T instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&T instanceof OffscreenCanvas)return this.fromCanvas(T);throw new Error(`Unsupported input type: ${typeof T}`)}static fromCanvas(T){if(!u)throw new Error("fromCanvas() is only supported in browser environments.");const $=T.getContext("2d").getImageData(0,0,T.width,T.height).data;return new _($,T.width,T.height,4)}static async fromURL(T){const g=await(0,n.getFile)(T);if(g.status!==200)throw new Error(`Unable to read image from "${T}" (${g.status} ${g.statusText})`);const $=await g.blob();return this.fromBlob($)}static async fromBlob(T){if(u){const g=await p(T),$=l(g.width,g.height).getContext("2d");return $.drawImage(g,0,0),new this($.getImageData(0,0,g.width,g.height).data,g.width,g.height,4)}else{const g=a(await T.arrayBuffer());return await p(g)}}static fromTensor(T,g="CHW"){if(T.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${T.dims.length} dimensions.`);if(g==="CHW")T=T.transpose(1,2,0);else if(g!=="HWC")throw new Error(`Unsupported channel format: ${g}`);if(!(T.data instanceof Uint8ClampedArray||T.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${T.type}`);switch(T.dims[2]){case 1:case 2:case 3:case 4:return new _(T.data,T.dims[1],T.dims[0],T.dims[2]);default:throw new Error(`Unsupported number of channels: ${T.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const T=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let g=0,$=0;g<this.data.length;g+=this.channels){const P=this.data[g],y=this.data[g+1],M=this.data[g+2];T[$++]=Math.round(.2989*P+.587*y+.114*M)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(T,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const T=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let g=0,$=0;g<this.data.length;++g)T[$++]=this.data[g],T[$++]=this.data[g],T[$++]=this.data[g];break;case 4:for(let g=0,$=0;g<this.data.length;g+=4)T[$++]=this.data[g],T[$++]=this.data[g+1],T[$++]=this.data[g+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(T,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const T=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let g=0,$=0;g<this.data.length;++g)T[$++]=this.data[g],T[$++]=this.data[g],T[$++]=this.data[g],T[$++]=255;break;case 3:for(let g=0,$=0;g<this.data.length;g+=3)T[$++]=this.data[g],T[$++]=this.data[g+1],T[$++]=this.data[g+2],T[$++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(T,this.width,this.height,4)}putAlpha(T){if(T.width!==this.width||T.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${T.width}x${T.height}`);if(T.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${T.channels}`);const g=this.data,$=T.data,P=this.width*this.height;if(this.channels===3){const y=new Uint8ClampedArray(P*4);for(let M=0,E=0,A=0;M<P;++M)y[A++]=g[E++],y[A++]=g[E++],y[A++]=g[E++],y[A++]=$[M];return this._update(y,this.width,this.height,4)}else if(this.channels===4){for(let y=0;y<P;++y)g[4*y+3]=$[y];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(T,g,{resample:$=2}={}){if(this.width===T&&this.height===g)return this;let P=h[$]??$;const y=(0,s.isNullishDimension)(T),M=(0,s.isNullishDimension)(g);if(y&&M)return this;if(y?T=g/this.height*this.width:M&&(g=T/this.width*this.height),u){const E=this.channels,A=this.toCanvas(),B=l(T,g).getContext("2d");return B.drawImage(A,0,0,T,g),new _(B.getImageData(0,0,T,g).data,T,g,4).convert(E)}else{let E=this.toSharp();switch(P){case"box":case"hamming":(P==="box"||P==="hamming")&&(console.warn(`Resampling method ${P} is not yet supported. Using bilinear instead.`),P="bilinear");case"nearest":case"bilinear":case"bicubic":E=E.affine([T/this.width,0,0,g/this.height],{interpolator:P});break;case"lanczos":E=E.resize({width:T,height:g,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${P} is not supported.`)}return await p(E)}}async pad([T,g,$,P]){if(T=Math.max(T,0),g=Math.max(g,0),$=Math.max($,0),P=Math.max(P,0),T===0&&g===0&&$===0&&P===0)return this;if(u){const y=this.channels,M=this.toCanvas(),E=this.width+T+g,A=this.height+$+P,B=l(E,A).getContext("2d");return B.drawImage(M,0,0,this.width,this.height,T,$,this.width,this.height),new _(B.getImageData(0,0,E,A).data,E,A,4).convert(y)}else{const y=this.toSharp().extend({left:T,right:g,top:$,bottom:P});return await p(y)}}async crop([T,g,$,P]){if(T=Math.max(T,0),g=Math.max(g,0),$=Math.min($,this.width-1),P=Math.min(P,this.height-1),T===0&&g===0&&$===this.width-1&&P===this.height-1)return this;const y=$-T+1,M=P-g+1;if(u){const E=this.channels,A=this.toCanvas(),B=l(y,M).getContext("2d");return B.drawImage(A,T,g,y,M,0,0,y,M),new _(B.getImageData(0,0,y,M).data,y,M,4).convert(E)}else{const E=this.toSharp().extract({left:T,top:g,width:y,height:M});return await p(E)}}async center_crop(T,g){if(this.width===T&&this.height===g)return this;const $=(this.width-T)/2,P=(this.height-g)/2;if(u){const y=this.channels,M=this.toCanvas(),E=l(T,g).getContext("2d");let A=0,B=0,N=0,Q=0;return $>=0?A=$:N=-$,P>=0?B=P:Q=-P,E.drawImage(M,A,B,T,g,N,Q,T,g),new _(E.getImageData(0,0,T,g).data,T,g,4).convert(y)}else{let y=this.toSharp();if($>=0&&P>=0)y=y.extract({left:Math.floor($),top:Math.floor(P),width:T,height:g});else if($<=0&&P<=0){const M=Math.floor(-P),E=Math.floor(-$);y=y.extend({top:M,left:E,right:T-this.width-E,bottom:g-this.height-M})}else{let M=[0,0],E=0;P<0?(M[0]=Math.floor(-P),M[1]=g-this.height-M[0]):E=Math.floor(P);let A=[0,0],B=0;$<0?(A[0]=Math.floor(-$),A[1]=T-this.width-A[0]):B=Math.floor($),y=y.extend({top:M[0],bottom:M[1],left:A[0],right:A[1]}).extract({left:B,top:E,width:T,height:g})}return await p(y)}}async toBlob(T="image/png",g=1){if(!u)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:T,quality:g})}toTensor(T="CHW"){let g=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(T!=="HWC")if(T==="CHW")g=g.permute(2,0,1);else throw new Error(`Unsupported channel format: ${T}`);return g}toCanvas(){if(!u)throw new Error("toCanvas() is only supported in browser environments.");const T=this.clone().rgba(),g=l(T.width,T.height),$=new c(T.data,T.width,T.height);return g.getContext("2d").putImageData($,0,0),g}split(){const{data:T,width:g,height:$,channels:P}=this,y=T.constructor,M=T.length/P,E=Array.from({length:P},()=>new y(M));for(let A=0;A<M;++A){const B=P*A;for(let N=0;N<P;++N)E[N][A]=T[B+N]}return E.map(A=>new _(A,g,$,1))}_update(T,g,$,P=null){return this.data=T,this.width=g,this.height=$,P!==null&&(this.channels=P),this}clone(){return new _(this.data.slice(),this.width,this.height,this.channels)}convert(T){if(this.channels===T)return this;switch(T){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(T){if(u){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const g=T.split(".").pop().toLowerCase(),$=w.get(g)??"image/png",P=await this.toBlob($);(0,s.saveBlob)(T,P)}else{if(o.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(T);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(u)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const C=_.read.bind(_)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>C,bankers_round:()=>g,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>$,interpolate_data:()=>s,log_softmax:()=>i,magnitude:()=>c,max:()=>u,medianFilter:()=>F,min:()=>p,permute_data:()=>n,round:()=>T,softmax:()=>o});function s(P,[y,M,E],[A,B],N="bilinear",Q=!1){const H=B/E,z=A/M,Z=new P.constructor(A*B*y),q=M*E,X=A*B;for(let se=0;se<A;++se)for(let ne=0;ne<B;++ne){const ae=se*B+ne,pe=(ne+.5)/H-.5,V=(se+.5)/z-.5;let L=Math.floor(pe),O=Math.floor(V);const J=Math.min(L+1,E-1),ce=Math.min(O+1,M-1);L=Math.max(L,0),O=Math.max(O,0);const be=pe-L,ue=V-O,Ee=(1-be)*(1-ue),Ne=be*(1-ue),ye=(1-be)*ue,K=be*ue,W=O*E,he=ce*E,Pe=W+L,ve=W+J,ke=he+L,Ae=he+J;for(let Oe=0;Oe<y;++Oe){const Ue=Oe*q;Z[Oe*X+ae]=Ee*P[Ue+Pe]+Ne*P[Ue+ve]+ye*P[Ue+ke]+K*P[Ue+Ae]}}return Z}function n(P,y,M){const E=new Array(M.length),A=new Array(M.length);for(let Q=M.length-1,H=1;Q>=0;--Q)A[Q]=H,E[Q]=y[M[Q]],H*=E[Q];const B=M.map((Q,H)=>A[M.indexOf(H)]),N=new P.constructor(P.length);for(let Q=0;Q<P.length;++Q){let H=0;for(let z=y.length-1,Z=Q;z>=0;--z)H+=Z%y[z]*B[z],Z=Math.floor(Z/y[z]);N[H]=P[Q]}return[N,E]}function o(P){const y=u(P)[0],M=P.map(B=>Math.exp(B-y)),E=M.reduce((B,N)=>B+N,0);return M.map(B=>B/E)}function i(P){const y=u(P)[0];let M=0;for(let B=0;B<P.length;++B)M+=Math.exp(P[B]-y);const E=Math.log(M);return P.map(B=>B-y-E)}function a(P,y){let M=0;for(let E=0;E<P.length;++E)M+=P[E]*y[E];return M}function l(P,y){const M=a(P,y),E=c(P),A=c(y);return M/(E*A)}function c(P){return Math.sqrt(P.reduce((y,M)=>y+M*M,0))}function p(P){if(P.length===0)throw Error("Array must not be empty");let y=P[0],M=0;for(let E=1;E<P.length;++E)P[E]<y&&(y=P[E],M=E);return[y,M]}function u(P){if(P.length===0)throw Error("Array must not be empty");let y=P[0],M=0;for(let E=1;E<P.length;++E)P[E]>y&&(y=P[E],M=E);return[y,M]}function h(P){return P>0&&(P&P-1)===0}class w{constructor(y){if(this.size=y|0,this.size<=1||!h(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=y<<1,this.table=new Float64Array(this.size*2);for(let E=0;E<this.table.length;E+=2){const A=Math.PI*E/this.size;this.table[E]=Math.cos(A),this.table[E+1]=-Math.sin(A)}let M=0;for(let E=1;this.size>E;E<<=1)++M;this._width=M%2===0?M-1:M,this._bitrev=new Int32Array(1<<this._width);for(let E=0;E<this._bitrev.length;++E){this._bitrev[E]=0;for(let A=0;A<this._width;A+=2){const B=this._width-A-2;this._bitrev[E]|=(E>>>A&3)<<B}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(y,M){const E=M||new Array(y.length>>>1);for(let A=0;A<y.length;A+=2)E[A>>>1]=y[A];return E}toComplexArray(y,M){const E=M||this.createComplexArray();for(let A=0;A<E.length;A+=2)E[A]=y[A>>>1],E[A+1]=0;return E}transform(y,M){if(y===M)throw new Error("Input and output buffers must be different");this._transform4(y,M,1)}realTransform(y,M){if(y===M)throw new Error("Input and output buffers must be different");this._realTransform4(y,M,1)}inverseTransform(y,M){if(y===M)throw new Error("Input and output buffers must be different");this._transform4(y,M,-1);for(let E=0;E<y.length;++E)y[E]/=this.size}_transform4(y,M,E){const A=this._csize;let N=1<<this._width,Q=A/N<<1,H,z;const Z=this._bitrev;if(Q===4)for(H=0,z=0;H<A;H+=Q,++z){const X=Z[z];this._singleTransform2(M,y,H,X,N)}else for(H=0,z=0;H<A;H+=Q,++z){const X=Z[z];this._singleTransform4(M,y,H,X,N,E)}const q=this.table;for(N>>=2;N>=2;N>>=2){Q=A/N<<1;const X=Q>>>2;for(H=0;H<A;H+=Q){const se=H+X-1;for(let ne=H,ae=0;ne<se;ne+=2,ae+=N){const pe=ne,V=pe+X,L=V+X,O=L+X,J=y[pe],ce=y[pe+1],be=y[V],ue=y[V+1],Ee=y[L],Ne=y[L+1],ye=y[O],K=y[O+1],W=q[ae],he=E*q[ae+1],Pe=be*W-ue*he,ve=be*he+ue*W,ke=q[2*ae],Ae=E*q[2*ae+1],Oe=Ee*ke-Ne*Ae,Ue=Ee*Ae+Ne*ke,Ve=q[3*ae],D=E*q[3*ae+1],Y=ye*Ve-K*D,R=ye*D+K*Ve,te=J+Oe,oe=ce+Ue,Te=J-Oe,Ce=ce-Ue,De=Pe+Y,we=ve+R,Le=E*(Pe-Y),ot=E*(ve-R);y[pe]=te+De,y[pe+1]=oe+we,y[V]=Te+ot,y[V+1]=Ce-Le,y[L]=te-De,y[L+1]=oe-we,y[O]=Te-ot,y[O+1]=Ce+Le}}}}_singleTransform2(y,M,E,A,B){const N=y[A],Q=y[A+1],H=y[A+B],z=y[A+B+1];M[E]=N+H,M[E+1]=Q+z,M[E+2]=N-H,M[E+3]=Q-z}_singleTransform4(y,M,E,A,B,N){const Q=B*2,H=B*3,z=y[A],Z=y[A+1],q=y[A+B],X=y[A+B+1],se=y[A+Q],ne=y[A+Q+1],ae=y[A+H],pe=y[A+H+1],V=z+se,L=Z+ne,O=z-se,J=Z-ne,ce=q+ae,be=X+pe,ue=N*(q-ae),Ee=N*(X-pe);M[E]=V+ce,M[E+1]=L+be,M[E+2]=O+Ee,M[E+3]=J-ue,M[E+4]=V-ce,M[E+5]=L-be,M[E+6]=O-Ee,M[E+7]=J+ue}_realTransform4(y,M,E){const A=this._csize;let N=1<<this._width,Q=A/N<<1,H,z;const Z=this._bitrev;if(Q===4)for(H=0,z=0;H<A;H+=Q,++z){const se=Z[z];this._singleRealTransform2(M,y,H,se>>>1,N>>>1)}else for(H=0,z=0;H<A;H+=Q,++z){const se=Z[z];this._singleRealTransform4(M,y,H,se>>>1,N>>>1,E)}const q=this.table;for(N>>=2;N>=2;N>>=2){Q=A/N<<1;const se=Q>>>1,ne=se>>>1,ae=ne>>>1;for(H=0;H<A;H+=Q)for(let pe=0,V=0;pe<=ae;pe+=2,V+=N){const L=H+pe,O=L+ne,J=O+ne,ce=J+ne,be=y[L],ue=y[L+1],Ee=y[O],Ne=y[O+1],ye=y[J],K=y[J+1],W=y[ce],he=y[ce+1],Pe=be,ve=ue,ke=q[V],Ae=E*q[V+1],Oe=Ee*ke-Ne*Ae,Ue=Ee*Ae+Ne*ke,Ve=q[2*V],D=E*q[2*V+1],Y=ye*Ve-K*D,R=ye*D+K*Ve,te=q[3*V],oe=E*q[3*V+1],Te=W*te-he*oe,Ce=W*oe+he*te,De=Pe+Y,we=ve+R,Le=Pe-Y,ot=ve-R,lt=Oe+Te,Tt=Ue+Ce,Mt=E*(Oe-Te),rr=E*(Ue-Ce);if(y[L]=De+lt,y[L+1]=we+Tt,y[O]=Le+rr,y[O+1]=ot-Mt,pe===0){y[J]=De-lt,y[J+1]=we-Tt;continue}if(pe===ae)continue;const Lt=H+ne-pe,pr=H+se-pe;y[Lt]=Le-E*rr,y[Lt+1]=-ot-E*Mt,y[pr]=De-E*lt,y[pr+1]=-we+E*Tt}}const X=A>>>1;for(let se=2;se<X;se+=2)y[A-se]=y[se],y[A-se+1]=-y[se+1]}_singleRealTransform2(y,M,E,A,B){const N=y[A],Q=y[A+B];M[E]=N+Q,M[E+1]=0,M[E+2]=N-Q,M[E+3]=0}_singleRealTransform4(y,M,E,A,B,N){const Q=B*2,H=B*3,z=y[A],Z=y[A+B],q=y[A+Q],X=y[A+H],se=z+q,ne=z-q,ae=Z+X,pe=N*(Z-X);M[E]=se+ae,M[E+1]=0,M[E+2]=ne,M[E+3]=-pe,M[E+4]=se-ae,M[E+5]=0,M[E+6]=ne,M[E+7]=pe}}class _{constructor(y){const M=2*(y-1),E=2*(2*y-1),A=2**Math.ceil(Math.log2(E));this.bufferSize=A,this._a=M;const B=new Float64Array(E),N=new Float64Array(A);this._chirpBuffer=new Float64Array(A),this._buffer1=new Float64Array(A),this._buffer2=new Float64Array(A),this._outBuffer1=new Float64Array(A),this._outBuffer2=new Float64Array(A);const Q=-2*Math.PI/y,H=Math.cos(Q),z=Math.sin(Q);for(let Z=0;Z<E>>1;++Z){const q=(Z+1-y)**2/2,X=Math.sqrt(H**2+z**2)**q,se=q*Math.atan2(z,H),ne=2*Z;B[ne]=X*Math.cos(se),B[ne+1]=X*Math.sin(se),N[ne]=B[ne],N[ne+1]=-B[ne+1]}this._slicedChirpBuffer=B.subarray(M,E),this._f=new w(A>>1),this._f.transform(this._chirpBuffer,N)}_transform(y,M,E){const A=this._buffer1,B=this._buffer2,N=this._outBuffer1,Q=this._outBuffer2,H=this._chirpBuffer,z=this._slicedChirpBuffer,Z=this._a;if(E)for(let q=0;q<z.length;q+=2){const X=q+1,se=q>>1,ne=M[se];A[q]=ne*z[q],A[X]=ne*z[X]}else for(let q=0;q<z.length;q+=2){const X=q+1;A[q]=M[q]*z[q]-M[X]*z[X],A[X]=M[q]*z[X]+M[X]*z[q]}this._f.transform(N,A);for(let q=0;q<H.length;q+=2){const X=q+1;B[q]=N[q]*H[q]-N[X]*H[X],B[X]=N[q]*H[X]+N[X]*H[q]}this._f.inverseTransform(Q,B);for(let q=0;q<Q.length;q+=2){const X=Q[q+Z],se=Q[q+Z+1],ne=z[q],ae=z[q+1];y[q]=X*ne-se*ae,y[q+1]=X*ae+se*ne}}transform(y,M){this._transform(y,M,!1)}realTransform(y,M){this._transform(y,M,!0)}}class C{constructor(y){this.fft_length=y,this.isPowerOfTwo=h(y),this.isPowerOfTwo?(this.fft=new w(y),this.outputBufferSize=2*y):(this.fft=new _(y),this.outputBufferSize=this.fft.bufferSize)}realTransform(y,M){this.fft.realTransform(y,M)}transform(y,M){this.fft.transform(y,M)}}function F(P,y){if(y%2===0||y<=0)throw new Error("Window size must be a positive odd number");const M=new P.constructor(P.length),E=new P.constructor(y),A=Math.floor(y/2);for(let B=0;B<P.length;++B){let N=0;for(let Q=-A;Q<=A;++Q){let H=B+Q;H<0?H=Math.abs(H):H>=P.length&&(H=2*(P.length-1)-H),E[N++]=P[H]}E.sort(),M[B]=E[A]}return M}function T(P,y){const M=Math.pow(10,y);return Math.round(P*M)/M}function g(P){const y=Math.round(P);return Math.abs(P)%1===.5?y%2===0?y:y-1:y}function $(P){const y=P.length,M=P[0].length,E=[y+1,M+1],A=Array.from({length:E[0]},()=>Array(E[1]).fill(1/0));A[0][0]=0;const B=Array.from({length:E[0]},()=>Array(E[1]).fill(-1));for(let Z=1;Z<E[1];++Z)for(let q=1;q<E[0];++q){const X=A[q-1][Z-1],se=A[q-1][Z],ne=A[q][Z-1];let ae,pe;X<se&&X<ne?(ae=X,pe=0):se<X&&se<ne?(ae=se,pe=1):(ae=ne,pe=2),A[q][Z]=P[q-1][Z-1]+ae,B[q][Z]=pe}for(let Z=0;Z<E[1];++Z)B[0][Z]=2;for(let Z=0;Z<E[0];++Z)B[Z][0]=1;let N=y,Q=M,H=[],z=[];for(;N>0||Q>0;)switch(H.push(N-1),z.push(Q-1),B[N][Q]){case 0:--N,--Q;break;case 1:--N;break;case 2:--Q;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${N}, ${Q}]. Please file a bug report.`)}return H.reverse(),z.reverse(),[H,z]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>i,Tensor:()=>a,cat:()=>M,full:()=>z,full_like:()=>Z,interpolate:()=>p,interpolate_4d:()=>u,layer_norm:()=>g,matmul:()=>h,mean:()=>N,mean_pooling:()=>T,ones:()=>q,ones_like:()=>X,permute:()=>c,quantize_embeddings:()=>pe,rand:()=>ae,rfft:()=>w,slice:()=>F,stack:()=>E,std_mean:()=>B,topk:()=>_,zeros:()=>se,zeros_like:()=>ne});var s=t("./src/utils/maths.js"),n=t("./src/backends/onnx.js"),o=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{get dims(){return this.ort_tensor.dims}set dims(L){this.ort_tensor.dims=L}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...L){return(0,n.isONNXTensor)(L[0])?this.ort_tensor=L[0]:this.ort_tensor=new n.Tensor(L[0],L[1],L[2]),new Proxy(this,{get:(O,J)=>{if(typeof J=="string"){let ce=Number(J);if(Number.isInteger(ce))return O._getitem(ce)}return O[J]},set:(O,J,ce)=>O[J]=ce})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[L,...O]=this.dims;if(O.length>0){const J=O.reduce((ce,be)=>ce*be);for(let ce=0;ce<L;++ce)yield this._subarray(ce,J,O)}else yield*this.data}_getitem(L){const[O,...J]=this.dims;if(L=y(L,O),J.length>0){const ce=J.reduce((be,ue)=>be*ue);return this._subarray(L,ce,J)}else return new a(this.type,[this.data[L]],J)}indexOf(L){const O=this.data;for(let J=0;J<O.length;++J)if(O[J]==L)return J;return-1}_subarray(L,O,J){const ce=L*O,be=(L+1)*O,ue="subarray"in this.data?this.data.subarray(ce,be):this.data.slice(ce,be);return new a(this.type,ue,J)}item(){const L=this.data;if(L.length!==1)throw new Error(`a Tensor with ${L.length} elements cannot be converted to Scalar`);return L[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const L=this.data;for(let O=0;O<L.length;++O)L[O]=1/(1+Math.exp(-L[O]));return this}map(L){return this.clone().map_(L)}map_(L){const O=this.data;for(let J=0;J<O.length;++J)O[J]=L(O[J],J,O);return this}mul(L){return this.clone().mul_(L)}mul_(L){const O=this.data;for(let J=0;J<O.length;++J)O[J]*=L;return this}div(L){return this.clone().div_(L)}div_(L){const O=this.data;for(let J=0;J<O.length;++J)O[J]/=L;return this}add(L){return this.clone().add_(L)}add_(L){const O=this.data;for(let J=0;J<O.length;++J)O[J]+=L;return this}sub(L){return this.clone().sub_(L)}sub_(L){const O=this.data;for(let J=0;J<O.length;++J)O[J]-=L;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...L){const O=[],J=[];for(let ye=0;ye<this.dims.length;++ye){let K=L[ye];if(K==null)J.push([0,this.dims[ye]]),O.push(this.dims[ye]);else if(typeof K=="number")K=y(K,this.dims[ye],ye),J.push([K,K+1]);else if(Array.isArray(K)&&K.length===2){let[W,he]=K;if(W=W===null?0:y(W,this.dims[ye],ye,!1),he=he===null?this.dims[ye]:y(he,this.dims[ye],ye,!1),W>he)throw new Error(`Invalid slice: ${K}`);const Pe=[Math.max(W,0),Math.min(he,this.dims[ye])];J.push(Pe),O.push(Pe[1]-Pe[0])}else throw new Error(`Invalid slice: ${K}`)}const ce=J.map(([ye,K])=>K-ye),be=ce.reduce((ye,K)=>ye*K),ue=this.data,Ee=new ue.constructor(be),Ne=this.stride();for(let ye=0;ye<be;++ye){let K=0;for(let W=ce.length-1,he=ye;W>=0;--W){const Pe=ce[W];K+=(he%Pe+J[W][0])*Ne[W],he=Math.floor(he/Pe)}Ee[ye]=ue[K]}return new a(this.type,Ee,O)}permute(...L){return c(this,L)}transpose(...L){return this.permute(...L)}sum(L=null,O=!1){return this.norm(1,L,O)}norm(L="fro",O=null,J=!1){if(L==="fro")L=2;else if(typeof L=="string")throw Error(`Unsupported norm: ${L}`);const ce=this.data,be=(ye,K)=>ye+K**L;if(O===null){const ye=ce.reduce(be,0)**(1/L);return new a(this.type,[ye],[])}const[ue,Ee,Ne]=A(be,this,O,J);if(L!==1)for(let ye=0;ye<Ee.length;++ye)Ee[ye]=Ee[ye]**(1/L);return new a(ue,Ee,Ne)}normalize_(L=2,O=1){O=y(O,this.dims.length);const J=this.norm(L,O,!0),ce=this.data,be=J.data;for(let ue=0;ue<ce.length;++ue){let Ee=0;for(let Ne=this.dims.length-1,ye=ue,K=1;Ne>=0;--Ne){const W=this.dims[Ne];if(Ne!==O){const he=ye%W;Ee+=he*K,K*=this.dims[Ne]}ye=Math.floor(ye/W)}ce[ue]/=be[Ee]}return this}normalize(L=2,O=1){return this.clone().normalize_(L,O)}stride(){return Q(this.dims)}squeeze(L=null){return new a(this.type,this.data,$(this.dims,L))}squeeze_(L=null){return this.dims=$(this.dims,L),this}unsqueeze(L=null){return new a(this.type,this.data,P(this.dims,L))}unsqueeze_(L=null){return this.dims=P(this.dims,L),this}flatten_(L=0,O=-1){O=(O+this.dims.length)%this.dims.length;let J=this.dims.slice(0,L),ce=this.dims.slice(L,O+1),be=this.dims.slice(O+1);return this.dims=[...J,ce.reduce((ue,Ee)=>ue*Ee,1),...be],this}flatten(L=0,O=-1){return this.clone().flatten_(L,O)}view(...L){let O=-1;for(let ce=0;ce<L.length;++ce)if(L[ce]===-1){if(O!==-1)throw new Error("Only one dimension can be inferred");O=ce}const J=this.data;if(O!==-1){const ce=L.reduce((be,ue,Ee)=>Ee!==O?be*ue:be,1);L[O]=J.length/ce}return new a(this.type,J,L)}neg_(){const L=this.data;for(let O=0;O<L.length;++O)L[O]=-L[O];return this}neg(){return this.clone().neg_()}gt(L){const O=new Uint8Array(this.data.length),J=this.data;for(let ce=0;ce<J.length;++ce)O[ce]=J[ce]>L?1:0;return new a("bool",O,this.dims)}lt(L){const O=new Uint8Array(this.data.length),J=this.data;for(let ce=0;ce<J.length;++ce)O[ce]=J[ce]<L?1:0;return new a("bool",O,this.dims)}clamp_(L,O){const J=this.data;for(let ce=0;ce<J.length;++ce)J[ce]=Math.min(Math.max(J[ce],L),O);return this}clamp(L,O){return this.clone().clamp_(L,O)}round_(){const L=this.data;for(let O=0;O<L.length;++O)L[O]=Math.round(L[O]);return this}round(){return this.clone().round_()}mean(L=null,O=!1){return N(this,L,O)}min(L=null,O=!1){if(L===null){const ue=(0,s.min)(this.data)[0];return new a(this.type,[ue],[])}const[J,ce,be]=A((ue,Ee)=>Math.min(ue,Ee),this,L,O,1/0);return new a(J,ce,be)}max(L=null,O=!1){if(L===null){const ue=(0,s.max)(this.data)[0];return new a(this.type,[ue],[])}const[J,ce,be]=A((ue,Ee)=>Math.max(ue,Ee),this,L,O,-1/0);return new a(J,ce,be)}argmin(L=null,O=!1){if(L!==null)throw new Error("`dim !== null` not yet implemented.");const J=(0,s.min)(this.data)[1];return new a("int64",[BigInt(J)],[])}argmax(L=null,O=!1){if(L!==null)throw new Error("`dim !== null` not yet implemented.");const J=(0,s.max)(this.data)[1];return new a("int64",[BigInt(J)],[])}to(L){if(this.type===L)return this;if(!i.hasOwnProperty(L))throw new Error(`Unsupported type: ${L}`);let O;const J=["int64","uint64"].includes(this.type),ce=["int64","uint64"].includes(L);return J&&!ce?O=Number:!J&&ce&&(O=BigInt),new a(L,i[L].from(this.data,O),this.dims)}}function l(V,L){const O=V.length,J=L.reduce((be,ue)=>be*ue);if(O!==J)throw Error(`cannot reshape array of size ${O} into shape (${L})`);let ce=V;for(let be=L.length-1;be>=0;be--)ce=ce.reduce((ue,Ee)=>{let Ne=ue[ue.length-1];return Ne.length<L[be]?Ne.push(Ee):ue.push([Ee]),ue},[[]]);return ce[0]}function c(V,L){const[O,J]=(0,s.permute_data)(V.data,V.dims,L);return new a(V.type,O,J)}function p(V,[L,O],J="bilinear",ce=!1){const be=V.dims.at(-3)??1,ue=V.dims.at(-2),Ee=V.dims.at(-1);let Ne=(0,s.interpolate_data)(V.data,[be,ue,Ee],[L,O],J,ce);return new a(V.type,Ne,[be,L,O])}async function u(V,{size:L=null,mode:O="bilinear"}={}){if(V.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!L)throw new Error("`interpolate_4d` requires a `size` argument.");let J;if(L.length===2)J=[...V.dims.slice(0,2),...L];else if(L.length===3)J=[V.dims[0],...L];else if(L.length===4)J=L;else throw new Error("`size` must be of length 2, 3, or 4.");let ce;if(O==="nearest")ce=await o.TensorOpRegistry.nearest_interpolate_4d;else if(O==="bilinear")ce=await o.TensorOpRegistry.bilinear_interpolate_4d;else if(O==="bicubic")ce=await o.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${O}`);const be=new a("int64",new BigInt64Array(J.map(BigInt)),[J.length]);return await ce({x:V,s:be})}async function h(V,L){return await(await o.TensorOpRegistry.matmul)({a:V,b:L})}async function w(V,L){return await(await o.TensorOpRegistry.rfft)({x:V,a:L})}async function _(V,L){const O=await o.TensorOpRegistry.top_k;return L==null?L=V.dims.at(-1):L=Math.min(L,V.dims.at(-1)),await O({x:V,k:new a("int64",[BigInt(L)],[1])})}const C=V=>new a("int64",V,[V.length]);async function F(V,L,O,J,ce){return await(await o.TensorOpRegistry.slice)({x:V,s:C(L),e:C(O),a:C(J),t:C(ce??new Array(J.length).fill(1))})}function T(V,L){const O=V.data,J=L.data,ce=[V.dims[0],V.dims[2]],be=new O.constructor(ce[0]*ce[1]),[ue,Ee,Ne]=V.dims;let ye=0;for(let K=0;K<ue;++K){const W=K*Ne*Ee;for(let he=0;he<Ne;++he){let Pe=0,ve=0;const ke=K*Ee,Ae=W+he;for(let Ue=0;Ue<Ee;++Ue){const Ve=Number(J[ke+Ue]);ve+=Ve,Pe+=O[Ae+Ue*Ne]*Ve}const Oe=Pe/ve;be[ye++]=Oe}}return new a(V.type,be,ce)}function g(V,L,{eps:O=1e-5}={}){if(V.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[J,ce]=V.dims;if(L.length!==1&&L[0]!==ce)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[be,ue]=B(V,1,0,!0),Ee=be.data,Ne=ue.data,ye=V.data,K=new ye.constructor(ye.length);for(let W=0;W<J;++W){const he=W*ce;for(let Pe=0;Pe<ce;++Pe){const ve=he+Pe;K[ve]=(ye[ve]-Ne[W])/(Ee[W]+O)}}return new a(V.type,K,V.dims)}function $(V,L){return V=V.slice(),L===null?V=V.filter(O=>O!==1):typeof L=="number"?V[L]===1&&V.splice(L,1):Array.isArray(L)&&(V=V.filter((O,J)=>O!==1||!L.includes(J))),V}function P(V,L){return L=y(L,V.length+1),V=V.slice(),V.splice(L,0,1),V}function y(V,L,O=null,J=!0){if(V<-L||V>=L){if(J)throw new Error(`IndexError: index ${V} is out of bounds for dimension${O===null?"":" "+O} with size ${L}`);return V<-L?0:L}return V<0&&(V=(V%L+L)%L),V}function M(V,L=0){L=y(L,V[0].dims.length);const O=V[0].dims.slice();O[L]=V.reduce((ue,Ee)=>ue+Ee.dims[L],0);const J=O.reduce((ue,Ee)=>ue*Ee,1),ce=new V[0].data.constructor(J),be=V[0].type;if(L===0){let ue=0;for(const Ee of V){const Ne=Ee.data;ce.set(Ne,ue),ue+=Ne.length}}else{let ue=0;for(let Ee=0;Ee<V.length;++Ee){const{data:Ne,dims:ye}=V[Ee];for(let K=0;K<Ne.length;++K){let W=0;for(let he=ye.length-1,Pe=K,ve=1;he>=0;--he){const ke=ye[he];let Ae=Pe%ke;he===L&&(Ae+=ue),W+=Ae*ve,ve*=O[he],Pe=Math.floor(Pe/ke)}ce[W]=Ne[K]}ue+=ye[L]}}return new a(be,ce,O)}function E(V,L=0){return M(V.map(O=>O.unsqueeze(L)),L)}function A(V,L,O=null,J=!1,ce=null){const be=L.data,ue=L.dims;O=y(O,ue.length);const Ee=ue.slice();Ee[O]=1;const Ne=new be.constructor(be.length/ue[O]);ce!==null&&Ne.fill(ce);for(let ye=0;ye<be.length;++ye){let K=0;for(let W=ue.length-1,he=ye,Pe=1;W>=0;--W){const ve=ue[W];if(W!==O){const ke=he%ve;K+=ke*Pe,Pe*=Ee[W]}he=Math.floor(he/ve)}Ne[K]=V(Ne[K],be[ye],ye,K)}return J||Ee.splice(O,1),[L.type,Ne,Ee]}function B(V,L=null,O=1,J=!1){const ce=V.data,be=V.dims;if(L===null){const Pe=ce.reduce((Oe,Ue)=>Oe+Ue,0)/ce.length,ve=Math.sqrt(ce.reduce((Oe,Ue)=>Oe+(Ue-Pe)**2,0)/(ce.length-O)),ke=new a(V.type,[Pe],[]);return[new a(V.type,[ve],[]),ke]}L=y(L,be.length);const ue=N(V,L,J),Ee=ue.data,[Ne,ye,K]=A((he,Pe,ve,ke)=>he+(Pe-Ee[ke])**2,V,L,J);for(let he=0;he<ye.length;++he)ye[he]=Math.sqrt(ye[he]/(be[L]-O));return[new a(Ne,ye,K),ue]}function N(V,L=null,O=!1){const J=V.dims,ce=V.data;if(L===null){const Ne=ce.reduce((ye,K)=>ye+K,0);return new a(V.type,[Ne/ce.length],[])}L=y(L,J.length);const[be,ue,Ee]=A((Ne,ye)=>Ne+ye,V,L,O);if(J[L]!==1)for(let Ne=0;Ne<ue.length;++Ne)ue[Ne]/=J[L];return new a(be,ue,Ee)}function Q(V){const L=new Array(V.length);for(let O=V.length-1,J=1;O>=0;--O)L[O]=J,J*=V[O];return L}function H(V,L,O,J){const ce=V.reduce((be,ue)=>be*ue,1);return new a(O,new J(ce).fill(L),V)}function z(V,L){let O,J;if(typeof L=="number")O="float32",J=Float32Array;else if(typeof L=="bigint")O="int64",J=BigInt64Array;else if(typeof L=="boolean")O="bool",J=Uint8Array;else throw new Error(`Unsupported data type: ${typeof L}`);return H(V,L,O,J)}function Z(V,L){return z(V.dims,L)}function q(V){return H(V,1n,"int64",BigInt64Array)}function X(V){return q(V.dims)}function se(V){return H(V,0n,"int64",BigInt64Array)}function ne(V){return se(V.dims)}function ae(V){const L=V.reduce((O,J)=>O*J,1);return new a("float32",Float32Array.from({length:L},()=>Math.random()),V)}function pe(V,L){if(V.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(V.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(L))throw new Error("The precision must be either 'binary' or 'ubinary'");const O=L==="binary",J=O?"int8":"uint8",ce=O?Int8Array:Uint8Array,be=V.data,ue=new ce(be.length/8);for(let Ee=0;Ee<be.length;++Ee){const Ne=be[Ee]>0?1:0,ye=Math.floor(Ee/8),K=Ee%8;ue[ye]|=Ne<<7-K,O&&K===0&&(ue[ye]-=128)}return new a(J,ue,[V.dims[0],V.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>i,RawVideoFrame:()=>o,load_video:()=>a});var s=t("./src/utils/image.js"),n=t("./src/env.js");class o{constructor(c,p){this.image=c,this.timestamp=p}}class i{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((u,h)=>new o(u,(h+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!n.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const u=[],h=document.createElement("video");if(h.crossOrigin="anonymous",h.muted=!0,typeof l=="string")h.src=l;else if(l instanceof Blob)h.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)h.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise($=>h.onloadedmetadata=$),h.seekable.start(0)===h.seekable.end(0)){const P=await(await fetch(h.src)).blob();h.src=URL.createObjectURL(P),await new Promise(y=>h.onloadedmetadata=y)}const w=h.duration;let _,C;c!=null?(_=c,C=c===1?0:w/(c-1)):(C=1/p,_=Math.floor(w/C));let F=[];for(let $=0;$<_;++$)F.push(c===1?w/2:$*C);const T=document.createElement("canvas");T.width=h.videoWidth,T.height=h.videoHeight;const g=T.getContext("2d",{willReadFrequently:!0});for(const $ of F){h.currentTime=$,await new Promise(E=>{h.onseeked=E}),g.drawImage(h,0,0,T.width,T.height);const P=g.getImageData(0,0,T.width,T.height),y=new s.RawImage(P.data,T.width,T.height,4),M=new o(y,$);u.push(M)}return h.remove(),new i(u,w)}}},Zg={};function $t(e){var r=Zg[e];if(r!==void 0)return r.exports;var t=Zg[e]={exports:{}};return ET[e](t,t.exports,$t),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;$t.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var n=Object.create(null);$t.r(n);var o={};r=r||[null,e({}),e([]),e(e)];for(var i=s&2&&t;typeof i=="object"&&!~r.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(a=>o[a]=()=>t[a]);return o.default=()=>t,$t.d(n,o),n}})();$t.d=(e,r)=>{for(var t in r)$t.o(r,t)&&!$t.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};$t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);$t.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var f={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/$t.r(f),$t.d(f,{ASTFeatureExtractor:()=>u.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>n.AutoConfig,AutoFeatureExtractor:()=>h.AutoFeatureExtractor,AutoImageProcessor:()=>C.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>g.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>$.BaseStreamer,BeitFeatureExtractor:()=>_.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>_.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>_.CLIPFeatureExtractor,CLIPImageProcessor:()=>_.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>_.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>u.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>y.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>_.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>_.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>_.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>_.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>u.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>_.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>_.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>_.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>_.DonutFeatureExtractor,DonutImageProcessor:()=>_.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>u.EncodecFeatureExtractor,EosTokenCriteria:()=>P.EosTokenCriteria,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>T.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>y.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>y.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>T.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>T.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>u.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>w.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>P.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>_.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>T.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>_.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LogitsProcessor:()=>y.LogitsProcessor,LogitsProcessorList:()=>y.LogitsProcessorList,LogitsWarper:()=>y.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>_.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>_.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>_.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>P.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>T.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>y.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>y.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>_.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>_.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>_.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>_.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>_.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>_.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>_.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>_.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>_.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>_.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>u.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>T.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>y.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>y.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>_.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>_.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>_.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>T.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>_.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>T.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>_.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>T.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>n.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>F.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>_.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>T.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>_.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>T.Qwen2VLProcessor,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>_.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RawAudio:()=>o.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>y.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>_.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>T.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>_.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>_.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>_.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>_.SmolVLMImageProcessor,SmolVLMProcessor:()=>T.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>u.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>T.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>P.StoppingCriteria,StoppingCriteriaList:()=>P.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>y.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>_.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>y.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>$.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>y.TopKLogitsWarper,TopPLogitsWarper:()=>y.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>T.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>T.VLChatProcessor,VLMImageProcessor:()=>_.VLMImageProcessor,ViTFeatureExtractor:()=>_.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>_.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>_.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>_.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>u.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>T.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>T.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>u.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>T.WhisperProcessor,WhisperTextStreamer:()=>$.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>y.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>_.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>_.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getKeyValueShapes:()=>n.getKeyValueShapes,hamming:()=>o.hamming,hanning:()=>o.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>o.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>o.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>o.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>o.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=$t("./src/env.js"),r=$t("./src/pipelines.js"),t=$t("./src/models.js"),s=$t("./src/tokenizers.js"),n=$t("./src/configs.js"),o=$t("./src/utils/audio.js"),i=$t("./src/utils/image.js"),a=$t("./src/utils/video.js"),l=$t("./src/utils/tensor.js"),c=$t("./src/utils/maths.js"),p=$t("./src/base/feature_extraction_utils.js"),u=$t("./src/models/feature_extractors.js"),h=$t("./src/models/auto/feature_extraction_auto.js"),w=$t("./src/base/image_processors_utils.js"),_=$t("./src/models/image_processors.js"),C=$t("./src/models/auto/image_processing_auto.js"),F=$t("./src/base/processing_utils.js"),T=$t("./src/models/processors.js"),g=$t("./src/models/auto/processing_auto.js"),$=$t("./src/generation/streamers.js"),P=$t("./src/generation/stopping_criteria.js"),y=$t("./src/generation/logits_process.js")})();f.ASTFeatureExtractor;f.ASTForAudioClassification;f.ASTModel;f.ASTPreTrainedModel;f.AlbertForMaskedLM;f.AlbertForQuestionAnswering;f.AlbertForSequenceClassification;f.AlbertModel;f.AlbertPreTrainedModel;f.AlbertTokenizer;f.AudioClassificationPipeline;f.AutoConfig;f.AutoFeatureExtractor;f.AutoImageProcessor;f.AutoModel;f.AutoModelForAudioClassification;f.AutoModelForAudioFrameClassification;f.AutoModelForAudioTextToText;f.AutoModelForCTC;f.AutoModelForCausalLM;f.AutoModelForDepthEstimation;f.AutoModelForDocumentQuestionAnswering;f.AutoModelForImageClassification;f.AutoModelForImageFeatureExtraction;f.AutoModelForImageMatting;f.AutoModelForImageSegmentation;f.AutoModelForImageTextToText;f.AutoModelForImageToImage;f.AutoModelForMaskGeneration;f.AutoModelForMaskedLM;f.AutoModelForNormalEstimation;f.AutoModelForObjectDetection;f.AutoModelForPoseEstimation;f.AutoModelForQuestionAnswering;f.AutoModelForSemanticSegmentation;f.AutoModelForSeq2SeqLM;f.AutoModelForSequenceClassification;f.AutoModelForSpeechSeq2Seq;f.AutoModelForTextToSpectrogram;f.AutoModelForTextToWaveform;f.AutoModelForTokenClassification;f.AutoModelForUniversalSegmentation;f.AutoModelForVision2Seq;f.AutoModelForXVector;f.AutoModelForZeroShotObjectDetection;f.AutoProcessor;f.AutoTokenizer;f.AutomaticSpeechRecognitionPipeline;f.BackgroundRemovalPipeline;f.BartForConditionalGeneration;f.BartForSequenceClassification;f.BartModel;f.BartPretrainedModel;f.BartTokenizer;f.BaseModelOutput;f.BaseStreamer;f.BeitFeatureExtractor;f.BeitForImageClassification;f.BeitModel;f.BeitPreTrainedModel;f.BertForMaskedLM;f.BertForQuestionAnswering;f.BertForSequenceClassification;f.BertForTokenClassification;f.BertModel;f.BertPreTrainedModel;f.BertTokenizer;f.BitImageProcessor;f.BlenderbotForConditionalGeneration;f.BlenderbotModel;f.BlenderbotPreTrainedModel;f.BlenderbotSmallForConditionalGeneration;f.BlenderbotSmallModel;f.BlenderbotSmallPreTrainedModel;f.BlenderbotSmallTokenizer;f.BlenderbotTokenizer;f.BloomForCausalLM;f.BloomModel;f.BloomPreTrainedModel;f.BloomTokenizer;f.CLIPFeatureExtractor;f.CLIPImageProcessor;f.CLIPModel;f.CLIPPreTrainedModel;f.CLIPSegForImageSegmentation;f.CLIPSegModel;f.CLIPSegPreTrainedModel;f.CLIPTextModel;f.CLIPTextModelWithProjection;f.CLIPTokenizer;f.CLIPVisionModel;f.CLIPVisionModelWithProjection;f.CamembertForMaskedLM;f.CamembertForQuestionAnswering;f.CamembertForSequenceClassification;f.CamembertForTokenClassification;f.CamembertModel;f.CamembertPreTrainedModel;f.CamembertTokenizer;f.CausalLMOutput;f.CausalLMOutputWithPast;f.ChineseCLIPFeatureExtractor;f.ChineseCLIPModel;f.ChineseCLIPPreTrainedModel;f.ClapAudioModelWithProjection;f.ClapFeatureExtractor;f.ClapModel;f.ClapPreTrainedModel;f.ClapTextModelWithProjection;f.ClassifierFreeGuidanceLogitsProcessor;f.CodeGenForCausalLM;f.CodeGenModel;f.CodeGenPreTrainedModel;f.CodeGenTokenizer;f.CodeLlamaTokenizer;f.CohereForCausalLM;f.CohereModel;f.CoherePreTrainedModel;f.CohereTokenizer;f.ConvBertForMaskedLM;f.ConvBertForQuestionAnswering;f.ConvBertForSequenceClassification;f.ConvBertForTokenClassification;f.ConvBertModel;f.ConvBertPreTrainedModel;f.ConvBertTokenizer;f.ConvNextFeatureExtractor;f.ConvNextForImageClassification;f.ConvNextImageProcessor;f.ConvNextModel;f.ConvNextPreTrainedModel;f.ConvNextV2ForImageClassification;f.ConvNextV2Model;f.ConvNextV2PreTrainedModel;f.DPTFeatureExtractor;f.DPTForDepthEstimation;f.DPTImageProcessor;f.DPTModel;f.DPTPreTrainedModel;f.DacDecoderModel;f.DacDecoderOutput;f.DacEncoderModel;f.DacEncoderOutput;f.DacFeatureExtractor;f.DacModel;f.DacPreTrainedModel;f.DataTypeMap;f.DebertaForMaskedLM;f.DebertaForQuestionAnswering;f.DebertaForSequenceClassification;f.DebertaForTokenClassification;f.DebertaModel;f.DebertaPreTrainedModel;f.DebertaTokenizer;f.DebertaV2ForMaskedLM;f.DebertaV2ForQuestionAnswering;f.DebertaV2ForSequenceClassification;f.DebertaV2ForTokenClassification;f.DebertaV2Model;f.DebertaV2PreTrainedModel;f.DebertaV2Tokenizer;f.DecisionTransformerModel;f.DecisionTransformerPreTrainedModel;f.DeiTFeatureExtractor;f.DeiTForImageClassification;f.DeiTImageProcessor;f.DeiTModel;f.DeiTPreTrainedModel;f.DepthAnythingForDepthEstimation;f.DepthAnythingPreTrainedModel;f.DepthEstimationPipeline;f.DepthProForDepthEstimation;f.DepthProPreTrainedModel;f.DetrFeatureExtractor;f.DetrForObjectDetection;f.DetrForSegmentation;f.DetrImageProcessor;f.DetrModel;f.DetrObjectDetectionOutput;f.DetrPreTrainedModel;f.DetrSegmentationOutput;f.Dinov2ForImageClassification;f.Dinov2Model;f.Dinov2PreTrainedModel;f.Dinov2WithRegistersForImageClassification;f.Dinov2WithRegistersModel;f.Dinov2WithRegistersPreTrainedModel;f.DistilBertForMaskedLM;f.DistilBertForQuestionAnswering;f.DistilBertForSequenceClassification;f.DistilBertForTokenClassification;f.DistilBertModel;f.DistilBertPreTrainedModel;f.DistilBertTokenizer;f.DocumentQuestionAnsweringPipeline;f.DonutFeatureExtractor;f.DonutImageProcessor;f.DonutSwinModel;f.DonutSwinPreTrainedModel;f.EfficientNetForImageClassification;f.EfficientNetImageProcessor;f.EfficientNetModel;f.EfficientNetPreTrainedModel;f.ElectraForMaskedLM;f.ElectraForQuestionAnswering;f.ElectraForSequenceClassification;f.ElectraForTokenClassification;f.ElectraModel;f.ElectraPreTrainedModel;f.ElectraTokenizer;f.EncodecFeatureExtractor;f.EosTokenCriteria;f.EsmForMaskedLM;f.EsmForSequenceClassification;f.EsmForTokenClassification;f.EsmModel;f.EsmPreTrainedModel;f.EsmTokenizer;f.ExaoneForCausalLM;f.ExaoneModel;f.ExaonePreTrainedModel;f.FFT;f.FalconForCausalLM;f.FalconModel;f.FalconPreTrainedModel;f.FalconTokenizer;f.FastViTForImageClassification;f.FastViTModel;f.FastViTPreTrainedModel;f.FeatureExtractionPipeline;f.FeatureExtractor;f.FillMaskPipeline;f.Florence2ForConditionalGeneration;f.Florence2PreTrainedModel;f.Florence2Processor;f.ForcedBOSTokenLogitsProcessor;f.ForcedEOSTokenLogitsProcessor;f.GLPNFeatureExtractor;f.GLPNForDepthEstimation;f.GLPNModel;f.GLPNPreTrainedModel;f.GPT2LMHeadModel;f.GPT2Model;f.GPT2PreTrainedModel;f.GPT2Tokenizer;f.GPTBigCodeForCausalLM;f.GPTBigCodeModel;f.GPTBigCodePreTrainedModel;f.GPTJForCausalLM;f.GPTJModel;f.GPTJPreTrainedModel;f.GPTNeoForCausalLM;f.GPTNeoModel;f.GPTNeoPreTrainedModel;f.GPTNeoXForCausalLM;f.GPTNeoXModel;f.GPTNeoXPreTrainedModel;f.GPTNeoXTokenizer;f.Gemma2ForCausalLM;f.Gemma2Model;f.Gemma2PreTrainedModel;f.Gemma3ForCausalLM;f.Gemma3Model;f.Gemma3PreTrainedModel;f.GemmaForCausalLM;f.GemmaModel;f.GemmaPreTrainedModel;f.GemmaTokenizer;f.GlmForCausalLM;f.GlmModel;f.GlmPreTrainedModel;f.GraniteForCausalLM;f.GraniteModel;f.GranitePreTrainedModel;f.Grok1Tokenizer;f.GroundingDinoForObjectDetection;f.GroundingDinoImageProcessor;f.GroundingDinoPreTrainedModel;f.GroundingDinoProcessor;f.GroupViTModel;f.GroupViTPreTrainedModel;f.HeliumForCausalLM;f.HeliumModel;f.HeliumPreTrainedModel;f.HerbertTokenizer;f.HieraForImageClassification;f.HieraModel;f.HieraPreTrainedModel;f.HubertForCTC;f.HubertForSequenceClassification;f.HubertModel;f.HubertPreTrainedModel;f.IJepaForImageClassification;f.IJepaModel;f.IJepaPreTrainedModel;f.Idefics3ForConditionalGeneration;f.Idefics3ImageProcessor;f.Idefics3PreTrainedModel;f.Idefics3Processor;f.ImageClassificationPipeline;f.ImageFeatureExtractionPipeline;f.ImageFeatureExtractor;f.ImageMattingOutput;f.ImageProcessor;f.ImageSegmentationPipeline;f.ImageToImagePipeline;f.ImageToTextPipeline;f.InterruptableStoppingCriteria;f.JAISLMHeadModel;f.JAISModel;f.JAISPreTrainedModel;f.JinaCLIPImageProcessor;f.JinaCLIPModel;f.JinaCLIPPreTrainedModel;f.JinaCLIPProcessor;f.JinaCLIPTextModel;f.JinaCLIPVisionModel;f.LiteWhisperForConditionalGeneration;f.LlamaForCausalLM;f.LlamaModel;f.LlamaPreTrainedModel;f.LlamaTokenizer;f.LlavaForConditionalGeneration;f.LlavaOnevisionForConditionalGeneration;f.LlavaOnevisionImageProcessor;f.LlavaPreTrainedModel;f.LogitsProcessor;f.LogitsProcessorList;f.LogitsWarper;f.LongT5ForConditionalGeneration;f.LongT5Model;f.LongT5PreTrainedModel;f.M2M100ForConditionalGeneration;f.M2M100Model;f.M2M100PreTrainedModel;f.M2M100Tokenizer;f.MBart50Tokenizer;f.MBartForCausalLM;f.MBartForConditionalGeneration;f.MBartForSequenceClassification;f.MBartModel;f.MBartPreTrainedModel;f.MBartTokenizer;f.MPNetForMaskedLM;f.MPNetForQuestionAnswering;f.MPNetForSequenceClassification;f.MPNetForTokenClassification;f.MPNetModel;f.MPNetPreTrainedModel;f.MPNetTokenizer;f.MT5ForConditionalGeneration;f.MT5Model;f.MT5PreTrainedModel;f.MarianMTModel;f.MarianModel;f.MarianPreTrainedModel;f.MarianTokenizer;f.Mask2FormerImageProcessor;f.MaskFormerFeatureExtractor;f.MaskFormerForInstanceSegmentation;f.MaskFormerImageProcessor;f.MaskFormerModel;f.MaskFormerPreTrainedModel;f.MaskedLMOutput;f.MaxLengthCriteria;f.Metric3DForDepthEstimation;f.Metric3DPreTrainedModel;f.Metric3Dv2ForDepthEstimation;f.Metric3Dv2PreTrainedModel;f.MgpstrForSceneTextRecognition;f.MgpstrModelOutput;f.MgpstrPreTrainedModel;f.MgpstrProcessor;f.MgpstrTokenizer;f.MimiDecoderModel;f.MimiDecoderOutput;f.MimiEncoderModel;f.MimiEncoderOutput;f.MimiModel;f.MimiPreTrainedModel;f.MinLengthLogitsProcessor;f.MinNewTokensLengthLogitsProcessor;f.MistralForCausalLM;f.MistralModel;f.MistralPreTrainedModel;f.MobileBertForMaskedLM;f.MobileBertForQuestionAnswering;f.MobileBertForSequenceClassification;f.MobileBertModel;f.MobileBertPreTrainedModel;f.MobileBertTokenizer;f.MobileLLMForCausalLM;f.MobileLLMModel;f.MobileLLMPreTrainedModel;f.MobileNetV1FeatureExtractor;f.MobileNetV1ForImageClassification;f.MobileNetV1ForSemanticSegmentation;f.MobileNetV1ImageProcessor;f.MobileNetV1Model;f.MobileNetV1PreTrainedModel;f.MobileNetV2FeatureExtractor;f.MobileNetV2ForImageClassification;f.MobileNetV2ForSemanticSegmentation;f.MobileNetV2ImageProcessor;f.MobileNetV2Model;f.MobileNetV2PreTrainedModel;f.MobileNetV3FeatureExtractor;f.MobileNetV3ForImageClassification;f.MobileNetV3ForSemanticSegmentation;f.MobileNetV3ImageProcessor;f.MobileNetV3Model;f.MobileNetV3PreTrainedModel;f.MobileNetV4FeatureExtractor;f.MobileNetV4ForImageClassification;f.MobileNetV4ForSemanticSegmentation;f.MobileNetV4ImageProcessor;f.MobileNetV4Model;f.MobileNetV4PreTrainedModel;f.MobileViTFeatureExtractor;f.MobileViTForImageClassification;f.MobileViTImageProcessor;f.MobileViTModel;f.MobileViTPreTrainedModel;f.MobileViTV2ForImageClassification;f.MobileViTV2Model;f.MobileViTV2PreTrainedModel;f.ModelOutput;f.ModernBertForMaskedLM;f.ModernBertForSequenceClassification;f.ModernBertForTokenClassification;f.ModernBertModel;f.ModernBertPreTrainedModel;f.Moondream1ForConditionalGeneration;f.MoonshineFeatureExtractor;f.MoonshineForConditionalGeneration;f.MoonshineModel;f.MoonshinePreTrainedModel;f.MoonshineProcessor;f.MptForCausalLM;f.MptModel;f.MptPreTrainedModel;f.MultiModalityCausalLM;f.MultiModalityPreTrainedModel;f.MusicgenForCausalLM;f.MusicgenForConditionalGeneration;f.MusicgenModel;f.MusicgenPreTrainedModel;f.NllbTokenizer;f.NoBadWordsLogitsProcessor;f.NoRepeatNGramLogitsProcessor;f.NomicBertModel;f.NomicBertPreTrainedModel;f.NougatImageProcessor;f.NougatTokenizer;f.OPTForCausalLM;f.OPTModel;f.OPTPreTrainedModel;f.ObjectDetectionPipeline;f.Olmo2ForCausalLM;f.Olmo2Model;f.Olmo2PreTrainedModel;f.OlmoForCausalLM;f.OlmoModel;f.OlmoPreTrainedModel;f.OpenELMForCausalLM;f.OpenELMModel;f.OpenELMPreTrainedModel;f.OwlViTFeatureExtractor;f.OwlViTForObjectDetection;f.OwlViTImageProcessor;f.OwlViTModel;f.OwlViTPreTrainedModel;f.OwlViTProcessor;f.Owlv2ForObjectDetection;f.Owlv2ImageProcessor;f.Owlv2Model;f.Owlv2PreTrainedModel;f.PaliGemmaForConditionalGeneration;f.PaliGemmaPreTrainedModel;f.PaliGemmaProcessor;f.PatchTSMixerForPrediction;f.PatchTSMixerModel;f.PatchTSMixerPreTrainedModel;f.PatchTSTForPrediction;f.PatchTSTModel;f.PatchTSTPreTrainedModel;f.Phi3ForCausalLM;f.Phi3Model;f.Phi3PreTrainedModel;f.Phi3VForCausalLM;f.Phi3VImageProcessor;f.Phi3VPreTrainedModel;f.Phi3VProcessor;f.PhiForCausalLM;f.PhiModel;f.PhiPreTrainedModel;f.Pipeline;f.PreTrainedModel;f.PreTrainedTokenizer;f.PretrainedConfig;f.PretrainedMixin;f.Processor;f.PvtForImageClassification;f.PvtImageProcessor;f.PvtModel;f.PvtPreTrainedModel;f.PyAnnoteFeatureExtractor;f.PyAnnoteForAudioFrameClassification;f.PyAnnoteModel;f.PyAnnotePreTrainedModel;f.PyAnnoteProcessor;f.QuestionAnsweringModelOutput;f.QuestionAnsweringPipeline;f.Qwen2ForCausalLM;f.Qwen2Model;f.Qwen2PreTrainedModel;f.Qwen2Tokenizer;f.Qwen2VLForConditionalGeneration;f.Qwen2VLImageProcessor;f.Qwen2VLPreTrainedModel;f.Qwen2VLProcessor;f.RTDetrForObjectDetection;f.RTDetrImageProcessor;f.RTDetrModel;f.RTDetrObjectDetectionOutput;f.RTDetrPreTrainedModel;f.RawAudio;f.RawImage;f.RawVideo;f.RawVideoFrame;f.RepetitionPenaltyLogitsProcessor;f.ResNetForImageClassification;f.ResNetModel;f.ResNetPreTrainedModel;f.RoFormerForMaskedLM;f.RoFormerForQuestionAnswering;f.RoFormerForSequenceClassification;f.RoFormerForTokenClassification;f.RoFormerModel;f.RoFormerPreTrainedModel;f.RoFormerTokenizer;f.RobertaForMaskedLM;f.RobertaForQuestionAnswering;f.RobertaForSequenceClassification;f.RobertaForTokenClassification;f.RobertaModel;f.RobertaPreTrainedModel;f.RobertaTokenizer;f.SamImageProcessor;f.SamImageSegmentationOutput;f.SamModel;f.SamPreTrainedModel;f.SamProcessor;f.SapiensForDepthEstimation;f.SapiensForNormalEstimation;f.SapiensForSemanticSegmentation;f.SapiensPreTrainedModel;f.SeamlessM4TFeatureExtractor;f.SegformerFeatureExtractor;f.SegformerForImageClassification;f.SegformerForSemanticSegmentation;f.SegformerImageProcessor;f.SegformerModel;f.SegformerPreTrainedModel;f.Seq2SeqLMOutput;f.SequenceClassifierOutput;f.SiglipImageProcessor;f.SiglipModel;f.SiglipPreTrainedModel;f.SiglipTextModel;f.SiglipTokenizer;f.SiglipVisionModel;f.SmolVLMForConditionalGeneration;f.SmolVLMImageProcessor;f.SmolVLMProcessor;f.SnacDecoderModel;f.SnacEncoderModel;f.SnacFeatureExtractor;f.SnacModel;f.SnacPreTrainedModel;f.SpeechT5FeatureExtractor;f.SpeechT5ForSpeechToText;f.SpeechT5ForTextToSpeech;f.SpeechT5HifiGan;f.SpeechT5Model;f.SpeechT5PreTrainedModel;f.SpeechT5Processor;f.SpeechT5Tokenizer;f.SqueezeBertForMaskedLM;f.SqueezeBertForQuestionAnswering;f.SqueezeBertForSequenceClassification;f.SqueezeBertModel;f.SqueezeBertPreTrainedModel;f.SqueezeBertTokenizer;f.StableLmForCausalLM;f.StableLmModel;f.StableLmPreTrainedModel;f.Starcoder2ForCausalLM;f.Starcoder2Model;f.Starcoder2PreTrainedModel;f.StoppingCriteria;f.StoppingCriteriaList;f.StyleTextToSpeech2Model;f.StyleTextToSpeech2PreTrainedModel;f.SummarizationPipeline;f.SuppressTokensAtBeginLogitsProcessor;f.Swin2SRForImageSuperResolution;f.Swin2SRImageProcessor;f.Swin2SRModel;f.Swin2SRPreTrainedModel;f.SwinForImageClassification;f.SwinForSemanticSegmentation;f.SwinModel;f.SwinPreTrainedModel;f.T5ForConditionalGeneration;f.T5Model;f.T5PreTrainedModel;f.T5Tokenizer;f.TableTransformerForObjectDetection;f.TableTransformerModel;f.TableTransformerObjectDetectionOutput;f.TableTransformerPreTrainedModel;f.TemperatureLogitsWarper;f.Tensor;f.Text2TextGenerationPipeline;f.TextClassificationPipeline;f.TextGenerationPipeline;f.TextStreamer;f.TextToAudioPipeline;f.TokenClassificationPipeline;f.TokenClassifierOutput;f.TokenizerModel;f.TopKLogitsWarper;f.TopPLogitsWarper;f.TrOCRForCausalLM;f.TrOCRPreTrainedModel;f.TranslationPipeline;f.UltravoxModel;f.UltravoxPreTrainedModel;f.UltravoxProcessor;f.UniSpeechForCTC;f.UniSpeechForSequenceClassification;f.UniSpeechModel;f.UniSpeechPreTrainedModel;f.UniSpeechSatForAudioFrameClassification;f.UniSpeechSatForCTC;f.UniSpeechSatForSequenceClassification;f.UniSpeechSatModel;f.UniSpeechSatPreTrainedModel;f.VLChatProcessor;f.VLMImageProcessor;f.ViTFeatureExtractor;f.ViTForImageClassification;f.ViTImageProcessor;f.ViTMAEModel;f.ViTMAEPreTrainedModel;f.ViTMSNForImageClassification;f.ViTMSNModel;f.ViTMSNPreTrainedModel;f.ViTModel;f.ViTPreTrainedModel;f.VisionEncoderDecoderModel;f.VitMatteForImageMatting;f.VitMatteImageProcessor;f.VitMattePreTrainedModel;f.VitPoseForPoseEstimation;f.VitPoseImageProcessor;f.VitPosePreTrainedModel;f.VitsModel;f.VitsModelOutput;f.VitsPreTrainedModel;f.VitsTokenizer;f.Wav2Vec2BertForCTC;f.Wav2Vec2BertForSequenceClassification;f.Wav2Vec2BertModel;f.Wav2Vec2BertPreTrainedModel;f.Wav2Vec2CTCTokenizer;f.Wav2Vec2FeatureExtractor;f.Wav2Vec2ForAudioFrameClassification;f.Wav2Vec2ForCTC;f.Wav2Vec2ForSequenceClassification;f.Wav2Vec2Model;f.Wav2Vec2PreTrainedModel;f.Wav2Vec2Processor;f.Wav2Vec2ProcessorWithLM;f.WavLMForAudioFrameClassification;f.WavLMForCTC;f.WavLMForSequenceClassification;f.WavLMForXVector;f.WavLMModel;f.WavLMPreTrainedModel;f.WeSpeakerFeatureExtractor;f.WeSpeakerResNetModel;f.WeSpeakerResNetPreTrainedModel;f.WhisperFeatureExtractor;f.WhisperForConditionalGeneration;f.WhisperModel;f.WhisperPreTrainedModel;f.WhisperProcessor;f.WhisperTextStreamer;f.WhisperTimeStampLogitsProcessor;f.WhisperTokenizer;f.XLMForQuestionAnswering;f.XLMForSequenceClassification;f.XLMForTokenClassification;f.XLMModel;f.XLMPreTrainedModel;f.XLMRobertaForMaskedLM;f.XLMRobertaForQuestionAnswering;f.XLMRobertaForSequenceClassification;f.XLMRobertaForTokenClassification;f.XLMRobertaModel;f.XLMRobertaPreTrainedModel;f.XLMRobertaTokenizer;f.XLMTokenizer;f.XLMWithLMHeadModel;f.XVectorOutput;f.YolosFeatureExtractor;f.YolosForObjectDetection;f.YolosImageProcessor;f.YolosModel;f.YolosObjectDetectionOutput;f.YolosPreTrainedModel;f.ZeroShotAudioClassificationPipeline;f.ZeroShotClassificationPipeline;f.ZeroShotImageClassificationPipeline;f.ZeroShotObjectDetectionPipeline;f.bankers_round;f.cat;f.cos_sim;f.dot;f.dynamic_time_warping;f.env;f.full;f.full_like;f.getKeyValueShapes;f.hamming;f.hanning;f.interpolate;f.interpolate_4d;f.interpolate_data;f.is_chinese_char;f.layer_norm;f.load_image;f.load_video;f.log_softmax;f.magnitude;f.matmul;f.max;f.mean;f.mean_pooling;f.medianFilter;f.mel_filter_bank;f.min;f.ones;f.ones_like;f.permute;f.permute_data;var CT=f.pipeline;f.quantize_embeddings;f.rand;f.read_audio;f.rfft;f.round;f.slice;f.softmax;f.spectrogram;f.stack;f.std_mean;f.topk;f.window_function;f.zeros;f.zeros_like;export{CT as pipeline};
